/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/jvm/core/BootstrapClassLoader.ts":
/*!**********************************************!*\
  !*** ./src/jvm/core/BootstrapClassLoader.ts ***!
  \**********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.parseDescriptor = exports.getConstantPoolInfo = exports.getArgumentsAndReturnType = void 0;\r\nvar JavaClass_1 = __importDefault(__webpack_require__(/*! ./cfl/JavaClass */ \"./src/jvm/core/cfl/JavaClass.ts\"));\r\nvar ConstantPoolInfo_1 = __webpack_require__(/*! ../models/info/ConstantPoolInfo */ \"./src/jvm/models/info/ConstantPoolInfo.ts\");\r\nvar ByteBuffer_1 = __webpack_require__(/*! ../utils/ByteBuffer */ \"./src/jvm/utils/ByteBuffer.ts\");\r\nvar AttributeInfo_1 = __webpack_require__(/*! ../models/info/AttributeInfo */ \"./src/jvm/models/info/AttributeInfo.ts\");\r\nvar Log_1 = __webpack_require__(/*! ../utils/Log */ \"./src/jvm/utils/Log.ts\");\r\nvar ExceptionHandler_1 = __webpack_require__(/*! ../utils/ExceptionHandler */ \"./src/jvm/utils/ExceptionHandler.ts\");\r\nvar BootstrapClassLoader = /** @class */ (function () {\r\n    function BootstrapClassLoader() {\r\n    }\r\n    BootstrapClassLoader.getInstance = function () {\r\n        return BootstrapClassLoader.INSTANCE;\r\n    };\r\n    BootstrapClassLoader.prototype.setRuntimeDataArea = function (runtimeDataArea) {\r\n        if (this.runtimeDataArea == null) {\r\n            this.runtimeDataArea = runtimeDataArea;\r\n        }\r\n    };\r\n    BootstrapClassLoader.prototype.findClass = function (name) {\r\n        var _a, _b;\r\n        if (name.startsWith(\"[\")) {\r\n            name = name.substring(1);\r\n        }\r\n        if (name.startsWith(\"L\")) {\r\n            name = name.substring(1);\r\n        }\r\n        if (name.endsWith(\";\")) {\r\n            name = name.substring(0, name.length - 1);\r\n        }\r\n        if (JavaClass_1.default.isPrimitive(name)) {\r\n            name = JavaClass_1.default.box(name);\r\n        }\r\n        (0, Log_1.logClass)(\"FINDCLASS\", name);\r\n        if (!(this.runtimeDataArea.\r\n            classHeap[name] == null))\r\n            return this.runtimeDataArea.classHeap[name];\r\n        if (this.runtimeDataArea.loadedClasses[name + \".class\"]) {\r\n            return this.defineClass(name, this.runtimeDataArea.loadedClasses[name + \".class\"]);\r\n        }\r\n        var fileName = \"\";\r\n        if (JavaClass_1.default.getPrimitiveName(name)) {\r\n            fileName = JavaClass_1.default.getPrimitiveName(name).split(\".\").join(\"/\") + \".class\";\r\n        }\r\n        else {\r\n            fileName = name.split(\".\").join(\"/\") + \".class\";\r\n        }\r\n        var unzipped = (_b = (_a = this.runtimeDataArea.loadedJars.filter(function (value) { return !(value.unzipped[fileName] == null); })) === null || _a === void 0 ? void 0 : _a[0]) === null || _b === void 0 ? void 0 : _b.unzipped;\r\n        if (unzipped == null) {\r\n            (0, ExceptionHandler_1.throwException)(\"java.lang.ClassNotFoundException: \" + name, this.runtimeDataArea);\r\n            return null;\r\n        }\r\n        return this.defineClass(name, unzipped[fileName]);\r\n    };\r\n    BootstrapClassLoader.prototype.defineClass = function (name, array, off) {\r\n        if (off === void 0) { off = 0; }\r\n        var buffer = new ByteBuffer_1.ByteBuffer(array.buffer);\r\n        buffer.offset = off;\r\n        var magic = buffer.getUint32();\r\n        var minorVersion = buffer.getUint16();\r\n        var majorVersion = buffer.getUint16();\r\n        var constantPoolCount = buffer.getUint16();\r\n        var constantPool = [];\r\n        for (var i = 1; i < constantPoolCount; i++) {\r\n            var tag = buffer.getUint8();\r\n            var info = void 0;\r\n            switch (tag) {\r\n                case ConstantPoolInfo_1.CONSTANT_CLASS:\r\n                    info = {\r\n                        tag: tag,\r\n                        nameIndex: buffer.getUint16()\r\n                    };\r\n                    break;\r\n                case ConstantPoolInfo_1.CONSTANT_FIELD_REF:\r\n                case ConstantPoolInfo_1.CONSTANT_METHOD_REF:\r\n                case ConstantPoolInfo_1.CONSTANT_INTERFACE_METHOD_REF:\r\n                    info = {\r\n                        tag: tag,\r\n                        classIndex: buffer.getUint16(),\r\n                        nameAndTypeIndex: buffer.getUint16()\r\n                    };\r\n                    break;\r\n                case ConstantPoolInfo_1.CONSTANT_STRING:\r\n                    info = {\r\n                        tag: tag,\r\n                        stringIndex: buffer.getUint16()\r\n                    };\r\n                    break;\r\n                case ConstantPoolInfo_1.CONSTANT_INTEGER:\r\n                    info = {\r\n                        tag: tag,\r\n                        bytes: [buffer.getUint8(), buffer.getUint8(), buffer.getUint8(), buffer.getUint8()]\r\n                    };\r\n                    break;\r\n                case ConstantPoolInfo_1.CONSTANT_FLOAT:\r\n                    info = {\r\n                        tag: tag,\r\n                        bytes: [buffer.getUint8(), buffer.getUint8(), buffer.getUint8(), buffer.getUint8()]\r\n                    };\r\n                    break;\r\n                case ConstantPoolInfo_1.CONSTANT_LONG:\r\n                    info = {\r\n                        tag: tag,\r\n                        highBytes: buffer.getUint32(),\r\n                        lowBytes: buffer.getUint32()\r\n                    };\r\n                    break;\r\n                case ConstantPoolInfo_1.CONSTANT_DOUBLE:\r\n                    info = {\r\n                        tag: tag,\r\n                        highBytes: buffer.getUint32(),\r\n                        lowBytes: buffer.getUint32()\r\n                    };\r\n                    break;\r\n                case ConstantPoolInfo_1.CONSTANT_NAME_AND_TYPE:\r\n                    info = {\r\n                        tag: tag,\r\n                        nameIndex: buffer.getUint16(),\r\n                        descriptorIndex: buffer.getUint16()\r\n                    };\r\n                    break;\r\n                case ConstantPoolInfo_1.CONSTANT_UTF8:\r\n                    var length_1 = buffer.getUint16();\r\n                    var utf8Buffer = new ByteBuffer_1.ByteBuffer(new ArrayBuffer(length_1));\r\n                    for (var j = 0; j < length_1; j++) {\r\n                        utf8Buffer.setUint8(buffer.getUint8());\r\n                    }\r\n                    info = {\r\n                        tag: tag,\r\n                        length: length_1,\r\n                        bytes: utf8Buffer\r\n                    };\r\n                    break;\r\n                case ConstantPoolInfo_1.CONSTANT_METHOD_HANDLE:\r\n                    info = {\r\n                        tag: tag,\r\n                        referenceKind: buffer.getUint8(),\r\n                        referenceIndex: buffer.getUint16()\r\n                    };\r\n                    break;\r\n                case ConstantPoolInfo_1.CONSTANT_METHOD_TYPE:\r\n                    info = {\r\n                        tag: tag,\r\n                        descriptorIndex: buffer.getUint16()\r\n                    };\r\n                    break;\r\n                case ConstantPoolInfo_1.CONSTANT_INVOKE_DYNAMIC:\r\n                    info = {\r\n                        tag: tag,\r\n                        bootstrapMethodAttrIndex: buffer.getUint16(),\r\n                        nameAndTypeIndex: buffer.getUint16()\r\n                    };\r\n                    break;\r\n            }\r\n            constantPool.push({\r\n                tag: tag,\r\n                id: i,\r\n                info: info\r\n            });\r\n            if (tag === ConstantPoolInfo_1.CONSTANT_LONG || tag === ConstantPoolInfo_1.CONSTANT_DOUBLE)\r\n                i += 1;\r\n        }\r\n        var accessFlags = buffer.getUint16();\r\n        var thisClass = buffer.getUint16();\r\n        var superClass = buffer.getUint16();\r\n        var interfacesCount = buffer.getUint16();\r\n        var interfaces = [];\r\n        for (var i = 0; i < interfacesCount; i++) {\r\n            interfaces.push(buffer.getUint16());\r\n        }\r\n        var fieldsCount = buffer.getUint16();\r\n        var fields = [];\r\n        for (var i = 0; i < fieldsCount; i++) {\r\n            var accessFlags_1 = buffer.getUint16();\r\n            var nameIndex = buffer.getUint16();\r\n            var descriptorIndex = buffer.getUint16();\r\n            var attributesCount_1 = buffer.getUint16();\r\n            var attributes_1 = (0, AttributeInfo_1.readAttributes)(constantPool, attributesCount_1, buffer);\r\n            fields.push({\r\n                accessFlags: accessFlags_1,\r\n                nameIndex: nameIndex,\r\n                descriptorIndex: descriptorIndex,\r\n                attributesCount: attributesCount_1,\r\n                attributes: attributes_1\r\n            });\r\n        }\r\n        var methodsCount = buffer.getUint16();\r\n        var methods = [];\r\n        for (var i = 0; i < methodsCount; i++) {\r\n            var accessFlags_2 = buffer.getUint16();\r\n            var nameIndex = buffer.getUint16();\r\n            var descriptorIndex = buffer.getUint16();\r\n            var attributeCount = buffer.getUint16();\r\n            var attributes_2 = (0, AttributeInfo_1.readAttributes)(constantPool, attributeCount, buffer);\r\n            methods.push({\r\n                accessFlags: accessFlags_2,\r\n                nameIndex: nameIndex,\r\n                descriptorIndex: descriptorIndex,\r\n                attributesCount: attributeCount,\r\n                attributes: attributes_2\r\n            });\r\n        }\r\n        var attributesCount = buffer.getUint16();\r\n        var attributes = (0, AttributeInfo_1.readAttributes)(constantPool, attributesCount, buffer);\r\n        var klass = new JavaClass_1.default(name.split(\"/\").join(\".\"));\r\n        klass.constantPool = constantPool;\r\n        klass.accessFlags = accessFlags;\r\n        klass.thisClassIndex = thisClass;\r\n        klass.superClassIndex = superClass;\r\n        klass.interfacesCount = interfacesCount;\r\n        klass.interfaces = interfaces;\r\n        klass.fieldsCount = fieldsCount;\r\n        klass.fieldInfos = fields;\r\n        klass.methodsCount = methodsCount;\r\n        klass.methodInfos = methods;\r\n        klass.attributesCount = attributesCount;\r\n        klass.attributes = attributes;\r\n        klass.init();\r\n        this.runtimeDataArea.classHeap[name] = klass;\r\n        return klass;\r\n    };\r\n    BootstrapClassLoader.INSTANCE = new BootstrapClassLoader();\r\n    return BootstrapClassLoader;\r\n}());\r\nexports[\"default\"] = BootstrapClassLoader;\r\nvar getArgumentsAndReturnType = function (descriptor) {\r\n    var returnTypeSplit = descriptor.split(\")\");\r\n    return [(0, exports.parseDescriptor)(descriptor), returnTypeSplit[returnTypeSplit.length - 1]];\r\n};\r\nexports.getArgumentsAndReturnType = getArgumentsAndReturnType;\r\nvar getConstantPoolInfo = function (constantPool, index) {\r\n    return constantPool.filter(function (constant) { return constant.id === index; })[0];\r\n};\r\nexports.getConstantPoolInfo = getConstantPoolInfo;\r\nvar parseDescriptor = function (descriptor) {\r\n    var _a;\r\n    var temp = (_a = descriptor.match(\"(?<=\\\\()[^\\\\(\\\\)]+(?=\\\\))\")) === null || _a === void 0 ? void 0 : _a[0];\r\n    if (temp == null)\r\n        return [];\r\n    var primitives = [\"B\", \"C\", \"D\", \"F\", \"I\", \"J\", \"S\", \"Z\"];\r\n    var args = [];\r\n    var STATE_NORMAL = 0;\r\n    var STATE_OBJECT = 1;\r\n    var state = STATE_NORMAL;\r\n    var isArray = false;\r\n    var objectName = \"\";\r\n    temp.split(\"\").forEach(function (char) {\r\n        switch (state) {\r\n            case STATE_NORMAL: {\r\n                if (primitives.includes(char)) {\r\n                    args.push((isArray ? \"[\" : \"\") + char);\r\n                    isArray = false;\r\n                }\r\n                else if (char === \"L\")\r\n                    state = STATE_OBJECT;\r\n                else if (char === \"[\")\r\n                    isArray = true;\r\n                break;\r\n            }\r\n            case STATE_OBJECT: {\r\n                if (char !== \";\")\r\n                    objectName += char;\r\n                else {\r\n                    args.push((isArray ? \"[\" : \"\") + objectName);\r\n                    isArray = false;\r\n                    objectName = \"\";\r\n                    state = STATE_NORMAL;\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    });\r\n    return args;\r\n};\r\nexports.parseDescriptor = parseDescriptor;\r\n\n\n//# sourceURL=webpack://churu-vm/./src/jvm/core/BootstrapClassLoader.ts?");

/***/ }),

/***/ "./src/jvm/core/cfl/ClassFile.ts":
/*!***************************************!*\
  !*** ./src/jvm/core/cfl/ClassFile.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nvar ClassFile = /** @class */ (function () {\r\n    function ClassFile() {\r\n    }\r\n    return ClassFile;\r\n}());\r\nexports[\"default\"] = ClassFile;\r\n\n\n//# sourceURL=webpack://churu-vm/./src/jvm/core/cfl/ClassFile.ts?");

/***/ }),

/***/ "./src/jvm/core/cfl/JavaClass.ts":
/*!***************************************!*\
  !*** ./src/jvm/core/cfl/JavaClass.ts ***!
  \***************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Method = exports.Executable = exports.Field = exports.Member = void 0;\r\nvar ConstantPoolInfo_1 = __webpack_require__(/*! ../../models/info/ConstantPoolInfo */ \"./src/jvm/models/info/ConstantPoolInfo.ts\");\r\nvar ClassFile_1 = __importDefault(__webpack_require__(/*! ./ClassFile */ \"./src/jvm/core/cfl/ClassFile.ts\"));\r\nvar BootstrapClassLoader_1 = __importStar(__webpack_require__(/*! ../BootstrapClassLoader */ \"./src/jvm/core/BootstrapClassLoader.ts\"));\r\nvar JavaClass = /** @class */ (function (_super) {\r\n    __extends(JavaClass, _super);\r\n    function JavaClass(name) {\r\n        var _this = _super.call(this) || this;\r\n        _this.declaredFields = [];\r\n        _this.declaredMethods = [];\r\n        _this.superClass = null;\r\n        _this.initializedStatic = false;\r\n        _this.classObject = null;\r\n        _this.name = name;\r\n        return _this;\r\n    }\r\n    JavaClass.prototype.init = function () {\r\n        var _this = this;\r\n        if (this.initialized)\r\n            return;\r\n        // initialize fields\r\n        this.fieldInfos.forEach(function (value) { return _this.declaredFields.push(new Field(_this, value)); });\r\n        // initialize methods\r\n        this.methodInfos.forEach(function (value) { return _this.declaredMethods.push(new Method(_this, value)); });\r\n        // set superclass recursively\r\n        this.setSuperClass(this.superClassIndex);\r\n        this.initialized = true;\r\n    };\r\n    JavaClass.prototype.initStatic = function (thread) {\r\n        if (!this.initializedStatic && this.getDeclaredMethod(\"<clinit>\") !== null) {\r\n            this.initializedStatic = true;\r\n            thread.invokeMethod(\"<clinit>\", \"()V\", this, [], null);\r\n        }\r\n    };\r\n    JavaClass.prototype.setSuperClass = function (superClassIndex) {\r\n        // if this class is java.lang.Object\r\n        if (superClassIndex == 0) {\r\n            this.superClass = null;\r\n            return;\r\n        }\r\n        var name = (0, ConstantPoolInfo_1.readUtf8FromConstantPool)(this.constantPool, this.constantPool.filter(function (value) { return value.id == superClassIndex; })[0].info.nameIndex).split(\"/\").join(\".\");\r\n        this.superClass = BootstrapClassLoader_1.default.getInstance().findClass(name);\r\n    };\r\n    JavaClass.prototype.getSimpleName = function () {\r\n        return this.name.split(\".\").reverse()[0];\r\n    };\r\n    JavaClass.prototype.getDeclaredField = function (name) {\r\n        var _a;\r\n        return (_a = this.declaredFields.filter(function (value) { return value.name == name; })) === null || _a === void 0 ? void 0 : _a[0];\r\n    };\r\n    JavaClass.prototype.getDeclaredFields = function () {\r\n        return this.declaredFields;\r\n    };\r\n    JavaClass.prototype.getFields = function () {\r\n        var result = [];\r\n        var addSuperClassFields = function (javaClass) {\r\n            if (javaClass.superClass !== null) {\r\n                result.push.apply(result, javaClass.declaredFields);\r\n                addSuperClassFields(javaClass.superClass);\r\n            }\r\n            return javaClass.declaredFields;\r\n        };\r\n        addSuperClassFields(this);\r\n        return result;\r\n    };\r\n    JavaClass.prototype.getDeclaredMethod = function (name) {\r\n        var _a;\r\n        return (_a = this.declaredMethods.filter(function (value) { return value.name == name; })) === null || _a === void 0 ? void 0 : _a[0];\r\n    };\r\n    JavaClass.prototype.getMethods = function () {\r\n        var result = [];\r\n        var addSuperClassMethods = function (javaClass) {\r\n            if (javaClass.superClass !== null) {\r\n                result.push.apply(result, javaClass.declaredMethods);\r\n                addSuperClassMethods(javaClass.superClass);\r\n            }\r\n            return javaClass.declaredMethods;\r\n        };\r\n        addSuperClassMethods(this);\r\n        return result;\r\n    };\r\n    JavaClass.prototype.setClassObject = function (obj) {\r\n        if (this.classObject == null)\r\n            this.classObject = obj;\r\n    };\r\n    JavaClass.prototype.getClassObject = function () {\r\n        return this.classObject;\r\n    };\r\n    JavaClass.isPrimitive = function (className) {\r\n        return !(this.wrapperMapping[className] == null);\r\n    };\r\n    JavaClass.isWrappedPrimitive = function (className) {\r\n        return this.wrappers.includes(className);\r\n    };\r\n    JavaClass.getPrimitiveName = function (className) {\r\n        return this.primitives[className];\r\n    };\r\n    JavaClass.box = function (className) {\r\n        return this.wrapperMapping[className];\r\n    };\r\n    JavaClass.prototype.getFieldsCount = function () {\r\n        return this.getFields().length;\r\n    };\r\n    JavaClass.wrapperMapping = {\r\n        \"B\": \"java.lang.Byte\",\r\n        \"C\": \"java.lang.Character\",\r\n        \"D\": \"java.lang.Double\",\r\n        \"F\": \"java.lang.Float\",\r\n        \"I\": \"java.lang.Integer\",\r\n        \"J\": \"java.lang.Long\",\r\n        \"S\": \"java.lang.Short\",\r\n        \"Z\": \"java.lang.Boolean\"\r\n    };\r\n    JavaClass.wrappers = [\r\n        \"java.lang.Byte\",\r\n        \"java.lang.Character\",\r\n        \"java.lang.Double\",\r\n        \"java.lang.Float\",\r\n        \"java.lang.Integer\",\r\n        \"java.lang.Long\",\r\n        \"java.lang.Short\",\r\n        \"java.lang.Boolean\"\r\n    ];\r\n    JavaClass.primitives = {\r\n        \"byte\": \"java.lang.Byte\",\r\n        \"char\": \"java.lang.Character\",\r\n        \"double\": \"java.lang.Double\",\r\n        \"float\": \"java.lang.Float\",\r\n        \"int\": \"java.lang.Integer\",\r\n        \"long\": \"java.lang.Long\",\r\n        \"short\": \"java.lang.Short\",\r\n        \"boolean\": \"java.lang.Boolean\",\r\n        \"void\": \"java.lang.Void\"\r\n    };\r\n    return JavaClass;\r\n}(ClassFile_1.default));\r\nexports[\"default\"] = JavaClass;\r\nvar Member = /** @class */ (function () {\r\n    function Member(declaringClass, typeName, modifiers, name, synthetic) {\r\n        this.declaringClass = declaringClass;\r\n        this.typeName = typeName;\r\n        this.modifiers = modifiers;\r\n        this.name = name;\r\n        this.synthetic = synthetic;\r\n    }\r\n    return Member;\r\n}());\r\nexports.Member = Member;\r\nvar Field = /** @class */ (function (_super) {\r\n    __extends(Field, _super);\r\n    function Field(declaringClass, info) {\r\n        return _super.call(this, declaringClass, (0, BootstrapClassLoader_1.getArgumentsAndReturnType)((0, ConstantPoolInfo_1.readUtf8FromConstantPool)(declaringClass.constantPool, info.descriptorIndex))[1].split(\"/\").join(\".\"), info.accessFlags, (0, ConstantPoolInfo_1.readUtf8FromConstantPool)(declaringClass.constantPool, info.nameIndex), false) || this;\r\n    }\r\n    return Field;\r\n}(Member));\r\nexports.Field = Field;\r\nvar Executable = /** @class */ (function () {\r\n    function Executable(declaredClass, parameterCount, modifiers, name, synthetic, varArgs) {\r\n        this.declaredClass = declaredClass;\r\n        this.parameterCount = parameterCount;\r\n        this.modifiers = modifiers;\r\n        this.name = name;\r\n        this.synthetic = synthetic;\r\n        this.varArgs = varArgs;\r\n    }\r\n    return Executable;\r\n}());\r\nexports.Executable = Executable;\r\nvar Method = /** @class */ (function (_super) {\r\n    __extends(Method, _super);\r\n    function Method(declaredClass, methodInfo) {\r\n        return _super.call(this, declaredClass, (0, BootstrapClassLoader_1.getArgumentsAndReturnType)((0, ConstantPoolInfo_1.readUtf8FromConstantPool)(declaredClass.constantPool, methodInfo.descriptorIndex))[0].length, methodInfo.accessFlags, (0, ConstantPoolInfo_1.readUtf8FromConstantPool)(declaredClass.constantPool, methodInfo.nameIndex), false, false) || this;\r\n    }\r\n    return Method;\r\n}(Executable));\r\nexports.Method = Method;\r\n\n\n//# sourceURL=webpack://churu-vm/./src/jvm/core/cfl/JavaClass.ts?");

/***/ }),

/***/ "./src/jvm/core/cfl/types.ts":
/*!***********************************!*\
  !*** ./src/jvm/core/cfl/types.ts ***!
  \***********************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.JavaObject = exports.JavaVariable = void 0;\r\nvar JavaClass_1 = __importDefault(__webpack_require__(/*! ./JavaClass */ \"./src/jvm/core/cfl/JavaClass.ts\"));\r\nvar JavaVariable = /** @class */ (function () {\r\n    function JavaVariable(typeName, value, name) {\r\n        if (name === void 0) { name = null; }\r\n        this.typeName = typeName;\r\n        this.name = name;\r\n        this.value = value;\r\n    }\r\n    return JavaVariable;\r\n}());\r\nexports.JavaVariable = JavaVariable;\r\nvar JavaObject = /** @class */ (function () {\r\n    function JavaObject(type, heapIndex, isArray) {\r\n        if (isArray === void 0) { isArray = false; }\r\n        this.initialized = false;\r\n        this.type = type;\r\n        this.heapIndex = heapIndex;\r\n        this.isArray = isArray;\r\n    }\r\n    JavaObject.prototype.init = function (runtimeDataArea) {\r\n        if (this.initialized)\r\n            return;\r\n        this.runtimeDataArea = runtimeDataArea;\r\n        var variables = runtimeDataArea.objectHeap[this.heapIndex];\r\n        var fields = this.type.getFields();\r\n        var field;\r\n        for (var i = 0; i < variables.length; i++) {\r\n            field = fields[i];\r\n            if (field.typeName === \"java.lang.Boolean\") {\r\n                variables[i] = new JavaVariable(field.typeName, false, field.name);\r\n            }\r\n            else if (field.typeName === \"B\") {\r\n                variables[i] = new JavaVariable(field.typeName, false, field.name);\r\n            }\r\n            else if (JavaClass_1.default.isPrimitive(field.typeName)) {\r\n                variables[i] = new JavaVariable(field.typeName, 0, field.name);\r\n            }\r\n            else if (JavaClass_1.default.isWrappedPrimitive(field.typeName)) {\r\n                variables[i] = new JavaVariable(field.typeName, 0, field.name);\r\n            }\r\n            else {\r\n                variables[i] = new JavaVariable(field.typeName, null, field.name);\r\n            }\r\n        }\r\n        this.initialized = true;\r\n    };\r\n    return JavaObject;\r\n}());\r\nexports.JavaObject = JavaObject;\r\n\n\n//# sourceURL=webpack://churu-vm/./src/jvm/core/cfl/types.ts?");

/***/ }),

/***/ "./src/jvm/lib/dev/itsu/event/EventTarget.ts":
/*!***************************************************!*\
  !*** ./src/jvm/lib/dev/itsu/event/EventTarget.ts ***!
  \***************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.EventTarget = void 0;\r\nvar types_1 = __webpack_require__(/*! ../../../../core/cfl/types */ \"./src/jvm/core/cfl/types.ts\");\r\nvar Utils_1 = __webpack_require__(/*! ../../../../utils/Utils */ \"./src/jvm/utils/Utils.ts\");\r\nvar EventTarget = /** @class */ (function (_super) {\r\n    __extends(EventTarget, _super);\r\n    function EventTarget() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    EventTarget.addEventListener = function (thread, klazz, obj, _type, _callback) {\r\n        var type = (0, Utils_1.getString)(thread.runtimeDataArea, _type);\r\n        document.getElementById((0, Utils_1.getString)(thread.runtimeDataArea, (0, Utils_1.getFieldValue)(obj, \"id\"))).addEventListener(type, function () { return thread.invokeMethod(\"accept\", \"(Ljava/lang/Object;)V\", _callback.type, [null], _callback); });\r\n    };\r\n    return EventTarget;\r\n}(types_1.JavaObject));\r\nexports.EventTarget = EventTarget;\r\n\n\n//# sourceURL=webpack://churu-vm/./src/jvm/lib/dev/itsu/event/EventTarget.ts?");

/***/ }),

/***/ "./src/jvm/lib/dev/itsu/node/Element.ts":
/*!**********************************************!*\
  !*** ./src/jvm/lib/dev/itsu/node/Element.ts ***!
  \**********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Element = void 0;\r\nvar Utils_1 = __webpack_require__(/*! ../../../../utils/Utils */ \"./src/jvm/utils/Utils.ts\");\r\nvar Node_1 = __webpack_require__(/*! ./Node */ \"./src/jvm/lib/dev/itsu/node/Node.ts\");\r\nvar Element = /** @class */ (function (_super) {\r\n    __extends(Element, _super);\r\n    function Element() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Element.insertAdjacentHTML = function (thread, klazz, obj, _position, _text) {\r\n        document.getElementById((0, Utils_1.getString)(thread.runtimeDataArea, (0, Utils_1.getFieldValue)(obj, \"id\"))).insertAdjacentHTML((0, Utils_1.getString)(obj.runtimeDataArea, _position), (0, Utils_1.getString)(obj.runtimeDataArea, _text));\r\n    };\r\n    Element.remove = function (thread, klazz, obj) {\r\n        document.getElementById((0, Utils_1.getString)(thread.runtimeDataArea, (0, Utils_1.getFieldValue)(obj, \"id\"))).remove();\r\n    };\r\n    return Element;\r\n}(Node_1.Node));\r\nexports.Element = Element;\r\n\n\n//# sourceURL=webpack://churu-vm/./src/jvm/lib/dev/itsu/node/Element.ts?");

/***/ }),

/***/ "./src/jvm/lib/dev/itsu/node/Node.ts":
/*!*******************************************!*\
  !*** ./src/jvm/lib/dev/itsu/node/Node.ts ***!
  \*******************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Node = void 0;\r\nvar EventTarget_1 = __webpack_require__(/*! ../event/EventTarget */ \"./src/jvm/lib/dev/itsu/event/EventTarget.ts\");\r\nvar Node = /** @class */ (function (_super) {\r\n    __extends(Node, _super);\r\n    function Node() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return Node;\r\n}(EventTarget_1.EventTarget));\r\nexports.Node = Node;\r\n\n\n//# sourceURL=webpack://churu-vm/./src/jvm/lib/dev/itsu/node/Node.ts?");

/***/ }),

/***/ "./src/jvm/lib/dev/itsu/node/html/HTMLElement.ts":
/*!*******************************************************!*\
  !*** ./src/jvm/lib/dev/itsu/node/html/HTMLElement.ts ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.HTMLElement = void 0;\r\nvar Utils_1 = __webpack_require__(/*! ../../../../../utils/Utils */ \"./src/jvm/utils/Utils.ts\");\r\nvar Element_1 = __webpack_require__(/*! ../Element */ \"./src/jvm/lib/dev/itsu/node/Element.ts\");\r\nvar HTMLElement = /** @class */ (function (_super) {\r\n    __extends(HTMLElement, _super);\r\n    function HTMLElement() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    HTMLElement.getInnerText = function (thread, klazz, obj) {\r\n        return obj.runtimeDataArea.createStringObject(thread, document.getElementById((0, Utils_1.getString)(thread.runtimeDataArea, (0, Utils_1.getFieldValue)(obj, \"id\"))).innerText);\r\n    };\r\n    HTMLElement.setInnerText = function (thread, klazz, obj, _innerText) {\r\n        document.getElementById((0, Utils_1.getString)(thread.runtimeDataArea, (0, Utils_1.getFieldValue)(obj, \"id\"))).innerText = (0, Utils_1.getString)(obj.runtimeDataArea, _innerText);\r\n    };\r\n    HTMLElement.getValue = function (thread, klazz, obj) {\r\n        return obj.runtimeDataArea.createStringObject(thread, document.getElementById((0, Utils_1.getString)(thread.runtimeDataArea, (0, Utils_1.getFieldValue)(obj, \"id\"))).value);\r\n    };\r\n    HTMLElement.setValue = function (thread, klazz, obj, _value) {\r\n        document.getElementById((0, Utils_1.getString)(thread.runtimeDataArea, (0, Utils_1.getFieldValue)(obj, \"id\"))).value = (0, Utils_1.getString)(obj.runtimeDataArea, _value);\r\n    };\r\n    return HTMLElement;\r\n}(Element_1.Element));\r\nexports.HTMLElement = HTMLElement;\r\n\n\n//# sourceURL=webpack://churu-vm/./src/jvm/lib/dev/itsu/node/html/HTMLElement.ts?");

/***/ }),

/***/ "./src/jvm/lib/java/lang/JavaObject.ts":
/*!*********************************************!*\
  !*** ./src/jvm/lib/java/lang/JavaObject.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.JavaObject = void 0;\r\nvar JavaObject = /** @class */ (function () {\r\n    function JavaObject() {\r\n    }\r\n    JavaObject.notifyAll = function (thread, klass, obj) {\r\n        // TODO\r\n    };\r\n    JavaObject.getClass = function (thread, klass, obj) {\r\n        return thread.runtimeDataArea.createClassObject(thread, klass);\r\n    };\r\n    // https://qiita.com/yoshi389111/items/9e34fe297bd908a36065#%E6%89%8B%E5%8B%95%E3%81%A7%E3%83%8F%E3%83%83%E3%82%B7%E3%83%A5%E8%A8%88%E7%AE%97\r\n    JavaObject.hashCode = function (thread, klass, obj) {\r\n        if (obj == null)\r\n            return 0;\r\n        var variables = thread.runtimeDataArea.objectHeap[obj.heapIndex];\r\n        var result = 17;\r\n        for (var _i = 0, variables_1 = variables; _i < variables_1.length; _i++) {\r\n            var variable = variables_1[_i];\r\n            var value = variable.value;\r\n            result *= 31;\r\n            if (typeof value === \"number\") {\r\n                result += value;\r\n            }\r\n            else if (value == null) {\r\n                result += 0;\r\n            }\r\n            else {\r\n                result += thread.invokeMethod(\"hashCode\", \"()I\", value.type, [], value);\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    return JavaObject;\r\n}());\r\nexports.JavaObject = JavaObject;\r\n\n\n//# sourceURL=webpack://churu-vm/./src/jvm/lib/java/lang/JavaObject.ts?");

/***/ }),

/***/ "./src/jvm/lib/java/lang/Thread.ts":
/*!*****************************************!*\
  !*** ./src/jvm/lib/java/lang/Thread.ts ***!
  \*****************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Thread = void 0;\r\nvar types_1 = __webpack_require__(/*! ../../../core/cfl/types */ \"./src/jvm/core/cfl/types.ts\");\r\nvar Thread = /** @class */ (function (_super) {\r\n    __extends(Thread, _super);\r\n    function Thread() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Thread.init = function (thread) {\r\n        if (this.current == null) {\r\n            var threadGroup = thread.runtimeDataArea.createObject(\"java.lang.ThreadGroup\");\r\n            thread.invokeMethod(\"<init>\", \"()V\", threadGroup.type, [], threadGroup);\r\n            var currentThread = thread.runtimeDataArea.createObject(\"java.lang.Thread\");\r\n            var variables = thread.runtimeDataArea.objectHeap[currentThread.heapIndex];\r\n            variables.filter(function (v) { return v.name == \"group\"; })[0].value = threadGroup;\r\n            variables.filter(function (v) { return v.name == \"name\"; })[0].value = thread.runtimeDataArea.createStringObject(thread, \"main\");\r\n            variables.filter(function (v) { return v.name == \"priority\"; })[0].value = 5;\r\n            this.current = currentThread;\r\n        }\r\n    };\r\n    Thread.registerNatives = function (thread, klass, obj) {\r\n        // klass.getDeclaredField(\"in\").staticValue = inputStream;\r\n    };\r\n    Thread.currentThread = function (thread, klass, obj) {\r\n        if (this.current == null) {\r\n            var threadGroup = thread.runtimeDataArea.createObject(\"java.lang.ThreadGroup\");\r\n            thread.invokeMethod(\"<init>\", \"()V\", threadGroup.type, [], threadGroup);\r\n            var currentThread = thread.runtimeDataArea.createObject(\"java.lang.Thread\");\r\n            var variables = thread.runtimeDataArea.objectHeap[currentThread.heapIndex];\r\n            variables.filter(function (v) { return v.name == \"group\"; })[0].value = threadGroup;\r\n            variables.filter(function (v) { return v.name == \"name\"; })[0].value = thread.runtimeDataArea.createStringObject(thread, \"main\");\r\n            variables.filter(function (v) { return v.name == \"priority\"; })[0].value = 5;\r\n            this.current = currentThread;\r\n        }\r\n        return this.current;\r\n    };\r\n    Thread.current = null;\r\n    return Thread;\r\n}(types_1.JavaObject));\r\nexports.Thread = Thread;\r\n\n\n//# sourceURL=webpack://churu-vm/./src/jvm/lib/java/lang/Thread.ts?");

/***/ }),

/***/ "./src/jvm/models/info/AttributeInfo.ts":
/*!**********************************************!*\
  !*** ./src/jvm/models/info/AttributeInfo.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.processEnclosingMethodAttribute = exports.processLocalVariableAttribute = exports.processStackMapAttribute = exports.processBootstrapMethodsAttribute = exports.processInnerClassesAttribute = exports.processLineNumberAttribute = exports.processCodeAttribute = exports.readAttributes = void 0;\r\nvar ByteBuffer_js_1 = __webpack_require__(/*! ../../utils/ByteBuffer.js */ \"./src/jvm/utils/ByteBuffer.js\");\r\nvar ConstantPoolInfo_js_1 = __webpack_require__(/*! ./ConstantPoolInfo.js */ \"./src/jvm/models/info/ConstantPoolInfo.js\");\r\nvar readAttributes = function (constantPool, length, buffer) {\r\n    var result = [];\r\n    for (var j = 0; j < length; j++) {\r\n        var attributeNameIndex = buffer.getUint16();\r\n        var attributeLength = buffer.getUint32();\r\n        var name_1 = (0, ConstantPoolInfo_js_1.readUtf8FromConstantPool)(constantPool, attributeNameIndex);\r\n        switch (name_1) {\r\n            case \"Code\": {\r\n                result.push((0, exports.processCodeAttribute)(constantPool, attributeNameIndex, attributeLength, buffer));\r\n                break;\r\n            }\r\n            case \"LineNumberTable\": {\r\n                result.push((0, exports.processLineNumberAttribute)(attributeNameIndex, attributeLength, buffer));\r\n                break;\r\n            }\r\n            case \"StackMapTable\": {\r\n                result.push((0, exports.processStackMapAttribute)(attributeNameIndex, attributeLength, buffer));\r\n                break;\r\n            }\r\n            case \"LocalVariableTable\": {\r\n                result.push((0, exports.processLocalVariableAttribute)(attributeNameIndex, attributeLength, buffer));\r\n                break;\r\n            }\r\n            case \"InnerClasses\": {\r\n                result.push((0, exports.processInnerClassesAttribute)(attributeNameIndex, attributeLength, buffer));\r\n                break;\r\n            }\r\n            case \"BootstrapMethods\": {\r\n                result.push((0, exports.processBootstrapMethodsAttribute)(attributeNameIndex, attributeLength, buffer));\r\n                break;\r\n            }\r\n            case \"EnclosingMethod\": {\r\n                result.push((0, exports.processEnclosingMethodAttribute)(attributeNameIndex, attributeLength, buffer));\r\n                break;\r\n            }\r\n            default: {\r\n                buffer.offset += attributeLength;\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n};\r\nexports.readAttributes = readAttributes;\r\nvar processCodeAttribute = function (constantPool, attributeNameIndex, attributeLength, buffer) {\r\n    var maxStack = buffer.getUint16();\r\n    var maxLocals = buffer.getUint16();\r\n    var codeLength = buffer.getUint32();\r\n    var code = new ByteBuffer_js_1.ByteBuffer(new ArrayBuffer(codeLength));\r\n    for (var i = 0; i < codeLength; i++) {\r\n        code.setUint8(buffer.getUint8());\r\n    }\r\n    var exceptionTableLength = buffer.getUint16();\r\n    var exceptionTable = [];\r\n    for (var i = 0; i < exceptionTableLength; i++) {\r\n        exceptionTable.push({\r\n            startPc: buffer.getUint16(),\r\n            endPc: buffer.getUint16(),\r\n            handlerPc: buffer.getUint16(),\r\n            catchType: buffer.getUint16()\r\n        });\r\n    }\r\n    var attributesCount = buffer.getUint16();\r\n    var attributes = [];\r\n    if (attributesCount > 0) {\r\n        attributes = (0, exports.readAttributes)(constantPool, attributesCount, buffer);\r\n    }\r\n    return {\r\n        attributeNameIndex: attributeNameIndex,\r\n        attributeLength: attributeLength,\r\n        info: [],\r\n        maxStack: maxStack,\r\n        maxLocals: maxLocals,\r\n        codeLength: codeLength,\r\n        code: code,\r\n        exceptionTableLength: exceptionTableLength,\r\n        exceptionTable: exceptionTable,\r\n        attributesCount: attributesCount,\r\n        attributes: attributes\r\n    };\r\n};\r\nexports.processCodeAttribute = processCodeAttribute;\r\nvar processLineNumberAttribute = function (attributeNameIndex, attributeLength, buffer) {\r\n    var lineNumberTableLength = buffer.getUint16();\r\n    var lineNumberTable = [];\r\n    for (var i = 0; i < lineNumberTableLength; i++) {\r\n        lineNumberTable.push({\r\n            startPc: buffer.getUint16(),\r\n            lineNumber: buffer.getUint16()\r\n        });\r\n    }\r\n    return {\r\n        attributeNameIndex: attributeNameIndex,\r\n        attributeLength: attributeLength,\r\n        info: [],\r\n        lineNumberTableLength: lineNumberTableLength,\r\n        lineNumberTable: lineNumberTable\r\n    };\r\n};\r\nexports.processLineNumberAttribute = processLineNumberAttribute;\r\nvar processInnerClassesAttribute = function (attributeNameIndex, attributeLength, buffer) {\r\n    var numberOfClasses = buffer.getUint16();\r\n    var innerClasses = [];\r\n    for (var i = 0; i < numberOfClasses; i++) {\r\n        innerClasses.push({\r\n            innerClassInfoIndex: buffer.getUint16(),\r\n            outerClassInfoIndex: buffer.getUint16(),\r\n            innerNameIndex: buffer.getUint16(),\r\n            innerClassAccessFlags: buffer.getUint16()\r\n        });\r\n    }\r\n    return {\r\n        attributeNameIndex: attributeNameIndex,\r\n        attributeLength: attributeLength,\r\n        info: [],\r\n        classes: innerClasses,\r\n        numberOfClasses: numberOfClasses\r\n    };\r\n};\r\nexports.processInnerClassesAttribute = processInnerClassesAttribute;\r\nvar processBootstrapMethodsAttribute = function (attributeNameIndex, attributeLength, buffer) {\r\n    var numBootstrapMethods = buffer.getUint16();\r\n    var methods = [];\r\n    for (var i = 0; i < numBootstrapMethods; i++) {\r\n        var bootstrapMethodRef = buffer.getUint16();\r\n        var numBootstrapMethods_1 = buffer.getUint16();\r\n        var args = [];\r\n        for (var j = 0; j < numBootstrapMethods_1; j++) {\r\n            args.push(buffer.getUint16());\r\n        }\r\n        methods.push({\r\n            bootstrapMethodRef: bootstrapMethodRef,\r\n            numBootstrapMethods: numBootstrapMethods_1,\r\n            bootstrapArguments: args\r\n        });\r\n    }\r\n    return {\r\n        attributeNameIndex: attributeNameIndex,\r\n        attributeLength: attributeLength,\r\n        info: [],\r\n        bootstrapMethods: methods,\r\n        numBootstrapMethods: numBootstrapMethods\r\n    };\r\n};\r\nexports.processBootstrapMethodsAttribute = processBootstrapMethodsAttribute;\r\nvar processStackMapAttribute = function (attributeNameIndex, attributeLength, buffer) {\r\n    var numberOfEntries = buffer.getUint16();\r\n    var entries = [];\r\n    var getVerificationTypeInfo = function (tag) {\r\n        switch (tag) {\r\n            case 0:\r\n            case 1:\r\n            case 2:\r\n            case 3:\r\n            case 4:\r\n            case 5:\r\n            case 6: {\r\n                return {\r\n                    info: {\r\n                        tag: tag\r\n                    }\r\n                };\r\n            }\r\n            case 7: {\r\n                return {\r\n                    info: {\r\n                        tag: tag,\r\n                        cpoolIndex: buffer.getUint16()\r\n                    }\r\n                };\r\n            }\r\n            case 8: {\r\n                return {\r\n                    info: {\r\n                        tag: tag,\r\n                        offset: buffer.getUint16()\r\n                    }\r\n                };\r\n            }\r\n        }\r\n    };\r\n    for (var i = 0; i < numberOfEntries; i++) {\r\n        var frameType = buffer.getUint8();\r\n        // same_frame\r\n        if (0 <= frameType && frameType <= 63) {\r\n            entries.push({\r\n                frame: {\r\n                    frameType: frameType\r\n                }\r\n            });\r\n            // same_locals_1_stack_item_frame\r\n        }\r\n        else if (64 <= frameType && frameType <= 127) {\r\n            entries.push({\r\n                frame: {\r\n                    frameType: frameType,\r\n                    stack: [getVerificationTypeInfo(buffer.getUint8())]\r\n                }\r\n            });\r\n            // same_locals_1_stack_item_frame_extended\r\n        }\r\n        else if (frameType == 247) {\r\n            entries.push({\r\n                frame: {\r\n                    frameType: frameType,\r\n                    offsetDelta: buffer.getUint16(),\r\n                    stack: [getVerificationTypeInfo(buffer.getUint8())]\r\n                }\r\n            });\r\n            // chop_frame\r\n        }\r\n        else if (248 <= frameType && frameType <= 250) {\r\n            entries.push({\r\n                frame: {\r\n                    frameType: frameType,\r\n                    offsetDelta: buffer.getUint16()\r\n                }\r\n            });\r\n            // same_frame_extended\r\n        }\r\n        else if (frameType == 251) {\r\n            entries.push({\r\n                frame: {\r\n                    frameType: frameType,\r\n                    offsetDelta: buffer.getUint16()\r\n                }\r\n            });\r\n            // append_frame\r\n        }\r\n        else if (252 <= frameType && frameType <= 254) {\r\n            var appendFrameOffsetDelta = buffer.getUint16();\r\n            var appendFrameLocals = [];\r\n            for (var j = 0; j < frameType - 251; j++) {\r\n                appendFrameLocals.push(getVerificationTypeInfo(buffer.getUint8()));\r\n            }\r\n            entries.push({\r\n                frame: {\r\n                    frameType: frameType,\r\n                    offsetDelta: appendFrameOffsetDelta,\r\n                    locals: appendFrameLocals\r\n                }\r\n            });\r\n            // full_frame\r\n        }\r\n        else if (frameType == 255) {\r\n            var fullFrameOffsetDelta = buffer.getUint16();\r\n            var numberOfLocals = buffer.getUint16();\r\n            var fullFrameLocals = [];\r\n            for (var j = 0; j < numberOfLocals; j++) {\r\n                fullFrameLocals.push(getVerificationTypeInfo(buffer.getUint8()));\r\n            }\r\n            var numberOfStackItems = buffer.getUint16();\r\n            var fullFrameStack = [];\r\n            for (var j = 0; j < numberOfStackItems; j++) {\r\n                fullFrameStack.push(getVerificationTypeInfo(buffer.getUint8()));\r\n            }\r\n            entries.push({\r\n                frame: {\r\n                    frameType: frameType,\r\n                    offsetDelta: fullFrameOffsetDelta,\r\n                    numberOfLocals: numberOfLocals,\r\n                    locals: fullFrameLocals,\r\n                    numberOfStackItems: numberOfStackItems,\r\n                    stack: fullFrameStack\r\n                }\r\n            });\r\n        }\r\n    }\r\n    return {\r\n        attributeNameIndex: attributeNameIndex,\r\n        attributeLength: attributeLength,\r\n        info: [],\r\n        numberOfEntries: numberOfEntries,\r\n        entries: entries\r\n    };\r\n};\r\nexports.processStackMapAttribute = processStackMapAttribute;\r\nvar processLocalVariableAttribute = function (attributeNameIndex, attributeLength, buffer) {\r\n    var localVariableTableLength = buffer.getUint16();\r\n    var localVariableTable = [];\r\n    for (var i = 0; i < localVariableTableLength; i++) {\r\n        localVariableTable.push({\r\n            startPc: buffer.getUint16(),\r\n            length: buffer.getUint16(),\r\n            nameIndex: buffer.getUint16(),\r\n            descriptorIndex: buffer.getUint16(),\r\n            index: buffer.getUint16()\r\n        });\r\n    }\r\n    return {\r\n        attributeNameIndex: attributeNameIndex,\r\n        attributeLength: attributeLength,\r\n        localVariableTable: localVariableTable,\r\n        localVariableTableLength: localVariableTableLength,\r\n        info: []\r\n    };\r\n};\r\nexports.processLocalVariableAttribute = processLocalVariableAttribute;\r\nvar processEnclosingMethodAttribute = function (attributeNameIndex, attributeLength, buffer) {\r\n    var classIndex = buffer.getUint16();\r\n    var methodIndex = buffer.getUint16();\r\n    return {\r\n        attributeNameIndex: attributeNameIndex,\r\n        attributeLength: attributeLength,\r\n        classIndex: classIndex,\r\n        methodIndex: methodIndex,\r\n        info: []\r\n    };\r\n};\r\nexports.processEnclosingMethodAttribute = processEnclosingMethodAttribute;\r\n\n\n//# sourceURL=webpack://churu-vm/./src/jvm/models/info/AttributeInfo.ts?");

/***/ }),

/***/ "./src/jvm/models/info/ConstantPoolInfo.ts":
/*!*************************************************!*\
  !*** ./src/jvm/models/info/ConstantPoolInfo.ts ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.readUtf8FromConstantPool = exports.isConstantDoubleInfo = exports.isConstantLongInfo = exports.isConstantStringInfo = exports.isConstantFieldRefInfo = exports.CONSTANT_INVOKE_DYNAMIC = exports.CONSTANT_METHOD_TYPE = exports.CONSTANT_METHOD_HANDLE = exports.CONSTANT_UTF8 = exports.CONSTANT_NAME_AND_TYPE = exports.CONSTANT_DOUBLE = exports.CONSTANT_LONG = exports.CONSTANT_FLOAT = exports.CONSTANT_INTEGER = exports.CONSTANT_STRING = exports.CONSTANT_INTERFACE_METHOD_REF = exports.CONSTANT_METHOD_REF = exports.CONSTANT_FIELD_REF = exports.CONSTANT_CLASS = void 0;\r\nvar ClassFileLoader_js_1 = __webpack_require__(/*! ../../core/cfl/ClassFileLoader.js */ \"./src/jvm/core/cfl/ClassFileLoader.js\");\r\nexports.CONSTANT_CLASS = 7;\r\nexports.CONSTANT_FIELD_REF = 9;\r\nexports.CONSTANT_METHOD_REF = 10;\r\nexports.CONSTANT_INTERFACE_METHOD_REF = 11;\r\nexports.CONSTANT_STRING = 8;\r\nexports.CONSTANT_INTEGER = 3;\r\nexports.CONSTANT_FLOAT = 4;\r\nexports.CONSTANT_LONG = 5;\r\nexports.CONSTANT_DOUBLE = 6;\r\nexports.CONSTANT_NAME_AND_TYPE = 12;\r\nexports.CONSTANT_UTF8 = 1;\r\nexports.CONSTANT_METHOD_HANDLE = 15;\r\nexports.CONSTANT_METHOD_TYPE = 16;\r\nexports.CONSTANT_INVOKE_DYNAMIC = 18;\r\nvar isConstantFieldRefInfo = function (arg) {\r\n    return typeof arg === \"object\" &&\r\n        arg !== null &&\r\n        typeof arg.tag === \"number\" &&\r\n        typeof arg.classIndex === \"number\" &&\r\n        typeof arg.nameAndTypeIndex === \"number\";\r\n};\r\nexports.isConstantFieldRefInfo = isConstantFieldRefInfo;\r\nvar isConstantStringInfo = function (arg) {\r\n    return typeof arg === \"object\" &&\r\n        arg !== null &&\r\n        typeof arg.tag === \"number\" &&\r\n        typeof arg.stringIndex === \"number\";\r\n};\r\nexports.isConstantStringInfo = isConstantStringInfo;\r\nvar isConstantLongInfo = function (arg) {\r\n    return typeof arg === \"object\" &&\r\n        arg !== null &&\r\n        typeof arg.tag === \"number\" &&\r\n        typeof arg.highBytes === \"number\" &&\r\n        typeof arg.lowBytes === \"number\";\r\n};\r\nexports.isConstantLongInfo = isConstantLongInfo;\r\nvar isConstantDoubleInfo = function (arg) {\r\n    return typeof arg === \"object\" &&\r\n        arg !== null &&\r\n        typeof arg.tag === \"number\" &&\r\n        typeof arg.highBytes === \"number\" &&\r\n        typeof arg.lowBytes === \"number\";\r\n};\r\nexports.isConstantDoubleInfo = isConstantDoubleInfo;\r\nvar readUtf8FromConstantPool = function (constantPool, index) {\r\n    return new TextDecoder(\"utf-8\").decode((0, ClassFileLoader_js_1.getConstantPoolInfo)(constantPool, index).info.bytes.view);\r\n};\r\nexports.readUtf8FromConstantPool = readUtf8FromConstantPool;\r\n\n\n//# sourceURL=webpack://churu-vm/./src/jvm/models/info/ConstantPoolInfo.ts?");

/***/ }),

/***/ "./src/jvm/utils/ByteBuffer.ts":
/*!*************************************!*\
  !*** ./src/jvm/utils/ByteBuffer.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ByteBuffer = void 0;\r\nvar ByteBuffer = /** @class */ (function () {\r\n    function ByteBuffer(array) {\r\n        this.offset = 0;\r\n        this.view = new DataView(array);\r\n    }\r\n    ByteBuffer.prototype.getInt8 = function () {\r\n        var result = this.view.getInt8(this.offset);\r\n        this.offset += 1;\r\n        return result;\r\n    };\r\n    ByteBuffer.prototype.getInt16 = function () {\r\n        var result = this.view.getInt8(this.offset);\r\n        this.offset += 2;\r\n        return result;\r\n    };\r\n    ByteBuffer.prototype.getInt32 = function () {\r\n        var result = this.view.getInt8(this.offset);\r\n        this.offset += 4;\r\n        return result;\r\n    };\r\n    ByteBuffer.prototype.getFloat32 = function () {\r\n        var result = this.view.getFloat32(this.offset);\r\n        this.offset += 4;\r\n        return result;\r\n    };\r\n    ByteBuffer.prototype.getFloat64 = function () {\r\n        var result = this.view.getFloat64(this.offset);\r\n        this.offset += 8;\r\n        return result;\r\n    };\r\n    ByteBuffer.prototype.getUint8 = function () {\r\n        var result = this.view.getUint8(this.offset);\r\n        this.offset += 1;\r\n        return result;\r\n    };\r\n    ByteBuffer.prototype.getUint16 = function () {\r\n        var result = this.view.getUint16(this.offset);\r\n        this.offset += 2;\r\n        return result;\r\n    };\r\n    ByteBuffer.prototype.getUint32 = function () {\r\n        var result = this.view.getUint32(this.offset);\r\n        this.offset += 4;\r\n        return result;\r\n    };\r\n    ByteBuffer.prototype.getBigInt64 = function () {\r\n        var result = this.view.getBigInt64(this.offset);\r\n        this.offset += 8;\r\n        return result;\r\n    };\r\n    ByteBuffer.prototype.setInt8 = function (n) {\r\n        this.view.setInt8(this.offset, n);\r\n        this.offset += 1;\r\n    };\r\n    ByteBuffer.prototype.setInt16 = function (n) {\r\n        this.view.setInt32(this.offset, n);\r\n        this.offset += 2;\r\n    };\r\n    ByteBuffer.prototype.setInt32 = function (n) {\r\n        this.view.setInt32(this.offset, n);\r\n        this.offset += 4;\r\n    };\r\n    ByteBuffer.prototype.setFloat32 = function (n) {\r\n        this.view.setFloat32(this.offset, n);\r\n        this.offset += 4;\r\n    };\r\n    ByteBuffer.prototype.setFloat64 = function (n) {\r\n        this.view.setFloat64(this.offset, n);\r\n        this.offset += 8;\r\n    };\r\n    ByteBuffer.prototype.setUint8 = function (n) {\r\n        this.view.setUint8(this.offset, n);\r\n        this.offset += 1;\r\n    };\r\n    ByteBuffer.prototype.setUint16 = function (n) {\r\n        this.view.setUint16(this.offset, n);\r\n        this.offset += 2;\r\n    };\r\n    ByteBuffer.prototype.setUint32 = function (n) {\r\n        this.view.setUint32(this.offset, n);\r\n        this.offset += 4;\r\n    };\r\n    ByteBuffer.prototype.resetOffset = function () {\r\n        this.offset = 0;\r\n    };\r\n    ByteBuffer.prototype.getLength = function () {\r\n        return this.view.byteLength;\r\n    };\r\n    return ByteBuffer;\r\n}());\r\nexports.ByteBuffer = ByteBuffer;\r\n\n\n//# sourceURL=webpack://churu-vm/./src/jvm/utils/ByteBuffer.ts?");

/***/ }),

/***/ "./src/jvm/utils/ExceptionHandler.ts":
/*!*******************************************!*\
  !*** ./src/jvm/utils/ExceptionHandler.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.throwException = void 0;\r\nvar ConstantPoolInfo_1 = __webpack_require__(/*! ../models/info/ConstantPoolInfo */ \"./src/jvm/models/info/ConstantPoolInfo.ts\");\r\nvar OutputLogger_1 = __webpack_require__(/*! ./OutputLogger */ \"./src/jvm/utils/OutputLogger.ts\");\r\nvar throwException = function (name, runtimeDataArea) {\r\n    console.error(name);\r\n    // (document.getElementById(\"out\") as HTMLDivElement).innerHTML += `<span style='color: red;'>${name}<br /></span>`;\r\n    OutputLogger_1.OutputLogger.error(name);\r\n    var count = 0;\r\n    runtimeDataArea.getCurrentThread().stack.reverse().forEach(function (frame, index) {\r\n        if (19 < count) {\r\n            OutputLogger_1.OutputLogger.error(\"&nbsp;&nbsp;&nbsp;&nbsp;...\".concat(runtimeDataArea.getCurrentThread().stack.length - index + 1, \" more\"));\r\n            console.error(\"    ...\".concat(runtimeDataArea.getCurrentThread().stack.length - index + 1, \" more\"));\r\n            return;\r\n        }\r\n        var codeAttribute = frame.method.attributes.filter(function (value) { return (0, ConstantPoolInfo_1.readUtf8FromConstantPool)(frame.constantPool, value.attributeNameIndex) === \"Code\"; })[0];\r\n        var lineNumberAttribute = codeAttribute.attributes.filter(function (value) { return (0, ConstantPoolInfo_1.readUtf8FromConstantPool)(frame.constantPool, value.attributeNameIndex) === \"LineNumberTable\"; })[0];\r\n        var lineNumberTable = null;\r\n        if (!(frame.opcode == null)) {\r\n            lineNumberTable = lineNumberAttribute.lineNumberTable.filter(function (value, index, array) {\r\n                if (index + 1 < array.length) {\r\n                    return value.startPc <= frame.opcode.id && frame.opcode.id < array[index + 1].startPc;\r\n                }\r\n                else {\r\n                    return value.startPc <= frame.opcode.id;\r\n                }\r\n            })[0];\r\n        }\r\n        var text = lineNumberTable == null ? \"\".concat(frame.javaClass.getSimpleName(), \".java:Unknown Source\") : \"\".concat(frame.javaClass.getSimpleName(), \".java:\").concat(lineNumberTable.lineNumber);\r\n        // (document.getElementById(\"out\") as HTMLDivElement).innerHTML += `<span style='color: red;'>&nbsp;&nbsp;&nbsp;&nbsp;at ${frame.javaClass.name}.${readUtf8FromConstantPool(frame.constantPool, frame.method.nameIndex)}(${text})<br /></span>`;\r\n        OutputLogger_1.OutputLogger.error(\"&nbsp;&nbsp;&nbsp;&nbsp;at \".concat(frame.javaClass.name, \".\").concat((0, ConstantPoolInfo_1.readUtf8FromConstantPool)(frame.constantPool, frame.method.nameIndex), \"(\").concat(text, \")\"));\r\n        console.error(\"    at \".concat(frame.javaClass.name, \".\").concat((0, ConstantPoolInfo_1.readUtf8FromConstantPool)(frame.constantPool, frame.method.nameIndex), \"(\").concat(text, \")\"));\r\n        count++;\r\n    });\r\n    throw new Error(name);\r\n};\r\nexports.throwException = throwException;\r\n\n\n//# sourceURL=webpack://churu-vm/./src/jvm/utils/ExceptionHandler.ts?");

/***/ }),

/***/ "./src/jvm/utils/Log.ts":
/*!******************************!*\
  !*** ./src/jvm/utils/Log.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.logClass = exports.logMethod = void 0;\r\nvar log = false;\r\nvar logMethod = function (tag, className, methodName) {\r\n    if (log) {\r\n        // logText(`[${tag}] ${className}#${methodName}`);\r\n        console.log(\"[\".concat(tag, \"] \").concat(className, \"#\").concat(methodName));\r\n    }\r\n};\r\nexports.logMethod = logMethod;\r\nvar logClass = function (tag, className) {\r\n    if (log) {\r\n        console.log(\"[\".concat(tag, \"] \").concat(className));\r\n    }\r\n};\r\nexports.logClass = logClass;\r\nvar logText = function (text) {\r\n    document.getElementById(\"out\").value += \"\".concat(text, \"\\n\");\r\n};\r\n\n\n//# sourceURL=webpack://churu-vm/./src/jvm/utils/Log.ts?");

/***/ }),

/***/ "./src/jvm/utils/OutputLogger.ts":
/*!***************************************!*\
  !*** ./src/jvm/utils/OutputLogger.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.OutputLogger = void 0;\r\nvar OutputLogger = /** @class */ (function () {\r\n    function OutputLogger() {\r\n    }\r\n    OutputLogger.setLogger = function (logger) {\r\n        this.logger = logger;\r\n    };\r\n    OutputLogger.write = function (char) {\r\n        this.logger.write(char);\r\n    };\r\n    OutputLogger.log = function (text) {\r\n        this.logger.log(text);\r\n    };\r\n    OutputLogger.error = function (text) {\r\n        this.logger.error(text);\r\n    };\r\n    OutputLogger.logger = new /** @class */ (function () {\r\n        function class_1() {\r\n        }\r\n        class_1.prototype.log = function (text) {\r\n            document.getElementById(\"out\").innerHTML += \"<span>\".concat(text.replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\"), \"<br /></span>\");\r\n        };\r\n        class_1.prototype.write = function (char) {\r\n            if (char !== \"\\n\") {\r\n                document.getElementById(\"out\").innerHTML += \"<span>\".concat(char.replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\"), \"</span>\");\r\n            }\r\n            else {\r\n                document.getElementById(\"out\").innerHTML += \"<br />\";\r\n            }\r\n        };\r\n        class_1.prototype.error = function (text) {\r\n            document.getElementById(\"out\").innerHTML += \"<span style='color: red;'>\".concat(text.replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\"), \"<br /></span>\");\r\n        };\r\n        return class_1;\r\n    }());\r\n    return OutputLogger;\r\n}());\r\nexports.OutputLogger = OutputLogger;\r\n\n\n//# sourceURL=webpack://churu-vm/./src/jvm/utils/OutputLogger.ts?");

/***/ }),

/***/ "./src/jvm/utils/Utils.ts":
/*!********************************!*\
  !*** ./src/jvm/utils/Utils.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.getFieldValue = exports.getString = exports.hashString = exports.cyrb53 = void 0;\r\nvar cyrb53 = function (str, seed) {\r\n    if (seed === void 0) { seed = 0; }\r\n    var h1 = 0xdeadbeef ^ seed, h2 = 0x41c6ce57 ^ seed;\r\n    for (var i = 0, ch = void 0; i < str.length; i++) {\r\n        ch = str.charCodeAt(i);\r\n        h1 = Math.imul(h1 ^ ch, 2654435761);\r\n        h2 = Math.imul(h2 ^ ch, 1597334677);\r\n    }\r\n    h1 = Math.imul(h1 ^ (h1 >>> 16), 2246822507) ^ Math.imul(h2 ^ (h2 >>> 13), 3266489909);\r\n    h2 = Math.imul(h2 ^ (h2 >>> 16), 2246822507) ^ Math.imul(h1 ^ (h1 >>> 13), 3266489909);\r\n    return 4294967296 * (2097151 & h2) + (h1 >>> 0);\r\n};\r\nexports.cyrb53 = cyrb53;\r\nvar hashString = function (str) {\r\n    var array = Array.from(new TextEncoder().encode(str));\r\n    var hashCode = 0;\r\n    var limit = array.length;\r\n    for (var i = 0; i < limit; i++) {\r\n        hashCode = hashCode * 31 + array[i];\r\n    }\r\n    return hashCode;\r\n};\r\nexports.hashString = hashString;\r\nvar getString = function (runtimeDataArea, obj) {\r\n    return new TextDecoder(\"UTF-8\").decode(Uint8Array.from(runtimeDataArea.objectHeap[runtimeDataArea.objectHeap[obj.heapIndex].filter(function (v) { return v.name === \"value\"; })[0].value.heapIndex]).buffer);\r\n};\r\nexports.getString = getString;\r\nvar getFieldValue = function (obj, name) {\r\n    return obj.runtimeDataArea.objectHeap[obj.heapIndex].filter(function (v) { return v.name === name; })[0].value;\r\n};\r\nexports.getFieldValue = getFieldValue;\r\n\n\n//# sourceURL=webpack://churu-vm/./src/jvm/utils/Utils.ts?");

/***/ }),

/***/ "./src/main.ts":
/*!*********************!*\
  !*** ./src/main.ts ***!
  \*********************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nvar jvm_js_1 = __webpack_require__(/*! ./jvm/jvm.js */ \"./src/jvm/jvm.js\");\r\nvar todo = function () {\r\n    var image = document.getElementById(\"loading\");\r\n    fetch(\"./todo.jar\").then(function (data) {\r\n        data.arrayBuffer().then(function (array) {\r\n            var jvmArgs = {\r\n                Xss: 100\r\n            };\r\n            var jvm = new jvm_js_1.JVM(new Uint8Array(array), \"todo.jar\", jvmArgs, [], function () {\r\n                image.style.display = \"none\";\r\n            });\r\n            jvm.launch();\r\n        });\r\n    });\r\n};\r\nvar index = function () {\r\n    console.log(\"loading file...\");\r\n    var reader = new FileReader();\r\n    var fileInput = document.getElementById(\"file_input\");\r\n    fileInput.onchange = function () {\r\n        reader.readAsArrayBuffer(fileInput.files[0]);\r\n    };\r\n    reader.onload = function () {\r\n        var jvmArgs = {\r\n            Xss: 100\r\n        };\r\n        var jvm = new jvm_js_1.JVM(new Uint8Array(reader.result), fileInput.files[0].name, jvmArgs, [], function () { });\r\n        jvm.launch();\r\n    };\r\n};\r\nwindow.onload = function () {\r\n    // index();\r\n    // todo();\r\n};\r\n\n\n//# sourceURL=webpack://churu-vm/./src/main.ts?");

/***/ }),

/***/ "./src/jvm/core/cfl/ClassFileLoader.js":
/*!*********************************************!*\
  !*** ./src/jvm/core/cfl/ClassFileLoader.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.getArgumentsAndReturnType = exports.parseDescriptor = exports.getConstantPoolInfo = void 0;\r\nvar getConstantPoolInfo = function (constantPool, index) {\r\n    return constantPool.filter(function (constant) { return constant.id === index; })[0];\r\n};\r\nexports.getConstantPoolInfo = getConstantPoolInfo;\r\nvar parseDescriptor = function (descriptor) {\r\n    var temp = descriptor.split(\")\")[0].substring(1);\r\n    // const temp = descriptor.match(\"(?<=\\\\()[^\\\\(\\\\)]+(?=\\\\))\")?.[0];\r\n    if (temp == null)\r\n        return [];\r\n    var primitives = [\"B\", \"C\", \"D\", \"F\", \"I\", \"J\", \"S\", \"Z\"];\r\n    var args = [];\r\n    var STATE_NORMAL = 0;\r\n    var STATE_OBJECT = 1;\r\n    var state = STATE_NORMAL;\r\n    var isArray = false;\r\n    var objectName = \"\";\r\n    temp.split(\"\").forEach(function (char) {\r\n        switch (state) {\r\n            case STATE_NORMAL: {\r\n                if (primitives.includes(char)) {\r\n                    args.push((isArray ? \"[\" : \"\") + char);\r\n                    isArray = false;\r\n                }\r\n                else if (char === \"L\")\r\n                    state = STATE_OBJECT;\r\n                else if (char === \"[\")\r\n                    isArray = true;\r\n                break;\r\n            }\r\n            case STATE_OBJECT: {\r\n                if (char !== \";\")\r\n                    objectName += char;\r\n                else {\r\n                    args.push((isArray ? \"[\" : \"\") + objectName);\r\n                    isArray = false;\r\n                    objectName = \"\";\r\n                    state = STATE_NORMAL;\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    });\r\n    return args;\r\n};\r\nexports.parseDescriptor = parseDescriptor;\r\nvar getArgumentsAndReturnType = function (descriptor) {\r\n    var returnTypeSplit = descriptor.split(\")\");\r\n    return [(0, exports.parseDescriptor)(descriptor), returnTypeSplit[returnTypeSplit.length - 1]];\r\n};\r\nexports.getArgumentsAndReturnType = getArgumentsAndReturnType;\r\n//# sourceMappingURL=ClassFileLoader.js.map\n\n//# sourceURL=webpack://churu-vm/./src/jvm/core/cfl/ClassFileLoader.js?");

/***/ }),

/***/ "./src/jvm/core/rda/RuntimeDataArea.js":
/*!*********************************************!*\
  !*** ./src/jvm/core/rda/RuntimeDataArea.js ***!
  \*********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nvar Thread_js_1 = __importDefault(__webpack_require__(/*! ./stack/Thread.js */ \"./src/jvm/core/rda/stack/Thread.js\"));\r\nvar JavaClass_1 = __importDefault(__webpack_require__(/*! ../cfl/JavaClass */ \"./src/jvm/core/cfl/JavaClass.ts\"));\r\nvar types_1 = __webpack_require__(/*! ../cfl/types */ \"./src/jvm/core/cfl/types.ts\");\r\nvar BootstrapClassLoader_1 = __importDefault(__webpack_require__(/*! ../BootstrapClassLoader */ \"./src/jvm/core/BootstrapClassLoader.ts\"));\r\nvar Utils_1 = __webpack_require__(/*! ../../utils/Utils */ \"./src/jvm/utils/Utils.ts\");\r\nvar RuntimeDataArea = /** @class */ (function () {\r\n    function RuntimeDataArea() {\r\n        this.threadId = 1;\r\n        this.stackArea = {};\r\n        this.pcRegisters = {};\r\n        this.classHeap = {};\r\n        this.objectHeap = [];\r\n        this.loadedJars = [];\r\n        this.loadedClasses = {};\r\n        this.nativeModules = {};\r\n    }\r\n    RuntimeDataArea.prototype.registerNatives = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13;\r\n            return __generator(this, function (_14) {\r\n                switch (_14.label) {\r\n                    case 0:\r\n                        _a = this.nativeModules;\r\n                        _b = \"dev.itsu.Document\";\r\n                        return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(__webpack_require__(/*! ../../lib/dev/itsu/Document.js */ \"./src/jvm/lib/dev/itsu/Document.js\")); })];\r\n                    case 1:\r\n                        _a[_b] = _14.sent();\r\n                        _c = this.nativeModules;\r\n                        _d = \"dev.itsu.$\";\r\n                        return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(__webpack_require__(/*! ../../lib/dev/itsu/$.js */ \"./src/jvm/lib/dev/itsu/$.js\")); })];\r\n                    case 2:\r\n                        _c[_d] = _14.sent();\r\n                        _e = this.nativeModules;\r\n                        _f = \"dev.itsu.node.Element\";\r\n                        return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(__webpack_require__(/*! ../../lib/dev/itsu/node/Element.js */ \"./src/jvm/lib/dev/itsu/node/Element.js\")); })];\r\n                    case 3:\r\n                        _e[_f] = _14.sent();\r\n                        _g = this.nativeModules;\r\n                        _h = \"dev.itsu.node.html.HTMLElement\";\r\n                        return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(__webpack_require__(/*! ../../lib/dev/itsu/node/html/HTMLElement.js */ \"./src/jvm/lib/dev/itsu/node/html/HTMLElement.js\")); })];\r\n                    case 4:\r\n                        _g[_h] = _14.sent();\r\n                        _j = this.nativeModules;\r\n                        _k = \"dev.itsu.node.html.HTMLInputElement\";\r\n                        return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(__webpack_require__(/*! ../../lib/dev/itsu/node/html/HTMLInputElement.js */ \"./src/jvm/lib/dev/itsu/node/html/HTMLInputElement.js\")); })];\r\n                    case 5:\r\n                        _j[_k] = _14.sent();\r\n                        _l = this.nativeModules;\r\n                        _m = \"dev.itsu.event.EventTarget\";\r\n                        return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(__webpack_require__(/*! ../../lib/dev/itsu/event/EventTarget.js */ \"./src/jvm/lib/dev/itsu/event/EventTarget.js\")); })];\r\n                    case 6:\r\n                        _l[_m] = _14.sent();\r\n                        _o = this.nativeModules;\r\n                        _p = \"java.io.FileDescriptor\";\r\n                        return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(__webpack_require__(/*! ../../lib/java/io/FileDescriptor.js */ \"./src/jvm/lib/java/io/FileDescriptor.js\")); })];\r\n                    case 7:\r\n                        _o[_p] = _14.sent();\r\n                        _q = this.nativeModules;\r\n                        _r = \"java.io.FileOutputStream\";\r\n                        return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(__webpack_require__(/*! ../../lib/java/io/FileOutputStream.js */ \"./src/jvm/lib/java/io/FileOutputStream.js\")); })];\r\n                    case 8:\r\n                        _q[_r] = _14.sent();\r\n                        _s = this.nativeModules;\r\n                        _t = \"java.lang.Class\";\r\n                        return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(__webpack_require__(/*! ../../lib/java/lang/Class.js */ \"./src/jvm/lib/java/lang/Class.js\")); })];\r\n                    case 9:\r\n                        _s[_t] = _14.sent();\r\n                        _u = this.nativeModules;\r\n                        _v = \"java.lang.Object\";\r\n                        return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(__webpack_require__(/*! ../../lib/java/lang/JavaObject.js */ \"./src/jvm/lib/java/lang/JavaObject.js\")); })];\r\n                    case 10:\r\n                        _u[_v] = _14.sent();\r\n                        _w = this.nativeModules;\r\n                        _x = \"java.lang.Runtime\";\r\n                        return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(__webpack_require__(/*! ../../lib/java/lang/Runtime.js */ \"./src/jvm/lib/java/lang/Runtime.js\")); })];\r\n                    case 11:\r\n                        _w[_x] = _14.sent();\r\n                        _y = this.nativeModules;\r\n                        _z = \"java.lang.String\";\r\n                        return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(__webpack_require__(/*! ../../lib/java/lang/String.js */ \"./src/jvm/lib/java/lang/String.js\")); })];\r\n                    case 12:\r\n                        _y[_z] = _14.sent();\r\n                        _0 = this.nativeModules;\r\n                        _1 = \"java.lang.System\";\r\n                        return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(__webpack_require__(/*! ../../lib/java/lang/System.js */ \"./src/jvm/lib/java/lang/System.js\")); })];\r\n                    case 13:\r\n                        _0[_1] = _14.sent();\r\n                        _2 = this.nativeModules;\r\n                        _3 = \"java.lang.Thread\";\r\n                        return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(__webpack_require__(/*! ../../lib/java/lang/Thread.js */ \"./src/jvm/lib/java/lang/Thread.js\")); })];\r\n                    case 14:\r\n                        _2[_3] = _14.sent();\r\n                        _4 = this.nativeModules;\r\n                        _5 = \"java.lang.invoke.MethodHandleNatives\";\r\n                        return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(__webpack_require__(/*! ../../lib/java/lang/invoke/MethodHandleNatives.js */ \"./src/jvm/lib/java/lang/invoke/MethodHandleNatives.js\")); })];\r\n                    case 15:\r\n                        _4[_5] = _14.sent();\r\n                        _6 = this.nativeModules;\r\n                        _7 = \"java.security.AccessController\";\r\n                        return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(__webpack_require__(/*! ../../lib/java/security/AccessController.js */ \"./src/jvm/lib/java/security/AccessController.js\")); })];\r\n                    case 16:\r\n                        _6[_7] = _14.sent();\r\n                        _8 = this.nativeModules;\r\n                        _9 = \"sun.misc.VM\";\r\n                        return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(__webpack_require__(/*! ../../lib/sun/misc/VM.js */ \"./src/jvm/lib/sun/misc/VM.js\")); })];\r\n                    case 17:\r\n                        _8[_9] = _14.sent();\r\n                        _10 = this.nativeModules;\r\n                        _11 = \"sun.misc.Unsafe\";\r\n                        return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(__webpack_require__(/*! ../../lib/sun/misc/Unsafe.js */ \"./src/jvm/lib/sun/misc/Unsafe.js\")); })];\r\n                    case 18:\r\n                        _10[_11] = _14.sent();\r\n                        _12 = this.nativeModules;\r\n                        _13 = \"sun.reflect.Reflection\";\r\n                        return [4 /*yield*/, Promise.resolve().then(function () { return __importStar(__webpack_require__(/*! ../../lib/sun/reflect/Reflection.js */ \"./src/jvm/lib/sun/reflect/Reflection.js\")); })];\r\n                    case 19:\r\n                        _12[_13] = _14.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    RuntimeDataArea.prototype.createThread = function (stackSize, isCurrent) {\r\n        var _this = this;\r\n        this.stackArea[this.threadId] = new Promise(function (resolve) {\r\n            var thread = new Thread_js_1.default(_this, stackSize, _this.threadId);\r\n            if (isCurrent) {\r\n                _this.currentThread = thread;\r\n            }\r\n            resolve(thread);\r\n        });\r\n        this.pcRegisters[this.threadId] = 0;\r\n        this.threadId++;\r\n        return this.stackArea[this.threadId - 1];\r\n    };\r\n    RuntimeDataArea.prototype.getThreadPromise = function (threadId) {\r\n        return this.stackArea[threadId];\r\n    };\r\n    RuntimeDataArea.prototype.setPCRegister = function (threadId, value) {\r\n        this.pcRegisters[threadId] = value;\r\n    };\r\n    RuntimeDataArea.prototype.incrementPCRegister = function (threadId) {\r\n        this.pcRegisters[threadId]++;\r\n    };\r\n    RuntimeDataArea.prototype.getPCRegister = function (threadId) {\r\n        return this.pcRegisters[threadId];\r\n    };\r\n    RuntimeDataArea.prototype.createObject = function (className) {\r\n        if (JavaClass_1.default.isPrimitive(className))\r\n            className = JavaClass_1.default.box(className);\r\n        var javaClass = BootstrapClassLoader_1.default.getInstance().findClass(className);\r\n        var variables = new Array(javaClass.getFieldsCount());\r\n        this.objectHeap.push(variables);\r\n        document.getElementById(\"heap\").innerHTML += \"<span>\".concat(this.objectHeap.length - 1, \": \").concat(className, \"<br /></span>\");\r\n        var obj = new types_1.JavaObject(BootstrapClassLoader_1.default.getInstance().findClass(javaClass.name), this.objectHeap.length - 1);\r\n        obj.init(this);\r\n        return obj;\r\n    };\r\n    RuntimeDataArea.prototype.createStringObject = function (thread, str) {\r\n        var object = this.createObject(\"java.lang.String\");\r\n        var variables = this.objectHeap[object.heapIndex];\r\n        var valueVar = variables.filter(function (value) { return value.name === \"value\"; })[0];\r\n        valueVar.value = this._createPArray(8, Array.from(new TextEncoder().encode(str)));\r\n        var hashVar = variables.filter(function (value) { return value.name === \"hash\"; })[0];\r\n        hashVar.value = (0, Utils_1.hashString)(str);\r\n        thread.invokeMethod(\"<init>\", \"(Ljava/lang/String;)V\", object.type, [object], object);\r\n        return object;\r\n    };\r\n    RuntimeDataArea.prototype.createClassObject = function (thread, klass) {\r\n        if (klass.getClassObject() != null)\r\n            return klass.getClassObject();\r\n        var object = this.createObject(\"java.lang.Class\");\r\n        object.init(this);\r\n        thread.invokeMethod(\"<init>\", \"(Ljava/lang/ClassLoader;)V\", object.type, [null], object);\r\n        var variables = this.objectHeap[object.heapIndex];\r\n        variables.filter(function (value) { return value.name === \"name\"; })[0].value = this.createStringObject(thread, klass.name);\r\n        /*\r\n        const reverse = klass.name.split(\".\").reverse();\r\n        reverse.pop();\r\n        variables.filter(value => value.name === \"packageName\")[0].value = reverse.reverse().join(\".\");\r\n\r\n         */\r\n        variables.filter(function (value) { return value.name === \"classLoader\"; })[0].value = null;\r\n        klass.setClassObject(object);\r\n        return object;\r\n    };\r\n    RuntimeDataArea.prototype._createPArray = function (type, array) {\r\n        this.objectHeap.push(array);\r\n        var classes = {\r\n            8: \"java.lang.Byte\",\r\n            5: \"java.lang.Character\",\r\n            7: \"java.lang.Double\",\r\n            6: \"java.lang.Float\",\r\n            10: \"java.lang.Integer\",\r\n            11: \"java.lang.Long\",\r\n            9: \"java.lang.Short\",\r\n            4: \"java.lang.Boolean\"\r\n        };\r\n        return new types_1.JavaObject(BootstrapClassLoader_1.default.getInstance().findClass(classes[type]), this.objectHeap.length - 1, true);\r\n    };\r\n    RuntimeDataArea.prototype.createPArray = function (type, size) {\r\n        var variables;\r\n        var classes = {\r\n            8: \"java.lang.Byte\",\r\n            5: \"java.lang.Character\",\r\n            7: \"java.lang.Double\",\r\n            6: \"java.lang.Float\",\r\n            10: \"java.lang.Integer\",\r\n            11: \"java.lang.Long\",\r\n            9: \"java.lang.Short\",\r\n            4: \"java.lang.Boolean\"\r\n        };\r\n        if (type == 4) {\r\n            variables = new Array(size).fill(false);\r\n        }\r\n        else {\r\n            variables = new Array(size).fill(0);\r\n        }\r\n        this.objectHeap.push(variables);\r\n        return new types_1.JavaObject(BootstrapClassLoader_1.default.getInstance().findClass(classes[type]), this.objectHeap.length - 1, true);\r\n    };\r\n    RuntimeDataArea.prototype.createAArray = function (typeName, size) {\r\n        var objects = new Array(size).fill(null);\r\n        this.objectHeap.push(objects);\r\n        return new types_1.JavaObject(BootstrapClassLoader_1.default.getInstance().findClass(typeName), this.objectHeap.length - 1, true);\r\n    };\r\n    RuntimeDataArea.prototype.allocate = function (size) {\r\n        var memory = new Array(size);\r\n        this.objectHeap.push(memory);\r\n        return this.objectHeap.length - 1;\r\n    };\r\n    RuntimeDataArea.prototype._createMDArray = function (typeName, dimension, sizes) {\r\n        var initValue = null;\r\n        if (JavaClass_1.default.isPrimitive(typeName) || JavaClass_1.default.isWrappedPrimitive(typeName)) {\r\n            initValue = 0;\r\n            if (typeName.includes(\"Boolean\") || typeName.includes(\"Z\")) {\r\n                initValue = false;\r\n            }\r\n        }\r\n        if (dimension > 0) {\r\n            return new Array(sizes[sizes.length - dimension]).fill(this._createMDArray(typeName, dimension - 1, sizes));\r\n        }\r\n        else {\r\n            return initValue;\r\n        }\r\n    };\r\n    RuntimeDataArea.prototype.createMDArray = function (typeName, dimension, sizes) {\r\n        var objects = this._createMDArray(typeName, dimension, sizes);\r\n        this.objectHeap.push(objects);\r\n        return new types_1.JavaObject(BootstrapClassLoader_1.default.getInstance().findClass(typeName), this.objectHeap.length - 1, true);\r\n    };\r\n    RuntimeDataArea.prototype.getCurrentThread = function () {\r\n        return this.currentThread;\r\n    };\r\n    return RuntimeDataArea;\r\n}());\r\nexports[\"default\"] = RuntimeDataArea;\r\n//# sourceMappingURL=RuntimeDataArea.js.map\n\n//# sourceURL=webpack://churu-vm/./src/jvm/core/rda/RuntimeDataArea.js?");

/***/ }),

/***/ "./src/jvm/core/rda/stack/Frame.js":
/*!*****************************************!*\
  !*** ./src/jvm/core/rda/stack/Frame.js ***!
  \*****************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Frame = void 0;\r\nvar ConstantPoolInfo_js_1 = __webpack_require__(/*! ../../../models/info/ConstantPoolInfo.js */ \"./src/jvm/models/info/ConstantPoolInfo.js\");\r\nvar ByteBuffer_js_1 = __webpack_require__(/*! ../../../utils/ByteBuffer.js */ \"./src/jvm/utils/ByteBuffer.js\");\r\nvar ClassFileLoader_js_1 = __webpack_require__(/*! ../../cfl/ClassFileLoader.js */ \"./src/jvm/core/cfl/ClassFileLoader.js\");\r\nvar BootstrapClassLoader_1 = __importDefault(__webpack_require__(/*! ../../BootstrapClassLoader */ \"./src/jvm/core/BootstrapClassLoader.ts\"));\r\nvar types_1 = __webpack_require__(/*! ../../cfl/types */ \"./src/jvm/core/cfl/types.ts\");\r\nvar Utils_1 = __webpack_require__(/*! ../../../utils/Utils */ \"./src/jvm/utils/Utils.ts\");\r\nvar JavaObject_1 = __webpack_require__(/*! ../../../lib/java/lang/JavaObject */ \"./src/jvm/lib/java/lang/JavaObject.ts\");\r\nvar ExceptionHandler_1 = __webpack_require__(/*! ../../../utils/ExceptionHandler */ \"./src/jvm/utils/ExceptionHandler.ts\");\r\nvar Frame = /** @class */ (function () {\r\n    function Frame(thread, runtimeDataArea, method, javaClass, localSize, constantPool, args, javaObject) {\r\n        var _this = this;\r\n        this.opcodes = new Array();\r\n        this.isRunning = true;\r\n        this.operandStack = [];\r\n        this.thread = thread;\r\n        this.runtimeDataArea = runtimeDataArea;\r\n        this.method = method;\r\n        this.javaClass = javaClass;\r\n        this.locals = new Array(localSize);\r\n        this.constantPool = constantPool;\r\n        this.javaObject = javaObject;\r\n        // create this object on object heap\r\n        var offset = 0;\r\n        if (!(this.javaObject == null)) {\r\n            this.locals[0] = new types_1.JavaVariable(this.javaClass.name, this.javaObject);\r\n            offset++;\r\n        }\r\n        var argsData = (0, ClassFileLoader_js_1.getArgumentsAndReturnType)((0, ConstantPoolInfo_js_1.readUtf8FromConstantPool)(javaClass.constantPool, this.method.descriptorIndex))[0];\r\n        args.reverse().forEach(function (arg, index) {\r\n            _this.locals[index + offset] = new types_1.JavaVariable(argsData[index].split(\"/\").join(\".\"), arg);\r\n        });\r\n    }\r\n    Frame.prototype.execute = function () {\r\n        return this.executeOpcodes(0);\r\n    };\r\n    Frame.prototype.executeOpcodes = function (id) {\r\n        var _this = this;\r\n        // TODO\r\n        var name = (0, ConstantPoolInfo_js_1.readUtf8FromConstantPool)(this.constantPool, this.method.nameIndex);\r\n        if (name === \"newInstance\") {\r\n            var klazz = (0, Utils_1.getString)(this.runtimeDataArea, this.runtimeDataArea.objectHeap[this.locals[0].value.heapIndex].filter(function (v) { return v.name === \"name\"; })[0].value);\r\n            var obj = this.javaClass.getSimpleName() == \"Array\" ? this.runtimeDataArea.createAArray(klazz, this.locals[0].value) : this.runtimeDataArea.createObject(klazz);\r\n            obj.init(this.runtimeDataArea);\r\n            this.thread.invokeMethod(\"<init>\", \"()V\", obj.type, [], obj);\r\n            return obj;\r\n        }\r\n        // TODO\r\n        if (name == \"clone\") {\r\n            return Object.assign(Object.create(Object.getPrototypeOf(this.javaObject)), this.javaObject);\r\n        }\r\n        // TODO\r\n        if (name == \"checkForTypeAlias\" || name == \"checkSlotCount\")\r\n            return;\r\n        if (name == \"parameterSlotCount\")\r\n            return 0;\r\n        if (name == \"referenceKindIsConsistent\" || name == \"vminfoIsConsistent\" || name == \"verifyConstants\")\r\n            return true;\r\n        if (this.javaClass.name == \"java.lang.ref.Reference\" && name == \"<clinit>\")\r\n            return;\r\n        if (this.opcodes[this.opcodes.length - 1].id < id) {\r\n            id = id - 65536;\r\n        }\r\n        var index = this.getOpcodeIndexById(id);\r\n        var _loop_1 = function (i) {\r\n            this_1.opcode = this_1.opcodes[i];\r\n            if (!this_1.isRunning || !this_1.opcode)\r\n                return \"break\";\r\n            if (((23 <= this_1.opcode.id && this_1.opcode.id <= 38) || (115 <= this_1.opcode.id && this_1.opcode.id <= 123) || (138 <= this_1.opcode.id && this_1.opcode.id <= 138)) && name === \"initializeSystemClass\")\r\n                return \"continue\";\r\n            switch (this_1.opcode.opcode) {\r\n                // nop\r\n                case 0x00: {\r\n                    break;\r\n                }\r\n                // aconst_null\r\n                case 0x01: {\r\n                    this_1.operandStack.push(null);\r\n                    break;\r\n                }\r\n                // getstatic\r\n                case 0xb2: {\r\n                    var indexByte1 = this_1.opcode.operands[0];\r\n                    var indexByte2 = this_1.opcode.operands[1];\r\n                    var constantPoolInfo = (0, ClassFileLoader_js_1.getConstantPoolInfo)(this_1.constantPool, (indexByte1 << 8) | indexByte2);\r\n                    var fieldRef = constantPoolInfo.info;\r\n                    var classRef = (0, ClassFileLoader_js_1.getConstantPoolInfo)(this_1.constantPool, fieldRef.classIndex).info;\r\n                    var fieldNameAndTypeRef = (0, ClassFileLoader_js_1.getConstantPoolInfo)(this_1.constantPool, fieldRef.nameAndTypeIndex).info;\r\n                    var klass = BootstrapClassLoader_1.default.getInstance().findClass((0, ConstantPoolInfo_js_1.readUtf8FromConstantPool)(this_1.constantPool, classRef.nameIndex).split(\"/\").join(\".\"));\r\n                    klass.initStatic(this_1.thread);\r\n                    var field = klass.getDeclaredField((0, ConstantPoolInfo_js_1.readUtf8FromConstantPool)(this_1.constantPool, fieldNameAndTypeRef.nameIndex));\r\n                    this_1.operandStack.push(field.staticValue);\r\n                    break;\r\n                }\r\n                // putstatic\r\n                case 0xb3: {\r\n                    var indexByte1 = this_1.opcode.operands[0];\r\n                    var indexByte2 = this_1.opcode.operands[1];\r\n                    var constantPoolInfo = (0, ClassFileLoader_js_1.getConstantPoolInfo)(this_1.constantPool, (indexByte1 << 8) | indexByte2);\r\n                    var fieldRef = constantPoolInfo.info;\r\n                    var classRef = (0, ClassFileLoader_js_1.getConstantPoolInfo)(this_1.constantPool, fieldRef.classIndex).info;\r\n                    var fieldNameAndTypeRef = (0, ClassFileLoader_js_1.getConstantPoolInfo)(this_1.constantPool, fieldRef.nameAndTypeIndex).info;\r\n                    // const fieldClassFileName = readUtf8FromConstantPool(this.constantPool, fieldNameAndTypeRef.nameIndex).split(\"/\").join(\".\");\r\n                    var klass = BootstrapClassLoader_1.default.getInstance().findClass((0, ConstantPoolInfo_js_1.readUtf8FromConstantPool)(this_1.constantPool, classRef.nameIndex).split(\"/\").join(\".\"));\r\n                    klass.initStatic(this_1.thread);\r\n                    var field = klass.getDeclaredField((0, ConstantPoolInfo_js_1.readUtf8FromConstantPool)(this_1.constantPool, fieldNameAndTypeRef.nameIndex));\r\n                    field.staticValue = this_1.operandStack.pop();\r\n                    break;\r\n                }\r\n                // getfield\r\n                case 0xb4: {\r\n                    var indexByte1 = this_1.opcode.operands[0];\r\n                    var indexByte2 = this_1.opcode.operands[1];\r\n                    var constantPoolInfo = (0, ClassFileLoader_js_1.getConstantPoolInfo)(this_1.constantPool, (indexByte1 << 8) | indexByte2);\r\n                    var fieldRef = constantPoolInfo.info;\r\n                    var classRef = (0, ClassFileLoader_js_1.getConstantPoolInfo)(this_1.constantPool, fieldRef.classIndex).info;\r\n                    var fieldNameAndTypeRef = (0, ClassFileLoader_js_1.getConstantPoolInfo)(this_1.constantPool, fieldRef.nameAndTypeIndex).info;\r\n                    var fieldName_1 = (0, ConstantPoolInfo_js_1.readUtf8FromConstantPool)(this_1.constantPool, fieldNameAndTypeRef.nameIndex);\r\n                    var obj = this_1.operandStack.pop();\r\n                    this_1.operandStack.push(this_1.runtimeDataArea.objectHeap[obj.heapIndex]\r\n                        .filter(function (variable) { return variable.name === fieldName_1; })[0]\r\n                        .value);\r\n                    break;\r\n                }\r\n                // putfield\r\n                case 0xb5: {\r\n                    var indexByte1 = this_1.opcode.operands[0];\r\n                    var indexByte2 = this_1.opcode.operands[1];\r\n                    var constantPoolInfo = (0, ClassFileLoader_js_1.getConstantPoolInfo)(this_1.constantPool, (indexByte1 << 8) | indexByte2);\r\n                    var fieldRef = constantPoolInfo.info;\r\n                    var classRef = (0, ClassFileLoader_js_1.getConstantPoolInfo)(this_1.constantPool, fieldRef.classIndex).info;\r\n                    var fieldNameAndTypeRef = (0, ClassFileLoader_js_1.getConstantPoolInfo)(this_1.constantPool, fieldRef.nameAndTypeIndex).info;\r\n                    var fieldName_2 = (0, ConstantPoolInfo_js_1.readUtf8FromConstantPool)(this_1.constantPool, fieldNameAndTypeRef.nameIndex);\r\n                    var value = this_1.operandStack.pop();\r\n                    var obj = this_1.operandStack.pop();\r\n                    this_1.runtimeDataArea.objectHeap[obj.heapIndex]\r\n                        .filter(function (variable) { return variable.name === fieldName_2; })[0]\r\n                        .value = value;\r\n                    break;\r\n                }\r\n                // ldc\r\n                case 0x12: {\r\n                    var index_1 = this_1.opcode.operands[0];\r\n                    var info = (0, ClassFileLoader_js_1.getConstantPoolInfo)(this_1.constantPool, index_1).info;\r\n                    if (info.tag === ConstantPoolInfo_js_1.CONSTANT_STRING) {\r\n                        var object = this_1.runtimeDataArea.createStringObject(this_1.thread, (0, ConstantPoolInfo_js_1.readUtf8FromConstantPool)(this_1.constantPool, info.stringIndex));\r\n                        this_1.operandStack.push(object);\r\n                    }\r\n                    else if (info.tag === ConstantPoolInfo_js_1.CONSTANT_INTEGER) {\r\n                        var dataView = new ByteBuffer_js_1.ByteBuffer(new ArrayBuffer(32));\r\n                        dataView.setUint8(info.bytes[0]);\r\n                        dataView.setUint8(info.bytes[1]);\r\n                        dataView.setUint8(info.bytes[2]);\r\n                        dataView.setUint8(info.bytes[3]);\r\n                        dataView.resetOffset();\r\n                        this_1.operandStack.push(info.bytes[0] << 24 | info.bytes[1] << 16 | info.bytes[2] << 8 | info.bytes[3]);\r\n                    }\r\n                    else if (info.tag === ConstantPoolInfo_js_1.CONSTANT_FLOAT) {\r\n                        var dataView = new ByteBuffer_js_1.ByteBuffer(new ArrayBuffer(32));\r\n                        dataView.setUint8(info.bytes[0]);\r\n                        dataView.setUint8(info.bytes[1]);\r\n                        dataView.setUint8(info.bytes[2]);\r\n                        dataView.setUint8(info.bytes[3]);\r\n                        dataView.resetOffset();\r\n                        this_1.operandStack.push(dataView.getFloat32());\r\n                    }\r\n                    else if (info.tag === ConstantPoolInfo_js_1.CONSTANT_CLASS) {\r\n                        var classRef = info;\r\n                        var obj = this_1.runtimeDataArea.createClassObject(this_1.thread, BootstrapClassLoader_1.default.getInstance().findClass((0, ConstantPoolInfo_js_1.readUtf8FromConstantPool)(this_1.constantPool, classRef.nameIndex).split(\"/\").join(\".\")));\r\n                        this_1.operandStack.push(obj);\r\n                    }\r\n                    break;\r\n                }\r\n                // ldc_w\r\n                case 0x13: {\r\n                    var indexByte1 = this_1.opcode.operands[0];\r\n                    var indexByte2 = this_1.opcode.operands[1];\r\n                    var info = (0, ClassFileLoader_js_1.getConstantPoolInfo)(this_1.constantPool, (indexByte1 << 8) | indexByte2).info;\r\n                    if (info.tag === ConstantPoolInfo_js_1.CONSTANT_STRING) {\r\n                        var object = this_1.runtimeDataArea.createStringObject(this_1.thread, (0, ConstantPoolInfo_js_1.readUtf8FromConstantPool)(this_1.constantPool, info.stringIndex));\r\n                        this_1.operandStack.push(object);\r\n                    }\r\n                    else if (info.tag === ConstantPoolInfo_js_1.CONSTANT_INTEGER) {\r\n                        var dataView = new ByteBuffer_js_1.ByteBuffer(new ArrayBuffer(32));\r\n                        dataView.setUint8(info.bytes[0]);\r\n                        dataView.setUint8(info.bytes[1]);\r\n                        dataView.setUint8(info.bytes[2]);\r\n                        dataView.setUint8(info.bytes[3]);\r\n                        dataView.resetOffset();\r\n                        this_1.operandStack.push(dataView.getInt32());\r\n                    }\r\n                    else if (info.tag === ConstantPoolInfo_js_1.CONSTANT_FLOAT) {\r\n                        var dataView = new ByteBuffer_js_1.ByteBuffer(new ArrayBuffer(32));\r\n                        dataView.setUint8(info.bytes[0]);\r\n                        dataView.setUint8(info.bytes[1]);\r\n                        dataView.setUint8(info.bytes[2]);\r\n                        dataView.setUint8(info.bytes[3]);\r\n                        dataView.resetOffset();\r\n                        this_1.operandStack.push(dataView.getFloat32());\r\n                    }\r\n                    else if (info.tag === ConstantPoolInfo_js_1.CONSTANT_CLASS) {\r\n                        var classRef = info;\r\n                        var obj = this_1.runtimeDataArea.createClassObject(this_1.thread, BootstrapClassLoader_1.default.getInstance().findClass((0, ConstantPoolInfo_js_1.readUtf8FromConstantPool)(this_1.constantPool, classRef.nameIndex).split(\"/\").join(\".\")));\r\n                        this_1.operandStack.push(obj);\r\n                    }\r\n                    break;\r\n                }\r\n                // ldc2_w\r\n                case 0x14: {\r\n                    var indexByte1 = this_1.opcode.operands[0];\r\n                    var indexByte2 = this_1.opcode.operands[1];\r\n                    var info = (0, ClassFileLoader_js_1.getConstantPoolInfo)(this_1.constantPool, (indexByte1 << 8) | indexByte2).info;\r\n                    if (info.tag === ConstantPoolInfo_js_1.CONSTANT_LONG) {\r\n                        var dataView = new ByteBuffer_js_1.ByteBuffer(new ArrayBuffer(64));\r\n                        dataView.setUint32(info.highBytes);\r\n                        dataView.setUint32(info.lowBytes);\r\n                        dataView.resetOffset();\r\n                        this_1.operandStack.push(dataView.getBigInt64());\r\n                    }\r\n                    else if (info.tag === ConstantPoolInfo_js_1.CONSTANT_DOUBLE) {\r\n                        var dataView = new ByteBuffer_js_1.ByteBuffer(new ArrayBuffer(64));\r\n                        dataView.setUint32(info.highBytes);\r\n                        dataView.setUint32(info.lowBytes);\r\n                        dataView.resetOffset();\r\n                        this_1.operandStack.push(dataView.getFloat64());\r\n                    }\r\n                    break;\r\n                }\r\n                // invokevirtual\r\n                case 0xb6: {\r\n                    var indexByte1 = this_1.opcode.operands[0];\r\n                    var indexByte2 = this_1.opcode.operands[1];\r\n                    var methodRef = (0, ClassFileLoader_js_1.getConstantPoolInfo)(this_1.constantPool, (indexByte1 << 8) | indexByte2).info;\r\n                    var methodNameAndTypeRef = (0, ClassFileLoader_js_1.getConstantPoolInfo)(this_1.constantPool, methodRef.nameAndTypeIndex).info;\r\n                    var clazz = (0, ClassFileLoader_js_1.getConstantPoolInfo)(this_1.constantPool, methodRef.classIndex).info;\r\n                    var className = (0, ConstantPoolInfo_js_1.readUtf8FromConstantPool)(this_1.constantPool, clazz.nameIndex);\r\n                    var descriptor = (0, ConstantPoolInfo_js_1.readUtf8FromConstantPool)(this_1.constantPool, methodNameAndTypeRef.descriptorIndex);\r\n                    var invokeMethodName = (0, ConstantPoolInfo_js_1.readUtf8FromConstantPool)(this_1.constantPool, methodNameAndTypeRef.nameIndex);\r\n                    var argumentsAndReturnType = (0, ClassFileLoader_js_1.getArgumentsAndReturnType)((0, ConstantPoolInfo_js_1.readUtf8FromConstantPool)(this_1.constantPool, methodNameAndTypeRef.descriptorIndex));\r\n                    var methodArgs = [];\r\n                    for (var i_1 = 0; i_1 < argumentsAndReturnType[0].length; i_1++) {\r\n                        methodArgs.push(this_1.operandStack.pop());\r\n                    }\r\n                    var javaObject = this_1.operandStack.pop();\r\n                    if (javaObject == null) {\r\n                        (0, ExceptionHandler_1.throwException)(\"java.lang.NullPointerException\", this_1.runtimeDataArea);\r\n                        this_1.isRunning = false;\r\n                        return { value: void 0 };\r\n                    }\r\n                    var result = this_1.thread.invokeMethod(invokeMethodName, descriptor, javaObject.type, methodArgs, javaObject);\r\n                    if (result !== undefined) {\r\n                        this_1.operandStack.push(result);\r\n                    }\r\n                    break;\r\n                }\r\n                // iconst_m1\r\n                case 0x02: {\r\n                    this_1.operandStack.push(-1);\r\n                    break;\r\n                }\r\n                // iconst_0\r\n                case 0x03: {\r\n                    this_1.operandStack.push(0);\r\n                    break;\r\n                }\r\n                // iconst_1\r\n                case 0x04: {\r\n                    this_1.operandStack.push(1);\r\n                    break;\r\n                }\r\n                // iconst_2\r\n                case 0x05: {\r\n                    this_1.operandStack.push(2);\r\n                    break;\r\n                }\r\n                // iconst_3\r\n                case 0x06: {\r\n                    this_1.operandStack.push(3);\r\n                    break;\r\n                }\r\n                // iconst_4\r\n                case 0x07: {\r\n                    this_1.operandStack.push(4);\r\n                    break;\r\n                }\r\n                // iconst_5\r\n                case 0x08: {\r\n                    this_1.operandStack.push(5);\r\n                    break;\r\n                }\r\n                // lconst_0\r\n                case 0x09: {\r\n                    this_1.operandStack.push(1);\r\n                    break;\r\n                }\r\n                // lconst_1\r\n                case 0x0a: {\r\n                    this_1.operandStack.push(2);\r\n                    break;\r\n                }\r\n                // fconst_0\r\n                case 0x0b: {\r\n                    this_1.operandStack.push(0.0);\r\n                    break;\r\n                }\r\n                // fconst_1\r\n                case 0x0c: {\r\n                    this_1.operandStack.push(1.0);\r\n                    break;\r\n                }\r\n                // fconst_2\r\n                case 0x0d: {\r\n                    this_1.operandStack.push(2.0);\r\n                    break;\r\n                }\r\n                // dconst_0\r\n                case 0x0e: {\r\n                    this_1.operandStack.push(0.0);\r\n                    break;\r\n                }\r\n                // dconst_1\r\n                case 0x0f: {\r\n                    this_1.operandStack.push(1.0);\r\n                    break;\r\n                }\r\n                // bipush\r\n                case 0x10: {\r\n                    var data = this_1.opcode.operands[0];\r\n                    this_1.operandStack.push(data);\r\n                    break;\r\n                }\r\n                // sipush\r\n                case 0x11: {\r\n                    var byte1 = this_1.opcode.operands[0];\r\n                    var byte2 = this_1.opcode.operands[1];\r\n                    this_1.operandStack.push((byte1 << 8) | byte2);\r\n                    break;\r\n                }\r\n                // iload\r\n                case 0x15: {\r\n                    var index_2 = this_1.opcode.operands[0];\r\n                    this_1.operandStack.push(this_1.locals[index_2].value);\r\n                    break;\r\n                }\r\n                // lload\r\n                case 0x16: {\r\n                    var index_3 = this_1.opcode.operands[0];\r\n                    this_1.operandStack.push(this_1.locals[index_3].value);\r\n                    break;\r\n                }\r\n                // fload\r\n                case 0x17: {\r\n                    var index_4 = this_1.opcode.operands[0];\r\n                    this_1.operandStack.push(this_1.locals[index_4].value);\r\n                    break;\r\n                }\r\n                // dload\r\n                case 0x18: {\r\n                    var index_5 = this_1.opcode.operands[0];\r\n                    this_1.operandStack.push(this_1.locals[index_5].value);\r\n                    break;\r\n                }\r\n                // aload\r\n                case 0x19: {\r\n                    var index_6 = this_1.opcode.operands[0];\r\n                    this_1.operandStack.push(this_1.locals[index_6].value);\r\n                    break;\r\n                }\r\n                // iload_0\r\n                case 0x1a: {\r\n                    this_1.operandStack.push(this_1.locals[0].value);\r\n                    break;\r\n                }\r\n                // iload_1\r\n                case 0x1b: {\r\n                    this_1.operandStack.push(this_1.locals[1].value);\r\n                    break;\r\n                }\r\n                // iload_2\r\n                case 0x1c: {\r\n                    this_1.operandStack.push(this_1.locals[2].value);\r\n                    break;\r\n                }\r\n                // iload_3\r\n                case 0x1d: {\r\n                    this_1.operandStack.push(this_1.locals[3].value);\r\n                    break;\r\n                }\r\n                // lload_0\r\n                case 0x1e: {\r\n                    this_1.operandStack.push(this_1.locals[0].value);\r\n                    break;\r\n                }\r\n                // lload_1\r\n                case 0x1f: {\r\n                    this_1.operandStack.push(this_1.locals[1].value);\r\n                    break;\r\n                }\r\n                // lload_2\r\n                case 0x20: {\r\n                    this_1.operandStack.push(this_1.locals[2].value);\r\n                    break;\r\n                }\r\n                // lload_3\r\n                case 0x21: {\r\n                    this_1.operandStack.push(this_1.locals[3].value);\r\n                    break;\r\n                }\r\n                // fload_0\r\n                case 0x22: {\r\n                    this_1.operandStack.push(this_1.locals[0].value);\r\n                    break;\r\n                }\r\n                // fload_1\r\n                case 0x23: {\r\n                    this_1.operandStack.push(this_1.locals[1].value);\r\n                    break;\r\n                }\r\n                // fload_2\r\n                case 0x24: {\r\n                    this_1.operandStack.push(this_1.locals[2].value);\r\n                    break;\r\n                }\r\n                // fload_3\r\n                case 0x25: {\r\n                    this_1.operandStack.push(this_1.locals[3].value);\r\n                    break;\r\n                }\r\n                // dload_0\r\n                case 0x26: {\r\n                    this_1.operandStack.push(this_1.locals[0].value);\r\n                    break;\r\n                }\r\n                // dload_1\r\n                case 0x27: {\r\n                    this_1.operandStack.push(this_1.locals[1].value);\r\n                    break;\r\n                }\r\n                // dload_2\r\n                case 0x28: {\r\n                    this_1.operandStack.push(this_1.locals[2].value);\r\n                    break;\r\n                }\r\n                // dload_3\r\n                case 0x29: {\r\n                    this_1.operandStack.push(this_1.locals[3].value);\r\n                    break;\r\n                }\r\n                // aload_0\r\n                case 0x2a: {\r\n                    this_1.operandStack.push(this_1.locals[0].value);\r\n                    break;\r\n                }\r\n                // aload_1\r\n                case 0x2b: {\r\n                    this_1.operandStack.push(this_1.locals[1].value);\r\n                    break;\r\n                }\r\n                // aload_2\r\n                case 0x2c: {\r\n                    this_1.operandStack.push(this_1.locals[2].value);\r\n                    break;\r\n                }\r\n                // aload_3\r\n                case 0x2d: {\r\n                    this_1.operandStack.push(this_1.locals[3].value);\r\n                    break;\r\n                }\r\n                // iaload\r\n                case 0x2e:\r\n                // laload\r\n                case 0x2f:\r\n                // faload\r\n                case 0x30:\r\n                // daload\r\n                case 0x31:\r\n                // aaload\r\n                case 0x32:\r\n                // baload\r\n                case 0x33:\r\n                // caload\r\n                case 0x34:\r\n                // saload\r\n                case 0x35: {\r\n                    var index_7 = this_1.operandStack.pop();\r\n                    var array = this_1.operandStack.pop();\r\n                    this_1.operandStack.push(this_1.runtimeDataArea.objectHeap[array.heapIndex][index_7]);\r\n                    break;\r\n                }\r\n                // istore\r\n                case 0x36: {\r\n                    var index_8 = this_1.opcode.operands[0];\r\n                    this_1.locals[index_8] = new types_1.JavaVariable(\"java.lang.Integer\", this_1.operandStack.pop());\r\n                    break;\r\n                }\r\n                // lstore\r\n                case 0x37: {\r\n                    var index_9 = this_1.opcode.operands[0];\r\n                    this_1.locals[index_9] = new types_1.JavaVariable(\"java.lang.Long\", this_1.operandStack.pop());\r\n                    break;\r\n                }\r\n                // fstore\r\n                case 0x38: {\r\n                    var index_10 = this_1.opcode.operands[0];\r\n                    this_1.locals[index_10] = new types_1.JavaVariable(\"java.lang.Float\", this_1.operandStack.pop());\r\n                    break;\r\n                }\r\n                // dstore\r\n                case 0x39: {\r\n                    var index_11 = this_1.opcode.operands[0];\r\n                    this_1.locals[index_11] = new types_1.JavaVariable(\"java.lang.Double\", this_1.operandStack.pop());\r\n                    break;\r\n                }\r\n                // astore\r\n                case 0x3a: {\r\n                    var index_12 = this_1.opcode.operands[0];\r\n                    var obj = this_1.operandStack.pop();\r\n                    this_1.locals[index_12] = new types_1.JavaVariable(obj == null ? null : obj.type.name, obj);\r\n                    break;\r\n                }\r\n                // istore_0\r\n                case 0x3b: {\r\n                    this_1.locals[0] = new types_1.JavaVariable(\"java.lang.Integer\", this_1.operandStack.pop());\r\n                    break;\r\n                }\r\n                // istore_1\r\n                case 0x3c: {\r\n                    this_1.locals[1] = new types_1.JavaVariable(\"java.lang.Integer\", this_1.operandStack.pop());\r\n                    break;\r\n                }\r\n                // istore_2\r\n                case 0x3d: {\r\n                    this_1.locals[2] = new types_1.JavaVariable(\"java.lang.Integer\", this_1.operandStack.pop());\r\n                    break;\r\n                }\r\n                // istore_3\r\n                case 0x3e: {\r\n                    this_1.locals[3] = new types_1.JavaVariable(\"java.lang.Integer\", this_1.operandStack.pop());\r\n                    break;\r\n                }\r\n                // lstore_0\r\n                case 0x3f: {\r\n                    this_1.locals[0] = new types_1.JavaVariable(\"java.lang.Long\", this_1.operandStack.pop());\r\n                    break;\r\n                }\r\n                // lstore_1\r\n                case 0x40: {\r\n                    this_1.locals[1] = new types_1.JavaVariable(\"java.lang.Long\", this_1.operandStack.pop());\r\n                    break;\r\n                }\r\n                // lstore_2\r\n                case 0x41: {\r\n                    this_1.locals[2] = new types_1.JavaVariable(\"java.lang.Long\", this_1.operandStack.pop());\r\n                    break;\r\n                }\r\n                // lstore_3\r\n                case 0x42: {\r\n                    this_1.locals[3] = new types_1.JavaVariable(\"java.lang.Long\", this_1.operandStack.pop());\r\n                    break;\r\n                }\r\n                // fstore_0\r\n                case 0x43: {\r\n                    this_1.locals[0] = new types_1.JavaVariable(\"java.lang.Float\", this_1.operandStack.pop());\r\n                    break;\r\n                }\r\n                // fstore_1\r\n                case 0x44: {\r\n                    this_1.locals[1] = new types_1.JavaVariable(\"java.lang.Float\", this_1.operandStack.pop());\r\n                    break;\r\n                }\r\n                // fstore_2\r\n                case 0x45: {\r\n                    this_1.locals[2] = new types_1.JavaVariable(\"java.lang.Float\", this_1.operandStack.pop());\r\n                    break;\r\n                }\r\n                // fstore_3\r\n                case 0x46: {\r\n                    this_1.locals[3] = new types_1.JavaVariable(\"java.lang.Float\", this_1.operandStack.pop());\r\n                    break;\r\n                }\r\n                // dstore_0\r\n                case 0x47: {\r\n                    this_1.locals[0] = new types_1.JavaVariable(\"java.lang.Double\", this_1.operandStack.pop());\r\n                    break;\r\n                }\r\n                // dstore_1\r\n                case 0x48: {\r\n                    this_1.locals[1] = new types_1.JavaVariable(\"java.lang.Double\", this_1.operandStack.pop());\r\n                    break;\r\n                }\r\n                // dstore_2\r\n                case 0x48: {\r\n                    this_1.locals[2] = new types_1.JavaVariable(\"java.lang.Double\", this_1.operandStack.pop());\r\n                    break;\r\n                }\r\n                // dstore_3\r\n                case 0x4a: {\r\n                    this_1.locals[3] = new types_1.JavaVariable(\"java.lang.Double\", this_1.operandStack.pop());\r\n                    break;\r\n                }\r\n                // astore_0\r\n                case 0x4b: {\r\n                    var obj = this_1.operandStack.pop();\r\n                    this_1.locals[0] = new types_1.JavaVariable(obj == null ? null : obj.type.name, obj);\r\n                    break;\r\n                }\r\n                // astore_1\r\n                case 0x4c: {\r\n                    var obj = this_1.operandStack.pop();\r\n                    this_1.locals[1] = new types_1.JavaVariable(obj == null ? null : obj.type.name, obj);\r\n                    break;\r\n                }\r\n                // astore_2\r\n                case 0x4d: {\r\n                    var obj = this_1.operandStack.pop();\r\n                    this_1.locals[2] = new types_1.JavaVariable(obj == null ? null : obj.type.name, obj);\r\n                    break;\r\n                }\r\n                // astore_3\r\n                case 0x4e: {\r\n                    var obj = this_1.operandStack.pop();\r\n                    this_1.locals[3] = new types_1.JavaVariable(obj == null ? null : obj.type.name, obj);\r\n                    break;\r\n                }\r\n                // iastore\r\n                case 0x4f:\r\n                // lastore\r\n                case 0x50:\r\n                // fastore\r\n                case 0x51:\r\n                // dastore\r\n                case 0x52:\r\n                // aastore\r\n                case 0x53:\r\n                // bastore\r\n                case 0x54:\r\n                // castore\r\n                case 0x55:\r\n                // sastore\r\n                case 0x56: {\r\n                    var value = this_1.operandStack.pop();\r\n                    var index_13 = this_1.operandStack.pop();\r\n                    var array = this_1.operandStack.pop();\r\n                    this_1.runtimeDataArea.objectHeap[array.heapIndex][index_13] = value;\r\n                    // array[index] = value;\r\n                    break;\r\n                }\r\n                // pop\r\n                case 0x57: {\r\n                    this_1.operandStack.pop();\r\n                    break;\r\n                }\r\n                // pop2\r\n                case 0x58: {\r\n                    // TODO\r\n                    var isCategory1 = function (data) { return data instanceof types_1.JavaVariable || data instanceof types_1.JavaVariable; };\r\n                    var isCategory2 = function (data) { return data instanceof types_1.JavaVariable || data instanceof types_1.JavaVariable; };\r\n                    var value1 = this_1.operandStack.pop();\r\n                    if (isCategory2(value1))\r\n                        break;\r\n                    else if (isCategory1(value1)) {\r\n                        var value2 = this_1.operandStack.pop();\r\n                        if (isCategory1(value2))\r\n                            break;\r\n                        else {\r\n                            console.error(\"Illegal operation: pop2 with category 1.\");\r\n                            return { value: void 0 };\r\n                        }\r\n                    }\r\n                    break;\r\n                }\r\n                // dup\r\n                case 0x59: {\r\n                    var original = this_1.operandStack.pop();\r\n                    if (original == null) {\r\n                        this_1.operandStack.push(null);\r\n                        this_1.operandStack.push(null);\r\n                        break;\r\n                    }\r\n                    if (typeof original == \"number\") {\r\n                        this_1.operandStack.push(original);\r\n                        this_1.operandStack.push(original);\r\n                        break;\r\n                    }\r\n                    var copied = Object.assign(Object.create(Object.getPrototypeOf(original)), original);\r\n                    var copied2 = Object.assign(Object.create(Object.getPrototypeOf(original)), original);\r\n                    this_1.operandStack.push(copied);\r\n                    this_1.operandStack.push(copied2);\r\n                    break;\r\n                }\r\n                // dup_x1\r\n                case 0x5a: {\r\n                    var value1 = this_1.operandStack.pop();\r\n                    var value2 = this_1.operandStack.pop();\r\n                    if (value1 == null) {\r\n                        this_1.operandStack.push(null);\r\n                        this_1.operandStack.push(value2);\r\n                        this_1.operandStack.push(null);\r\n                        break;\r\n                    }\r\n                    if (typeof value1 == \"number\") {\r\n                        this_1.operandStack.push(value1);\r\n                        this_1.operandStack.push(value2);\r\n                        this_1.operandStack.push(value1);\r\n                        break;\r\n                    }\r\n                    var copied = Object.assign(Object.create(Object.getPrototypeOf(value1)), value1);\r\n                    var copied2 = Object.assign(Object.create(Object.getPrototypeOf(value1)), value1);\r\n                    this_1.operandStack.push(copied);\r\n                    this_1.operandStack.push(value2);\r\n                    this_1.operandStack.push(copied2);\r\n                    break;\r\n                }\r\n                // iadd\r\n                case 0x60: {\r\n                    this_1.operandStack.push(this_1.operandStack.pop() + this_1.operandStack.pop());\r\n                    break;\r\n                }\r\n                // ladd\r\n                case 0x61: {\r\n                    this_1.operandStack.push(this_1.operandStack.pop() + this_1.operandStack.pop());\r\n                    break;\r\n                }\r\n                // fadd\r\n                case 0x62: {\r\n                    this_1.operandStack.push(this_1.operandStack.pop() + this_1.operandStack.pop());\r\n                    break;\r\n                }\r\n                // dadd\r\n                case 0x63: {\r\n                    this_1.operandStack.push(this_1.operandStack.pop() + this_1.operandStack.pop());\r\n                    break;\r\n                }\r\n                // isub\r\n                case 0x64: {\r\n                    var value2 = this_1.operandStack.pop();\r\n                    var value1 = this_1.operandStack.pop();\r\n                    this_1.operandStack.push(value1 - value2);\r\n                    break;\r\n                }\r\n                // lsub\r\n                case 0x65: {\r\n                    var value2 = this_1.operandStack.pop();\r\n                    this_1.operandStack.push(this_1.operandStack.pop() - value2);\r\n                    break;\r\n                }\r\n                // fsub\r\n                case 0x66: {\r\n                    var value2 = this_1.operandStack.pop();\r\n                    this_1.operandStack.push(this_1.operandStack.pop() - value2);\r\n                    break;\r\n                }\r\n                // dsub\r\n                case 0x67: {\r\n                    var value2 = this_1.operandStack.pop();\r\n                    this_1.operandStack.push(this_1.operandStack.pop() - value2);\r\n                    break;\r\n                }\r\n                // imul\r\n                case 0x68: {\r\n                    var value2 = this_1.operandStack.pop();\r\n                    this_1.operandStack.push(this_1.operandStack.pop() * value2);\r\n                    break;\r\n                }\r\n                // lmul\r\n                case 0x69: {\r\n                    var value2 = this_1.operandStack.pop();\r\n                    this_1.operandStack.push(this_1.operandStack.pop() * value2);\r\n                    break;\r\n                }\r\n                // fmul\r\n                case 0x6a: {\r\n                    var value2 = this_1.operandStack.pop();\r\n                    this_1.operandStack.push(this_1.operandStack.pop() * value2);\r\n                    break;\r\n                }\r\n                // dmul\r\n                case 0x6b: {\r\n                    var value2 = this_1.operandStack.pop();\r\n                    this_1.operandStack.push(this_1.operandStack.pop() * value2);\r\n                    break;\r\n                }\r\n                // idiv\r\n                case 0x6c: {\r\n                    var value2 = this_1.operandStack.pop();\r\n                    this_1.operandStack.push(this_1.operandStack.pop() / value2);\r\n                    break;\r\n                }\r\n                // ldiv\r\n                case 0x6d: {\r\n                    var value2 = this_1.operandStack.pop();\r\n                    this_1.operandStack.push(this_1.operandStack.pop() / value2);\r\n                    break;\r\n                }\r\n                // fdiv\r\n                case 0x6e: {\r\n                    var value2 = this_1.operandStack.pop();\r\n                    this_1.operandStack.push(this_1.operandStack.pop() / value2);\r\n                    break;\r\n                }\r\n                // ddiv\r\n                case 0x6f: {\r\n                    var value2 = this_1.operandStack.pop();\r\n                    this_1.operandStack.push(this_1.operandStack.pop() / value2);\r\n                    break;\r\n                }\r\n                // irem\r\n                case 0x70: {\r\n                    var value2 = this_1.operandStack.pop();\r\n                    var value1 = this_1.operandStack.pop();\r\n                    this_1.operandStack.push(value1 % value2);\r\n                    break;\r\n                }\r\n                // lrem\r\n                case 0x71: {\r\n                    var value2 = this_1.operandStack.pop();\r\n                    var value1 = this_1.operandStack.pop();\r\n                    this_1.operandStack.push(value1 % value2);\r\n                    break;\r\n                }\r\n                // frem\r\n                case 0x72: {\r\n                    var value2 = this_1.operandStack.pop();\r\n                    var value1 = this_1.operandStack.pop();\r\n                    this_1.operandStack.push(value1 % value2);\r\n                    break;\r\n                }\r\n                // drem\r\n                case 0x73: {\r\n                    var value2 = this_1.operandStack.pop();\r\n                    var value1 = this_1.operandStack.pop();\r\n                    this_1.operandStack.push(value1 % value2);\r\n                    break;\r\n                }\r\n                // ineg\r\n                case 0x74: {\r\n                    this_1.operandStack.push(-this_1.operandStack.pop());\r\n                    break;\r\n                }\r\n                // lneg\r\n                case 0x75: {\r\n                    this_1.operandStack.push(-this_1.operandStack.pop());\r\n                    break;\r\n                }\r\n                // fneg\r\n                case 0x76: {\r\n                    this_1.operandStack.push(-this_1.operandStack.pop());\r\n                    break;\r\n                }\r\n                // dneg\r\n                case 0x77: {\r\n                    this_1.operandStack.push(-this_1.operandStack.pop());\r\n                    break;\r\n                }\r\n                // ishl\r\n                case 0x78: {\r\n                    var value2 = this_1.operandStack.pop();\r\n                    var value1 = this_1.operandStack.pop();\r\n                    this_1.operandStack.push(value1 << value2);\r\n                    break;\r\n                }\r\n                // lshl\r\n                case 0x79: {\r\n                    var value2 = this_1.operandStack.pop();\r\n                    var value1 = this_1.operandStack.pop();\r\n                    this_1.operandStack.push(value1 << value2);\r\n                    break;\r\n                }\r\n                // ishr\r\n                case 0x7a: {\r\n                    var value2 = this_1.operandStack.pop();\r\n                    var value1 = this_1.operandStack.pop();\r\n                    this_1.operandStack.push(value1 >> value2);\r\n                    break;\r\n                }\r\n                // lshr\r\n                case 0x7b: {\r\n                    var value2 = this_1.operandStack.pop();\r\n                    var value1 = this_1.operandStack.pop();\r\n                    this_1.operandStack.push(value1 >> value2);\r\n                    break;\r\n                }\r\n                // iushr\r\n                case 0x7c: {\r\n                    var value2 = this_1.operandStack.pop();\r\n                    var value1 = this_1.operandStack.pop();\r\n                    this_1.operandStack.push(value1 >> value2);\r\n                    break;\r\n                }\r\n                // lushr\r\n                case 0x7d: {\r\n                    var value2 = this_1.operandStack.pop();\r\n                    var value1 = this_1.operandStack.pop();\r\n                    this_1.operandStack.push(value1 >> value2);\r\n                    break;\r\n                }\r\n                // iand\r\n                case 0x7e: {\r\n                    var value2 = this_1.operandStack.pop();\r\n                    var value1 = this_1.operandStack.pop();\r\n                    this_1.operandStack.push(value1 & value2);\r\n                    break;\r\n                }\r\n                // land\r\n                case 0x7f: {\r\n                    var value2 = this_1.operandStack.pop();\r\n                    var value1 = this_1.operandStack.pop();\r\n                    this_1.operandStack.push(value1 & value2);\r\n                    break;\r\n                }\r\n                // ior\r\n                case 0x80: {\r\n                    var value2 = this_1.operandStack.pop();\r\n                    var value1 = this_1.operandStack.pop();\r\n                    this_1.operandStack.push(value1 | value2);\r\n                    break;\r\n                }\r\n                // lor\r\n                case 0x81: {\r\n                    var value2 = this_1.operandStack.pop();\r\n                    var value1 = this_1.operandStack.pop();\r\n                    this_1.operandStack.push(value1 | value2);\r\n                    break;\r\n                }\r\n                // ixor\r\n                case 0x82: {\r\n                    var value2 = this_1.operandStack.pop();\r\n                    var value1 = this_1.operandStack.pop();\r\n                    this_1.operandStack.push(value1 ^ value2);\r\n                    break;\r\n                }\r\n                // lxor\r\n                case 0x83: {\r\n                    var value2 = this_1.operandStack.pop();\r\n                    var value1 = this_1.operandStack.pop();\r\n                    this_1.operandStack.push(value1 ^ value2);\r\n                    break;\r\n                }\r\n                // iinc\r\n                case 0x84: {\r\n                    var index_14 = this_1.opcode.operands[0];\r\n                    var vConst = this_1.opcode.operands[1];\r\n                    this_1.locals[index_14].value = this_1.locals[index_14].value + vConst;\r\n                    break;\r\n                }\r\n                // i2l~i2s\r\n                // TypeScript has only number type so these operation don't have any effects.\r\n                case 0x85:\r\n                case 0x86:\r\n                case 0x87:\r\n                case 0x88:\r\n                case 0x89:\r\n                case 0x8a:\r\n                case 0x8b:\r\n                case 0x8c:\r\n                case 0x8d:\r\n                case 0x8e:\r\n                case 0x8f:\r\n                case 0x90:\r\n                case 0x91:\r\n                case 0x92:\r\n                case 0x93:\r\n                    break;\r\n                // lcmp\r\n                case 0x94: {\r\n                    var value2 = this_1.operandStack.pop();\r\n                    var value1 = this_1.operandStack.pop();\r\n                    if (value2 < value1)\r\n                        this_1.operandStack.push(1);\r\n                    else if (value2 == value1)\r\n                        this_1.operandStack.push(0);\r\n                    else\r\n                        this_1.operandStack.push(-1);\r\n                    break;\r\n                }\r\n                // fcmpl\r\n                case 0x95: {\r\n                    var value2 = this_1.operandStack.pop();\r\n                    var value1 = this_1.operandStack.pop();\r\n                    if (isNaN(value1) || isNaN(value2))\r\n                        this_1.operandStack.push(-1);\r\n                    else if (value2 < value1)\r\n                        this_1.operandStack.push(1);\r\n                    else if (value2 == value1)\r\n                        this_1.operandStack.push(0);\r\n                    else\r\n                        this_1.operandStack.push(-1);\r\n                    break;\r\n                }\r\n                // fcmpg\r\n                case 0x96: {\r\n                    var value2 = this_1.operandStack.pop();\r\n                    var value1 = this_1.operandStack.pop();\r\n                    if (isNaN(value1) || isNaN(value2))\r\n                        this_1.operandStack.push(-1);\r\n                    else if (value2 < value1)\r\n                        this_1.operandStack.push(1);\r\n                    else if (value2 == value1)\r\n                        this_1.operandStack.push(0);\r\n                    else\r\n                        this_1.operandStack.push(1);\r\n                    break;\r\n                }\r\n                // dcmpl\r\n                case 0x97: {\r\n                    var value2 = this_1.operandStack.pop();\r\n                    var value1 = this_1.operandStack.pop();\r\n                    if (isNaN(value1) || isNaN(value2))\r\n                        this_1.operandStack.push(-1);\r\n                    else if (value2 < value1)\r\n                        this_1.operandStack.push(1);\r\n                    else if (value2 == value1)\r\n                        this_1.operandStack.push(0);\r\n                    else\r\n                        this_1.operandStack.push(-1);\r\n                    break;\r\n                }\r\n                // dcmpg\r\n                case 0x98: {\r\n                    var value2 = this_1.operandStack.pop();\r\n                    var value1 = this_1.operandStack.pop();\r\n                    if (isNaN(value1) || isNaN(value2))\r\n                        this_1.operandStack.push(-1);\r\n                    else if (value2 < value1)\r\n                        this_1.operandStack.push(1);\r\n                    else if (value2 == value1)\r\n                        this_1.operandStack.push(0);\r\n                    else\r\n                        this_1.operandStack.push(1);\r\n                    break;\r\n                }\r\n                // ifeq\r\n                case 0x99: {\r\n                    var branchByte1 = this_1.opcode.operands[0];\r\n                    var branchByte2 = this_1.opcode.operands[1];\r\n                    var a = this_1.operandStack.pop();\r\n                    if (a === 0 || !a) {\r\n                        return { value: this_1.executeOpcodes(this_1.opcode.id + ((branchByte1 << 8) | branchByte2)) };\r\n                    }\r\n                    break;\r\n                }\r\n                // ifne\r\n                case 0x9a: {\r\n                    var branchByte1 = this_1.opcode.operands[0];\r\n                    var branchByte2 = this_1.opcode.operands[1];\r\n                    if (this_1.operandStack.pop() !== 0) {\r\n                        return { value: this_1.executeOpcodes(this_1.opcode.id + ((branchByte1 << 8) | branchByte2)) };\r\n                    }\r\n                    break;\r\n                }\r\n                // iflt\r\n                case 0x9b: {\r\n                    var branchByte1 = this_1.opcode.operands[0];\r\n                    var branchByte2 = this_1.opcode.operands[1];\r\n                    if (this_1.operandStack.pop() < 0) {\r\n                        return { value: this_1.executeOpcodes(this_1.opcode.id + ((branchByte1 << 8) | branchByte2)) };\r\n                    }\r\n                    break;\r\n                }\r\n                // ifge\r\n                case 0x9c: {\r\n                    var branchByte1 = this_1.opcode.operands[0];\r\n                    var branchByte2 = this_1.opcode.operands[1];\r\n                    if (this_1.operandStack.pop() >= 0) {\r\n                        return { value: this_1.executeOpcodes(this_1.opcode.id + ((branchByte1 << 8) | branchByte2)) };\r\n                    }\r\n                    break;\r\n                }\r\n                // ifgt\r\n                case 0x9d: {\r\n                    var branchByte1 = this_1.opcode.operands[0];\r\n                    var branchByte2 = this_1.opcode.operands[1];\r\n                    if (this_1.operandStack.pop() > 0) {\r\n                        return { value: this_1.executeOpcodes(this_1.opcode.id + ((branchByte1 << 8) | branchByte2)) };\r\n                    }\r\n                    break;\r\n                }\r\n                // ifle\r\n                case 0x9e: {\r\n                    var branchByte1 = this_1.opcode.operands[0];\r\n                    var branchByte2 = this_1.opcode.operands[1];\r\n                    if (this_1.operandStack.pop() <= 0) {\r\n                        return { value: this_1.executeOpcodes(this_1.opcode.id + ((branchByte1 << 8) | branchByte2)) };\r\n                    }\r\n                    break;\r\n                }\r\n                // if_icmpeq\r\n                case 0x9f: {\r\n                    var branchByte1 = this_1.opcode.operands[0];\r\n                    var branchByte2 = this_1.opcode.operands[1];\r\n                    var value2 = this_1.operandStack.pop();\r\n                    var value1 = this_1.operandStack.pop();\r\n                    if (value1 === value2) {\r\n                        return { value: this_1.executeOpcodes(this_1.opcode.id + ((branchByte1 << 8) | branchByte2)) };\r\n                    }\r\n                    break;\r\n                }\r\n                // if_icmpne\r\n                case 0xa0: {\r\n                    var branchByte1 = this_1.opcode.operands[0];\r\n                    var branchByte2 = this_1.opcode.operands[1];\r\n                    var value2 = this_1.operandStack.pop();\r\n                    var value1 = this_1.operandStack.pop();\r\n                    if (value1 !== value2) {\r\n                        return { value: this_1.executeOpcodes(this_1.opcode.id + ((branchByte1 << 8) | branchByte2)) };\r\n                    }\r\n                    break;\r\n                }\r\n                // if_icmplt\r\n                case 0xa1: {\r\n                    var branchByte1 = this_1.opcode.operands[0];\r\n                    var branchByte2 = this_1.opcode.operands[1];\r\n                    var value2 = this_1.operandStack.pop();\r\n                    var value1 = this_1.operandStack.pop();\r\n                    if (value1 < value2) {\r\n                        return { value: this_1.executeOpcodes(this_1.opcode.id + ((branchByte1 << 8) | branchByte2)) };\r\n                    }\r\n                    break;\r\n                }\r\n                // if_icmpge\r\n                case 0xa2: {\r\n                    var branchByte1 = this_1.opcode.operands[0];\r\n                    var branchByte2 = this_1.opcode.operands[1];\r\n                    var value2 = this_1.operandStack.pop();\r\n                    var value1 = this_1.operandStack.pop();\r\n                    if (value1 >= value2) {\r\n                        return { value: this_1.executeOpcodes(this_1.opcode.id + ((branchByte1 << 8) | branchByte2)) };\r\n                    }\r\n                    break;\r\n                }\r\n                // if_icmpgt\r\n                case 0xa3: {\r\n                    var branchByte1 = this_1.opcode.operands[0];\r\n                    var branchByte2 = this_1.opcode.operands[1];\r\n                    var value2 = this_1.operandStack.pop();\r\n                    var value1 = this_1.operandStack.pop();\r\n                    if (value1 > value2) {\r\n                        return { value: this_1.executeOpcodes(this_1.opcode.id + ((branchByte1 << 8) | branchByte2)) };\r\n                    }\r\n                    break;\r\n                }\r\n                // if_icmple\r\n                case 0xa4: {\r\n                    var branchByte1 = this_1.opcode.operands[0];\r\n                    var branchByte2 = this_1.opcode.operands[1];\r\n                    var value2 = this_1.operandStack.pop();\r\n                    var value1 = this_1.operandStack.pop();\r\n                    if (value1 <= value2) {\r\n                        return { value: this_1.executeOpcodes(this_1.opcode.id + ((branchByte1 << 8) | branchByte2)) };\r\n                    }\r\n                    break;\r\n                }\r\n                // if_acmpeq\r\n                case 0xa5: {\r\n                    var branchByte1 = this_1.opcode.operands[0];\r\n                    var branchByte2 = this_1.opcode.operands[1];\r\n                    var value2 = this_1.operandStack.pop();\r\n                    var value1 = this_1.operandStack.pop();\r\n                    if ((value1 == null && value2 == null)) {\r\n                        return { value: this_1.executeOpcodes(this_1.opcode.id + ((branchByte1 << 8) | branchByte2)) };\r\n                    }\r\n                    if ((value1 != null && value2 == null) || (value1 == null && value2 != null)) {\r\n                        break;\r\n                    }\r\n                    // TODO\r\n                    if (value1.type.name === \"java.lang.String\" && value2.type.name === \"java.lang.String\") {\r\n                        var hash1 = this_1.runtimeDataArea.objectHeap[value1.heapIndex].filter(function (v) { return v.name === \"hash\"; })[0].value;\r\n                        var hash2 = this_1.runtimeDataArea.objectHeap[value2.heapIndex].filter(function (v) { return v.name === \"hash\"; })[0].value;\r\n                        if (hash1 === hash2) {\r\n                            return { value: this_1.executeOpcodes(this_1.opcode.id + ((branchByte1 << 8) | branchByte2)) };\r\n                        }\r\n                    }\r\n                    if (value1.type.name === value2.type.name) {\r\n                        return { value: this_1.executeOpcodes(this_1.opcode.id + ((branchByte1 << 8) | branchByte2)) };\r\n                    }\r\n                    break;\r\n                }\r\n                // if_acmpne\r\n                case 0xa6: {\r\n                    var branchByte1 = this_1.opcode.operands[0];\r\n                    var branchByte2 = this_1.opcode.operands[1];\r\n                    var value2 = this_1.operandStack.pop();\r\n                    var value1 = this_1.operandStack.pop();\r\n                    if ((value1 == null && value2 == null))\r\n                        break;\r\n                    if ((value1 != null && value2 == null) || (value1 == null && value2 != null)) {\r\n                        return { value: this_1.executeOpcodes(this_1.opcode.id + ((branchByte1 << 8) | branchByte2)) };\r\n                    }\r\n                    // TODO\r\n                    if (value1.type.name === \"java.lang.String\" && value2.type.name === \"java.lang.String\") {\r\n                        var hash1 = this_1.runtimeDataArea.objectHeap[value1.heapIndex].filter(function (v) { return v.name === \"hash\"; })[0].value;\r\n                        var hash2 = this_1.runtimeDataArea.objectHeap[value2.heapIndex].filter(function (v) { return v.name === \"hash\"; })[0].value;\r\n                        if (hash1 !== hash2) {\r\n                            return { value: this_1.executeOpcodes(this_1.opcode.id + ((branchByte1 << 8) | branchByte2)) };\r\n                        }\r\n                    }\r\n                    /*\r\n                    console.log(value1, value2)\r\n                    if (value1.type.name !== value2.type.name) {\r\n                        return this.executeOpcodes(this.opcode.id + ((branchByte1 << 8) | branchByte2));\r\n                    }\r\n\r\n                     */\r\n                    // TODO\r\n                    if (value1.type.name == \"java.lang.Class\") {\r\n                        var hashCode1 = JavaObject_1.JavaObject.hashCode(this_1.thread, this_1.javaClass, value1);\r\n                        var hashCode2 = JavaObject_1.JavaObject.hashCode(this_1.thread, this_1.javaClass, value2);\r\n                        if (hashCode1 !== hashCode2) {\r\n                            return { value: this_1.executeOpcodes(this_1.opcode.id + ((branchByte1 << 8) | branchByte2)) };\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (value1.type.name !== value2.type.name) {\r\n                            return { value: this_1.executeOpcodes(this_1.opcode.id + ((branchByte1 << 8) | branchByte2)) };\r\n                        }\r\n                    }\r\n                    break;\r\n                }\r\n                // goto\r\n                case 0xa7: {\r\n                    var branchByte1 = this_1.opcode.operands[0];\r\n                    var branchByte2 = this_1.opcode.operands[1];\r\n                    return { value: this_1.executeOpcodes(this_1.opcode.id + ((branchByte1 << 8) | branchByte2)) };\r\n                }\r\n                // tableswitch\r\n                case 0xaa: {\r\n                    var def = this_1.opcode.operands[0];\r\n                    var low = this_1.opcode.operands[1];\r\n                    var high = this_1.opcode.operands[2];\r\n                    var index_15 = this_1.operandStack.pop();\r\n                    var newOperands = this_1.operandStack.reverse();\r\n                    console.log(index_15, def, this_1.opcode.id + def, newOperands);\r\n                    if (index_15 < low || high < index_15) {\r\n                        return { value: this_1.executeOpcodes(this_1.opcode.id + def) };\r\n                    }\r\n                    else {\r\n                        // TODO\r\n                        console.log(index_15 - low, newOperands);\r\n                        return { value: void 0 };\r\n                    }\r\n                    return { value: this_1.executeOpcodes(this_1.opcode.id + def) };\r\n                }\r\n                // lookupswitch\r\n                case 0xab: {\r\n                    var key = this_1.operandStack.pop();\r\n                    var def = this_1.opcode.operands[0];\r\n                    var npairs = this_1.opcode.operands[1];\r\n                    for (var j = 2; j < npairs + 2; j++) {\r\n                        if (this_1.opcode.operands[j] == key) {\r\n                            return { value: this_1.executeOpcodes(this_1.opcode.id + this_1.opcode.operands[j + 1]) };\r\n                        }\r\n                    }\r\n                    return { value: this_1.executeOpcodes(this_1.opcode.id + def) };\r\n                }\r\n                // ireturn\r\n                case 0xac: {\r\n                    this_1.isRunning = false;\r\n                    return { value: this_1.operandStack.pop() };\r\n                }\r\n                // lreturn\r\n                case 0xad: {\r\n                    this_1.isRunning = false;\r\n                    return { value: this_1.operandStack.pop() };\r\n                }\r\n                // freturn\r\n                case 0xae: {\r\n                    this_1.isRunning = false;\r\n                    return { value: this_1.operandStack.pop() };\r\n                }\r\n                // dreturn\r\n                case 0xaf: {\r\n                    this_1.isRunning = false;\r\n                    return { value: this_1.operandStack.pop() };\r\n                }\r\n                // areturn\r\n                case 0xb0: {\r\n                    this_1.isRunning = false;\r\n                    return { value: this_1.operandStack.pop() };\r\n                }\r\n                // return\r\n                case 0xb1: {\r\n                    this_1.isRunning = false;\r\n                    return { value: void 0 };\r\n                }\r\n                // invokespecial\r\n                case 0xb7: {\r\n                    var indexByte1 = this_1.opcode.operands[0];\r\n                    var indexByte2 = this_1.opcode.operands[1];\r\n                    var methodRef = (0, ClassFileLoader_js_1.getConstantPoolInfo)(this_1.constantPool, (indexByte1 << 8) | indexByte2).info;\r\n                    var methodNameAndTypeRef = (0, ClassFileLoader_js_1.getConstantPoolInfo)(this_1.constantPool, methodRef.nameAndTypeIndex).info;\r\n                    var argumentsAndReturnType = (0, ClassFileLoader_js_1.getArgumentsAndReturnType)((0, ConstantPoolInfo_js_1.readUtf8FromConstantPool)(this_1.constantPool, methodNameAndTypeRef.descriptorIndex));\r\n                    var descriptor = (0, ConstantPoolInfo_js_1.readUtf8FromConstantPool)(this_1.constantPool, methodNameAndTypeRef.descriptorIndex);\r\n                    var argumentsCount = argumentsAndReturnType[0].length;\r\n                    var clazz = (0, ClassFileLoader_js_1.getConstantPoolInfo)(this_1.constantPool, methodRef.classIndex).info;\r\n                    var invokeMethodName = (0, ConstantPoolInfo_js_1.readUtf8FromConstantPool)(this_1.constantPool, methodNameAndTypeRef.nameIndex).split(\"/\").join(\".\");\r\n                    var className = (0, ConstantPoolInfo_js_1.readUtf8FromConstantPool)(this_1.constantPool, clazz.nameIndex).split(\"/\").join(\".\");\r\n                    var methodArgs = [];\r\n                    for (var i_2 = 0; i_2 < argumentsCount; i_2++) {\r\n                        methodArgs.push(this_1.operandStack.pop());\r\n                    }\r\n                    // TODO\r\n                    if (className === \"java.lang.ThreadLocal\") {\r\n                        this_1.operandStack.push(null);\r\n                        break;\r\n                    }\r\n                    var obj = this_1.operandStack.pop();\r\n                    var result = this_1.thread.invokeMethod(invokeMethodName, descriptor, BootstrapClassLoader_1.default.getInstance().findClass(className), methodArgs, obj);\r\n                    if (result !== undefined) {\r\n                        this_1.operandStack.push(result);\r\n                    }\r\n                    break;\r\n                }\r\n                // invokestatic\r\n                case 0xb8: {\r\n                    var indexByte1 = this_1.opcode.operands[0];\r\n                    var indexByte2 = this_1.opcode.operands[1];\r\n                    var methodRef = (0, ClassFileLoader_js_1.getConstantPoolInfo)(this_1.constantPool, (indexByte1 << 8) | indexByte2).info;\r\n                    var methodNameAndTypeRef = (0, ClassFileLoader_js_1.getConstantPoolInfo)(this_1.constantPool, methodRef.nameAndTypeIndex).info;\r\n                    var descriptor = (0, ConstantPoolInfo_js_1.readUtf8FromConstantPool)(this_1.constantPool, methodNameAndTypeRef.descriptorIndex);\r\n                    var clazz = (0, ClassFileLoader_js_1.getConstantPoolInfo)(this_1.constantPool, methodRef.classIndex).info;\r\n                    var className = (0, ConstantPoolInfo_js_1.readUtf8FromConstantPool)(this_1.constantPool, clazz.nameIndex).split(\"/\").join(\".\");\r\n                    var invokeMethodName = (0, ConstantPoolInfo_js_1.readUtf8FromConstantPool)(this_1.constantPool, methodNameAndTypeRef.nameIndex);\r\n                    var argumentsAndReturnType = (0, ClassFileLoader_js_1.getArgumentsAndReturnType)((0, ConstantPoolInfo_js_1.readUtf8FromConstantPool)(this_1.constantPool, methodNameAndTypeRef.descriptorIndex));\r\n                    var argumentsCount = argumentsAndReturnType[0].length;\r\n                    var methodArgs = [];\r\n                    // TODO\r\n                    if (invokeMethodName == \"newUpdater\") {\r\n                        this_1.operandStack.push(null);\r\n                        break;\r\n                    }\r\n                    for (var i_3 = 0; i_3 < argumentsCount; i_3++) {\r\n                        methodArgs.push(this_1.operandStack.pop());\r\n                    }\r\n                    // TODO\r\n                    if (className == \"java.lang.reflect.Modifier\") {\r\n                        var klass = BootstrapClassLoader_1.default.getInstance().findClass(className.split(\"/\").join(\".\"));\r\n                        klass.initStatic(this_1.thread);\r\n                    }\r\n                    var result = this_1.thread.invokeMethod(invokeMethodName, descriptor, BootstrapClassLoader_1.default.getInstance().findClass(className), methodArgs, null);\r\n                    if (result !== undefined) {\r\n                        this_1.operandStack.push(result);\r\n                    }\r\n                    break;\r\n                }\r\n                // invokeinterface\r\n                case 0xb9: {\r\n                    var indexByte1 = this_1.opcode.operands[0];\r\n                    var indexByte2 = this_1.opcode.operands[1];\r\n                    var methodRef = (0, ClassFileLoader_js_1.getConstantPoolInfo)(this_1.constantPool, (indexByte1 << 8) | indexByte2).info;\r\n                    var methodNameAndTypeRef = (0, ClassFileLoader_js_1.getConstantPoolInfo)(this_1.constantPool, methodRef.nameAndTypeIndex).info;\r\n                    var descriptor = (0, ConstantPoolInfo_js_1.readUtf8FromConstantPool)(this_1.constantPool, methodNameAndTypeRef.descriptorIndex);\r\n                    var invokeMethodName = (0, ConstantPoolInfo_js_1.readUtf8FromConstantPool)(this_1.constantPool, methodNameAndTypeRef.nameIndex);\r\n                    var argumentsAndReturnType = (0, ClassFileLoader_js_1.getArgumentsAndReturnType)((0, ConstantPoolInfo_js_1.readUtf8FromConstantPool)(this_1.constantPool, methodNameAndTypeRef.descriptorIndex));\r\n                    var argumentsCount = argumentsAndReturnType[0].length;\r\n                    var methodArgs = [];\r\n                    for (var i_4 = 0; i_4 < argumentsCount; i_4++) {\r\n                        methodArgs.push(this_1.operandStack.pop());\r\n                    }\r\n                    var obj = this_1.operandStack.pop();\r\n                    var result = this_1.thread.invokeMethod(invokeMethodName, descriptor, obj.type, methodArgs, obj);\r\n                    if (result !== undefined) {\r\n                        this_1.operandStack.push(result);\r\n                    }\r\n                    break;\r\n                }\r\n                // invokedynamic\r\n                case 0xba: {\r\n                    var indexByte1 = this_1.opcode.operands[0];\r\n                    var indexByte2 = this_1.opcode.operands[1];\r\n                    var invokeDynamicRef = (0, ClassFileLoader_js_1.getConstantPoolInfo)(this_1.constantPool, (indexByte1 << 8) | indexByte2).info;\r\n                    var bootstrapMethodAttr = this_1.javaClass.attributes.filter(function (attribute) { return (0, ConstantPoolInfo_js_1.readUtf8FromConstantPool)(_this.constantPool, attribute.attributeNameIndex) == \"BootstrapMethods\"; })[0];\r\n                    var bootstrapMethodRef = (0, ClassFileLoader_js_1.getConstantPoolInfo)(this_1.constantPool, bootstrapMethodAttr.bootstrapMethods[invokeDynamicRef.bootstrapMethodAttrIndex].bootstrapMethodRef).info;\r\n                    var bootstrapMethod = (0, ClassFileLoader_js_1.getConstantPoolInfo)(this_1.constantPool, bootstrapMethodRef.referenceIndex).info;\r\n                    var bootstrapMethodClass = (0, ClassFileLoader_js_1.getConstantPoolInfo)(this_1.constantPool, bootstrapMethod.classIndex).info;\r\n                    var nameAndTypeRef = (0, ClassFileLoader_js_1.getConstantPoolInfo)(this_1.constantPool, invokeDynamicRef.nameAndTypeIndex).info;\r\n                    var bootstrapNameAndTypeRef = (0, ClassFileLoader_js_1.getConstantPoolInfo)(this_1.constantPool, bootstrapMethod.nameAndTypeIndex).info;\r\n                    var implMethodHandle = (0, ClassFileLoader_js_1.getConstantPoolInfo)(this_1.constantPool, bootstrapMethodAttr.bootstrapMethods[invokeDynamicRef.bootstrapMethodAttrIndex].bootstrapArguments[1]).info;\r\n                    var implMethodNameAndType = (0, ClassFileLoader_js_1.getConstantPoolInfo)(this_1.constantPool, (0, ClassFileLoader_js_1.getConstantPoolInfo)(this_1.constantPool, implMethodHandle.referenceIndex).info.nameAndTypeIndex).info;\r\n                    var caller = this_1.thread.invokeMethod(\"lookup\", \"()Ljava/lang/invoke/MethodHandles$Lookup;\", BootstrapClassLoader_1.default.getInstance().findClass(\"java.lang.invoke.MethodHandles\"), [], null);\r\n                    console.log(\"A\");\r\n                    var invokedName = this_1.runtimeDataArea.createStringObject(this_1.thread, (0, ConstantPoolInfo_js_1.readUtf8FromConstantPool)(this_1.constantPool, nameAndTypeRef.nameIndex));\r\n                    console.log(\"B\");\r\n                    var invokedType = this_1.runtimeDataArea.createObject(\"java.lang.invoke.MethodType\");\r\n                    var array = this_1.runtimeDataArea.createAArray(\"java.lang.Class\", 0);\r\n                    this_1.thread.invokeMethod(\"<init>\", \"([Ljava/lang/Class;Ljava/lang/Class;)V\", invokedType.type, [\r\n                        this_1.runtimeDataArea.createClassObject(this_1.thread, BootstrapClassLoader_1.default.getInstance().findClass(\"java.lang.Runnable\")),\r\n                        array\r\n                    ], invokedType);\r\n                    console.log(\"C\");\r\n                    var samMethodType = this_1.runtimeDataArea.createObject(\"java.lang.invoke.MethodType\");\r\n                    var array0 = this_1.runtimeDataArea.createAArray(\"java.lang.Class\", 0);\r\n                    this_1.thread.invokeMethod(\"<init>\", \"([Ljava/lang/Class;Ljava/lang/Class;)V\", samMethodType.type, [\r\n                        this_1.runtimeDataArea.createClassObject(this_1.thread, BootstrapClassLoader_1.default.getInstance().findClass(\"java.lang.Void\")),\r\n                        array0\r\n                    ], samMethodType);\r\n                    console.log(\"D\");\r\n                    var implMethod = this_1.thread.invokeMethod(\"findVirtual\", \"(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/MethodHandle;\", caller.type, [\r\n                        invokedType,\r\n                        this_1.runtimeDataArea.createStringObject(this_1.thread, (0, ConstantPoolInfo_js_1.readUtf8FromConstantPool)(this_1.constantPool, implMethodNameAndType.nameIndex)),\r\n                        this_1.runtimeDataArea.createClassObject(this_1.thread, this_1.javaClass)\r\n                    ], caller);\r\n                    console.log(\"E\");\r\n                    var instantiatedMethodType = this_1.runtimeDataArea.createObject(\"java.lang.invoke.MethodType\");\r\n                    var array1 = this_1.runtimeDataArea.createAArray(\"java.lang.Class\", 0);\r\n                    this_1.thread.invokeMethod(\"<init>\", \"([Ljava/lang/Class;Ljava/lang/Class;)V\", instantiatedMethodType.type, [\r\n                        this_1.runtimeDataArea.createClassObject(this_1.thread, BootstrapClassLoader_1.default.getInstance().findClass(\"java.lang.Void\")),\r\n                        array1\r\n                    ], instantiatedMethodType);\r\n                    console.log(\"F\");\r\n                    var callSite = this_1.thread.invokeMethod((0, ConstantPoolInfo_js_1.readUtf8FromConstantPool)(this_1.constantPool, bootstrapNameAndTypeRef.nameIndex), (0, ConstantPoolInfo_js_1.readUtf8FromConstantPool)(this_1.constantPool, bootstrapNameAndTypeRef.descriptorIndex), BootstrapClassLoader_1.default.getInstance().findClass((0, ConstantPoolInfo_js_1.readUtf8FromConstantPool)(this_1.constantPool, bootstrapMethodClass.nameIndex).split(\"/\").join(\".\")), [caller, invokedName, invokedType, samMethodType, implMethod, instantiatedMethodType], null);\r\n                    console.log(\"G\");\r\n                    break;\r\n                }\r\n                // new\r\n                case 0xbb: {\r\n                    var indexByte1 = this_1.opcode.operands[0];\r\n                    var indexByte2 = this_1.opcode.operands[1];\r\n                    var classRef = (0, ClassFileLoader_js_1.getConstantPoolInfo)(this_1.constantPool, (indexByte1 << 8) | indexByte2).info;\r\n                    var className = (0, ConstantPoolInfo_js_1.readUtf8FromConstantPool)(this_1.constantPool, classRef.nameIndex).split(\"/\").join(\".\");\r\n                    var object = this_1.runtimeDataArea.createObject(className);\r\n                    object.init(this_1.runtimeDataArea);\r\n                    this_1.operandStack.push(object);\r\n                    break;\r\n                }\r\n                // newarray\r\n                case 0xbc: {\r\n                    var type = this_1.opcode.operands[0];\r\n                    var count = this_1.operandStack.pop();\r\n                    this_1.operandStack.push(this_1.runtimeDataArea.createPArray(type, count));\r\n                    break;\r\n                }\r\n                // anewarray\r\n                case 0xbd: {\r\n                    var indexByte1 = this_1.opcode.operands[0];\r\n                    var indexByte2 = this_1.opcode.operands[1];\r\n                    var classRef = (0, ClassFileLoader_js_1.getConstantPoolInfo)(this_1.constantPool, (indexByte1 << 8) | indexByte2).info;\r\n                    var className = (0, ConstantPoolInfo_js_1.readUtf8FromConstantPool)(this_1.constantPool, classRef.nameIndex);\r\n                    var count = this_1.operandStack.pop();\r\n                    this_1.operandStack.push(this_1.runtimeDataArea.createAArray(className.split(\"/\").join(\".\"), count));\r\n                    break;\r\n                }\r\n                // arraylength\r\n                case 0xbe: {\r\n                    var array = this_1.operandStack.pop();\r\n                    if (!array.isArray) {\r\n                        throw new Error(\"The stack values is not array object.\");\r\n                    }\r\n                    this_1.operandStack.push(this_1.runtimeDataArea.objectHeap[array.heapIndex].length);\r\n                    break;\r\n                }\r\n                // athrow\r\n                case 0xbf: {\r\n                    var throwable_1 = this_1.operandStack.pop();\r\n                    if (throwable_1 == null) {\r\n                        throwable_1 = this_1.runtimeDataArea.createObject(\"java.lang.NullPointerException\");\r\n                    }\r\n                    var codeAttributes = this_1.method.attributes.filter(function (attribute) { return (0, ConstantPoolInfo_js_1.readUtf8FromConstantPool)(_this.constantPool, attribute.attributeNameIndex) === \"Code\"; });\r\n                    if (!codeAttributes || codeAttributes.length == 0) {\r\n                        console.error(\"CodeAttribute does not exist!\");\r\n                        break;\r\n                    }\r\n                    var codeAttribute = codeAttributes[0];\r\n                    var handlers = codeAttribute.exceptionTable.filter((function (value) {\r\n                        if (value.catchType != 0) {\r\n                            var catchType = _this.constantPool[value.catchType].info;\r\n                            return value.startPc <= _this.opcode.id && _this.opcode.id <= value.endPc\r\n                                && (0, ConstantPoolInfo_js_1.readUtf8FromConstantPool)(_this.constantPool, catchType.nameIndex).split(\"/\").join(\".\") === throwable_1.type.name;\r\n                        }\r\n                        else {\r\n                            return value.startPc <= _this.opcode.id && _this.opcode.id <= value.endPc;\r\n                        }\r\n                    }));\r\n                    if (handlers.length > 0) {\r\n                        var handler = handlers[0];\r\n                        var result = this_1.executeOpcodes(handler.handlerPc);\r\n                        this_1.operandStack = [];\r\n                        this_1.operandStack.push(throwable_1);\r\n                        return { value: result };\r\n                    }\r\n                    break;\r\n                }\r\n                // checkcast\r\n                case 0xc0: {\r\n                    var branchByte1 = this_1.opcode.operands[0];\r\n                    var branchByte2 = this_1.opcode.operands[1];\r\n                    var ref = (0, ClassFileLoader_js_1.getConstantPoolInfo)(this_1.constantPool, (branchByte1 << 8) | branchByte2);\r\n                    // TODO\r\n                    break;\r\n                }\r\n                // monitorenter\r\n                case 0xc2: {\r\n                    // TODO\r\n                    this_1.operandStack.pop();\r\n                    break;\r\n                }\r\n                // monitorexit\r\n                case 0xc3: {\r\n                    // TODO\r\n                    this_1.operandStack.pop();\r\n                    break;\r\n                }\r\n                // multianewarray\r\n                case 0xc5: {\r\n                    var indexByte1 = this_1.opcode.operands[0];\r\n                    var indexByte2 = this_1.opcode.operands[1];\r\n                    var classRef = (0, ClassFileLoader_js_1.getConstantPoolInfo)(this_1.constantPool, (indexByte1 << 8) | indexByte2).info;\r\n                    var className = (0, ConstantPoolInfo_js_1.readUtf8FromConstantPool)(this_1.constantPool, classRef.nameIndex);\r\n                    var dimension = this_1.opcode.operands[2];\r\n                    var sizes = new Array(dimension);\r\n                    for (var j = 0; j < dimension; j++) {\r\n                        sizes[j] = this_1.operandStack.pop();\r\n                    }\r\n                    this_1.operandStack.push(this_1.runtimeDataArea.createMDArray(className.split(\"/\").join(\".\"), dimension, sizes));\r\n                    break;\r\n                }\r\n                // ifnull\r\n                case 0xc6: {\r\n                    var branchByte1 = this_1.opcode.operands[0];\r\n                    var branchByte2 = this_1.opcode.operands[1];\r\n                    var value = this_1.operandStack.pop();\r\n                    if (value == null) {\r\n                        return { value: this_1.executeOpcodes(this_1.opcode.id + ((branchByte1 << 8) | branchByte2)) };\r\n                    }\r\n                    break;\r\n                }\r\n                // ifnonnull\r\n                case 0xc7: {\r\n                    var branchByte1 = this_1.opcode.operands[0];\r\n                    var branchByte2 = this_1.opcode.operands[1];\r\n                    var value = this_1.operandStack.pop();\r\n                    if (value) {\r\n                        return { value: this_1.executeOpcodes(this_1.opcode.id + ((branchByte1 << 8) | branchByte2)) };\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n        };\r\n        var this_1 = this;\r\n        for (var i = index; i < this.opcodes.length; i++) {\r\n            var state_1 = _loop_1(i);\r\n            if (typeof state_1 === \"object\")\r\n                return state_1.value;\r\n            if (state_1 === \"break\")\r\n                break;\r\n        }\r\n    };\r\n    Frame.prototype.loadOpcodes = function () {\r\n        var _this = this;\r\n        var codeAttributes = this.method.attributes.filter(function (attribute) { return (0, ConstantPoolInfo_js_1.readUtf8FromConstantPool)(_this.constantPool, attribute.attributeNameIndex) === \"Code\"; });\r\n        if (!codeAttributes || codeAttributes.length == 0)\r\n            return;\r\n        var codeAttribute = codeAttributes[0];\r\n        var code = codeAttribute.code;\r\n        code.resetOffset();\r\n        var name = (0, ConstantPoolInfo_js_1.readUtf8FromConstantPool)(this.constantPool, this.method.nameIndex);\r\n        var opcode;\r\n        var id = 0;\r\n        while (code.offset < code.getLength()) {\r\n            opcode = code.getUint8();\r\n            if (name == \"isMethodHandleInvokeName\")\r\n                console.log(id);\r\n            switch (opcode) {\r\n                // nop\r\n                case 0x00: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // aconst_null\r\n                case 0x01: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // getstatic\r\n                case 0xb2: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: [code.getUint8(), code.getUint8()]\r\n                    });\r\n                    id += 2;\r\n                    break;\r\n                }\r\n                // putstatic\r\n                case 0xb3: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: [code.getUint8(), code.getUint8()]\r\n                    });\r\n                    id += 2;\r\n                    break;\r\n                }\r\n                // getfield\r\n                case 0xb4: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: [code.getUint8(), code.getUint8()]\r\n                    });\r\n                    id += 2;\r\n                    break;\r\n                }\r\n                // putfield\r\n                case 0xb5: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: [code.getUint8(), code.getUint8()]\r\n                    });\r\n                    id += 2;\r\n                    break;\r\n                }\r\n                // ldc\r\n                case 0x12: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: [code.getUint8()]\r\n                    });\r\n                    id++;\r\n                    break;\r\n                }\r\n                // ldc_w\r\n                case 0x13: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: [code.getUint8(), code.getUint8()]\r\n                    });\r\n                    id += 2;\r\n                    break;\r\n                }\r\n                // ldc2_w\r\n                case 0x14: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: [code.getUint8(), code.getUint8()]\r\n                    });\r\n                    id += 2;\r\n                    break;\r\n                }\r\n                // invokevirtual\r\n                case 0xb6: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: [code.getUint8(), code.getUint8()]\r\n                    });\r\n                    id += 2;\r\n                    break;\r\n                }\r\n                // iconst_m1\r\n                case 0x02: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // iconst_0\r\n                case 0x03: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // iconst_1\r\n                case 0x04: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // iconst_2\r\n                case 0x05: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // iconst_3\r\n                case 0x06: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // iconst_4\r\n                case 0x07: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // iconst_5\r\n                case 0x08: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // lconst_0\r\n                case 0x09: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // lconst_1\r\n                case 0x0a: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // fconst_0\r\n                case 0x0b: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // fconst_1\r\n                case 0x0c: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // fconst_2\r\n                case 0x0d: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // dconst_0\r\n                case 0x0e: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // dconst_1\r\n                case 0x0f: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // bipush\r\n                case 0x10: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: [code.getInt8()]\r\n                    });\r\n                    id++;\r\n                    break;\r\n                }\r\n                // sipush\r\n                case 0x11: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: [code.getUint8(), code.getUint8()]\r\n                    });\r\n                    id += 2;\r\n                    break;\r\n                }\r\n                // iload\r\n                case 0x15: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: [code.getUint8()]\r\n                    });\r\n                    id++;\r\n                    break;\r\n                }\r\n                // lload\r\n                case 0x16: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: [code.getUint8()]\r\n                    });\r\n                    id++;\r\n                    break;\r\n                }\r\n                // fload\r\n                case 0x17: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: [code.getUint8()]\r\n                    });\r\n                    id++;\r\n                    break;\r\n                }\r\n                // dload\r\n                case 0x18: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: [code.getUint8()]\r\n                    });\r\n                    id++;\r\n                    break;\r\n                }\r\n                // iload_0\r\n                case 0x1a: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // iload_1\r\n                case 0x1b: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // iload_2\r\n                case 0x1c: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // iload_3\r\n                case 0x1d: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // lload_0\r\n                case 0x1e: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // lload_1\r\n                case 0x1f: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                case 0x19: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: [code.getUint8()]\r\n                    });\r\n                    id++;\r\n                    break;\r\n                }\r\n                // lload_2\r\n                case 0x20: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // lload_3\r\n                case 0x21: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // fload_0\r\n                case 0x22: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // fload_1\r\n                case 0x23: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // fload_2\r\n                case 0x24: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // fload_3\r\n                case 0x25: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // dload_0\r\n                case 0x26: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // dload_1\r\n                case 0x27: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // dload_2\r\n                case 0x28: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // dload_3\r\n                case 0x29: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // aload_0\r\n                case 0x2a: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // aload_1\r\n                case 0x2b: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // aload_2\r\n                case 0x2c: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // aload_3\r\n                case 0x2d: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // iaload\r\n                case 0x2e:\r\n                // laload\r\n                case 0x2f:\r\n                // faload\r\n                case 0x30:\r\n                // daload\r\n                case 0x31:\r\n                // aaload\r\n                case 0x32:\r\n                // baload\r\n                case 0x33:\r\n                // caload\r\n                case 0x34:\r\n                // saload\r\n                case 0x35: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // istore\r\n                case 0x36: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: [code.getUint8()]\r\n                    });\r\n                    id++;\r\n                    break;\r\n                }\r\n                // lstore\r\n                case 0x37: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: [code.getUint8()]\r\n                    });\r\n                    id++;\r\n                    break;\r\n                }\r\n                // fstore\r\n                case 0x38: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: [code.getUint8()]\r\n                    });\r\n                    id++;\r\n                    break;\r\n                }\r\n                // dstore\r\n                case 0x39: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: [code.getUint8()]\r\n                    });\r\n                    id++;\r\n                    break;\r\n                }\r\n                // astore\r\n                case 0x3a: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: [code.getUint8()]\r\n                    });\r\n                    id++;\r\n                    break;\r\n                }\r\n                // istore_0\r\n                case 0x3b: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // istore_1\r\n                case 0x3c: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // istore_2\r\n                case 0x3d: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // istore_3\r\n                case 0x3e: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // lstore_0\r\n                case 0x3f: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // lstore_1\r\n                case 0x40: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // lstore_2\r\n                case 0x41: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // lstore_3\r\n                case 0x42: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // fstore_0\r\n                case 0x43: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // fstore_1\r\n                case 0x44: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // fstore_2\r\n                case 0x45: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // fstore_3\r\n                case 0x46: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // dstore_0\r\n                case 0x47: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // dstore_1\r\n                case 0x48: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // dstore_2\r\n                case 0x49: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // dstore_3\r\n                case 0x4a: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // astore_0\r\n                case 0x4b: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // astore_1\r\n                case 0x4c: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // astore_2\r\n                case 0x4d: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // astore_3\r\n                case 0x4e: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // iastore\r\n                case 0x4f:\r\n                // lastore\r\n                case 0x50:\r\n                // fastore\r\n                case 0x51:\r\n                // dastore\r\n                case 0x52:\r\n                // aastore\r\n                case 0x53:\r\n                // bastore\r\n                case 0x54:\r\n                // castore\r\n                case 0x55:\r\n                // sastore\r\n                case 0x56: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // pop\r\n                case 0x57: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // pop2\r\n                case 0x58: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // dup\r\n                case 0x59: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // dup_x1\r\n                case 0x5a: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // iadd\r\n                case 0x60: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // ladd\r\n                case 0x61: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // fadd\r\n                case 0x62: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // dadd\r\n                case 0x63: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // isub\r\n                case 0x64: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // lsub\r\n                case 0x65: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // fsub\r\n                case 0x66: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // dsub\r\n                case 0x67: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // imul\r\n                case 0x68: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // lmul\r\n                case 0x69: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // fmul\r\n                case 0x6a: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // dmul\r\n                case 0x6b: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // idiv\r\n                case 0x6c: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // ldiv\r\n                case 0x6d: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // fdiv\r\n                case 0x6e: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // ddiv\r\n                case 0x6f: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // irem\r\n                case 0x70: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // lrem\r\n                case 0x71: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // frem\r\n                case 0x72: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // drem\r\n                case 0x73: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // ineg\r\n                case 0x74: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // lneg\r\n                case 0x75: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // fneg\r\n                case 0x76: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // dneg\r\n                case 0x77: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // ishl\r\n                case 0x78: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // lshl\r\n                case 0x79: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // ishr\r\n                case 0x7a: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // lshr\r\n                case 0x7b: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // iushr\r\n                case 0x7c: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // lushr\r\n                case 0x7d: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // iand\r\n                case 0x7e: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // land\r\n                case 0x7f: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // ior\r\n                case 0x80: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // lor\r\n                case 0x81: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // ixor\r\n                case 0x82: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // lxor\r\n                case 0x83: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // iinc\r\n                case 0x84: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: [code.getUint8(), code.getInt8()]\r\n                    });\r\n                    id += 2;\r\n                    break;\r\n                }\r\n                // i2l~i2s\r\n                // TypeScript has only number type so these operation don't have any effects.\r\n                case 0x85:\r\n                case 0x86:\r\n                case 0x87:\r\n                case 0x88:\r\n                case 0x89:\r\n                case 0x8a:\r\n                case 0x8b:\r\n                case 0x8c:\r\n                case 0x8d:\r\n                case 0x8e:\r\n                case 0x8f:\r\n                case 0x90:\r\n                case 0x91:\r\n                case 0x92:\r\n                case 0x93: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // lcmp\r\n                case 0x94: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // fcmpl\r\n                case 0x95: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // fcmpg\r\n                case 0x96: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // dcmpl\r\n                case 0x97: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // dcmpg\r\n                case 0x98: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // ifeq\r\n                case 0x99: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: [code.getUint8(), code.getUint8()]\r\n                    });\r\n                    id += 2;\r\n                    break;\r\n                }\r\n                // ifne\r\n                case 0x9a: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: [code.getUint8(), code.getUint8()]\r\n                    });\r\n                    id += 2;\r\n                    break;\r\n                }\r\n                // iflt\r\n                case 0x9b: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: [code.getUint8(), code.getUint8()]\r\n                    });\r\n                    id += 2;\r\n                    break;\r\n                }\r\n                // ifge\r\n                case 0x9c: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: [code.getUint8(), code.getUint8()]\r\n                    });\r\n                    id += 2;\r\n                    break;\r\n                }\r\n                // ifgt\r\n                case 0x9d: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: [code.getUint8(), code.getUint8()]\r\n                    });\r\n                    id += 2;\r\n                    break;\r\n                }\r\n                // ifle\r\n                case 0x9e: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: [code.getUint8(), code.getUint8()]\r\n                    });\r\n                    id += 2;\r\n                    break;\r\n                }\r\n                // if_icmpeq\r\n                case 0x9f: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: [code.getUint8(), code.getUint8()]\r\n                    });\r\n                    id += 2;\r\n                    break;\r\n                }\r\n                // if_icmpne\r\n                case 0xa0: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: [code.getUint8(), code.getUint8()]\r\n                    });\r\n                    id += 2;\r\n                    break;\r\n                }\r\n                // if_icmplt\r\n                case 0xa1: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: [code.getUint8(), code.getUint8()]\r\n                    });\r\n                    id += 2;\r\n                    break;\r\n                }\r\n                // if_icmpge\r\n                case 0xa2: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: [code.getUint8(), code.getUint8()]\r\n                    });\r\n                    id += 2;\r\n                    break;\r\n                }\r\n                // if_icmpgt\r\n                case 0xa3: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: [code.getUint8(), code.getUint8()]\r\n                    });\r\n                    id += 2;\r\n                    break;\r\n                }\r\n                // if_icmple\r\n                case 0xa4: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: [code.getUint8(), code.getUint8()]\r\n                    });\r\n                    id += 2;\r\n                    break;\r\n                }\r\n                // if_acmpeq\r\n                case 0xa5: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: [code.getUint8(), code.getUint8()]\r\n                    });\r\n                    id += 2;\r\n                    break;\r\n                }\r\n                // if_acmpne\r\n                case 0xa6: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: [code.getUint8(), code.getUint8()]\r\n                    });\r\n                    id += 2;\r\n                    break;\r\n                }\r\n                // goto\r\n                case 0xa7: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: [code.getUint8(), code.getUint8()]\r\n                    });\r\n                    id += 2;\r\n                    break;\r\n                }\r\n                // tableswitch\r\n                case 0xaa: {\r\n                    var padding = (4 - (id + 1) % 4) % 4;\r\n                    var operands = [];\r\n                    var count = padding;\r\n                    for (var i = 0; i < padding; i++) {\r\n                        code.getUint8(); // padding\r\n                    }\r\n                    // defaultByte\r\n                    var defaultNum = (code.getUint8() << 24) | (code.getUint8() << 16) | (code.getUint8() << 8) | code.getUint8();\r\n                    count += 4;\r\n                    // lowByte\r\n                    var lowNum = (code.getUint8() << 24) | (code.getUint8() << 16) | (code.getUint8() << 8) | code.getUint8();\r\n                    count += 4;\r\n                    // highByte\r\n                    var highNum = (code.getUint8() << 24) | (code.getUint8() << 16) | (code.getUint8() << 8) | code.getUint8();\r\n                    count += 4;\r\n                    var n = highNum - lowNum + 1;\r\n                    operands.push(defaultNum, lowNum, highNum);\r\n                    // jump offsets\r\n                    for (var i = 0; i < n; i++) {\r\n                        // match\r\n                        operands.push((code.getUint8() << 24) | (code.getUint8() << 16) | (code.getUint8() << 8) | code.getUint8());\r\n                        count += 4;\r\n                    }\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: operands\r\n                    });\r\n                    id += count;\r\n                    break;\r\n                }\r\n                // lookupswitch\r\n                case 0xab: {\r\n                    var padding = (4 - (id + 1) % 4) % 4;\r\n                    var operands = [];\r\n                    var count = padding;\r\n                    for (var i = 0; i < padding; i++) {\r\n                        code.getUint8(); // padding\r\n                    }\r\n                    // defaultByte\r\n                    operands.push((code.getUint8() << 24) | (code.getUint8() << 16) | (code.getUint8() << 8) | code.getUint8());\r\n                    count += 4;\r\n                    // npairs\r\n                    operands.push((code.getUint8() << 24) | (code.getUint8() << 16) | (code.getUint8() << 8) | code.getUint8());\r\n                    count += 4;\r\n                    // match-offset pairs\r\n                    for (var i = 0; i < operands[1]; i++) {\r\n                        // match\r\n                        operands.push((code.getUint8() << 24) | (code.getUint8() << 16) | (code.getUint8() << 8) | code.getUint8());\r\n                        count += 4;\r\n                        // offset\r\n                        operands.push((code.getUint8() << 24) | (code.getUint8() << 16) | (code.getUint8() << 8) | code.getUint8());\r\n                        count += 4;\r\n                    }\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: operands\r\n                    });\r\n                    id += count;\r\n                    break;\r\n                }\r\n                // ireturn\r\n                case 0xac: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // lreturn\r\n                case 0xad: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // freturn\r\n                case 0xae: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // dreturn\r\n                case 0xaf: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // areturn\r\n                case 0xb0: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // return\r\n                case 0xb1: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // invokespecial\r\n                case 0xb7: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: [code.getUint8(), code.getUint8()]\r\n                    });\r\n                    id += 2;\r\n                    break;\r\n                }\r\n                // invokestatic\r\n                case 0xb8: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: [code.getUint8(), code.getUint8()]\r\n                    });\r\n                    id += 2;\r\n                    break;\r\n                }\r\n                // invokeinterface\r\n                case 0xb9: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: [code.getUint8(), code.getUint8(), code.getUint8(), code.getUint8()]\r\n                    });\r\n                    id += 4;\r\n                    break;\r\n                }\r\n                // invokedynamic\r\n                case 0xba: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: [code.getUint8(), code.getUint8(), code.getUint8(), code.getUint8()]\r\n                    });\r\n                    id += 4;\r\n                    break;\r\n                }\r\n                // new\r\n                case 0xbb: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: [code.getUint8(), code.getUint8()]\r\n                    });\r\n                    id += 2;\r\n                    break;\r\n                }\r\n                // newarray\r\n                case 0xbc: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: [code.getUint8()]\r\n                    });\r\n                    id++;\r\n                    break;\r\n                }\r\n                // anewarray\r\n                case 0xbd: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: [code.getUint8(), code.getUint8()]\r\n                    });\r\n                    id += 2;\r\n                    break;\r\n                }\r\n                // arraylength\r\n                case 0xbe: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // athrow\r\n                case 0xbf: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // checkcast\r\n                case 0xc0: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: [code.getUint8(), code.getUint8()]\r\n                    });\r\n                    id += 2;\r\n                    break;\r\n                }\r\n                // monitorenter\r\n                case 0xc2: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // monitorexit\r\n                case 0xc3: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: []\r\n                    });\r\n                    break;\r\n                }\r\n                // multianewarray\r\n                case 0xc5: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: [code.getUint8(), code.getUint8(), code.getUint8()]\r\n                    });\r\n                    id += 3;\r\n                    break;\r\n                }\r\n                // ifnull\r\n                case 0xc6: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: [code.getUint8(), code.getUint8()]\r\n                    });\r\n                    id += 2;\r\n                    break;\r\n                }\r\n                // ifnonnull\r\n                case 0xc7: {\r\n                    this.opcodes.push({\r\n                        id: id,\r\n                        opcode: opcode,\r\n                        operands: [code.getUint8(), code.getUint8()]\r\n                    });\r\n                    id += 2;\r\n                    break;\r\n                }\r\n            }\r\n            id++;\r\n        }\r\n    };\r\n    Frame.prototype.getClassName = function (packageName) {\r\n        var split = packageName.split(\"/\");\r\n        return split[split.length - 1];\r\n    };\r\n    Frame.prototype.getOpcodeIndexById = function (id) {\r\n        return this.opcodes.findIndex(function (opcode) { return opcode.id === id; });\r\n    };\r\n    Frame.prototype.getOpcodeById = function (id) {\r\n        return this.opcodes.filter(function (opcode) { return opcode.id === id; })[0];\r\n    };\r\n    return Frame;\r\n}());\r\nexports.Frame = Frame;\r\n//# sourceMappingURL=Frame.js.map\n\n//# sourceURL=webpack://churu-vm/./src/jvm/core/rda/stack/Frame.js?");

/***/ }),

/***/ "./src/jvm/core/rda/stack/Thread.js":
/*!******************************************!*\
  !*** ./src/jvm/core/rda/stack/Thread.js ***!
  \******************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nvar Frame_js_1 = __webpack_require__(/*! ./Frame.js */ \"./src/jvm/core/rda/stack/Frame.js\");\r\nvar ConstantPoolInfo_js_1 = __webpack_require__(/*! ../../../models/info/ConstantPoolInfo.js */ \"./src/jvm/models/info/ConstantPoolInfo.js\");\r\nvar ClassFileLoader_js_1 = __webpack_require__(/*! ../../cfl/ClassFileLoader.js */ \"./src/jvm/core/cfl/ClassFileLoader.js\");\r\nvar Log_1 = __webpack_require__(/*! ../../../utils/Log */ \"./src/jvm/utils/Log.ts\");\r\nvar ExceptionHandler_1 = __webpack_require__(/*! ../../../utils/ExceptionHandler */ \"./src/jvm/utils/ExceptionHandler.ts\");\r\nvar Thread = /** @class */ (function () {\r\n    function Thread(runtimeDataArea, stackSize, id) {\r\n        var _this = this;\r\n        this.invokingNative = false;\r\n        this.findMethod = function (methodName, descriptor, klass) {\r\n            var method = klass.methodInfos.filter(function (value) {\r\n                return (0, ConstantPoolInfo_js_1.readUtf8FromConstantPool)(klass.constantPool, value.nameIndex) === methodName\r\n                    && ((descriptor === \"\") || descriptor === (0, ConstantPoolInfo_js_1.readUtf8FromConstantPool)(klass.constantPool, value.descriptorIndex));\r\n            })[0];\r\n            if (method == null) {\r\n                if (klass.superClass != null) {\r\n                    return _this.findMethod(methodName, descriptor, klass.superClass);\r\n                }\r\n                else {\r\n                    return [null, null];\r\n                }\r\n            }\r\n            else {\r\n                return [method, klass];\r\n            }\r\n        };\r\n        if (stackSize < 1) {\r\n            console.log(\"StackSize must must be bigger than 1.\");\r\n            return;\r\n        }\r\n        this.runtimeDataArea = runtimeDataArea;\r\n        this.stackSize = stackSize;\r\n        this.stack = [];\r\n        this.id = id;\r\n    }\r\n    Thread.prototype.invokeMethod = function (methodName, descriptor, javaClass, args, javaObject) {\r\n        if (javaObject === void 0) { javaObject = null; }\r\n        var _a = this.findMethod(methodName, descriptor, javaClass), method = _a[0], klass = _a[1];\r\n        if (method == null) {\r\n            (0, ExceptionHandler_1.throwException)(\"java.lang.NoSuchMethodError: \" + javaClass.name + \".\" + methodName, this.runtimeDataArea);\r\n            return;\r\n        }\r\n        // method is native\r\n        if (method.accessFlags & 256) {\r\n            return this.invokeNative(methodName, method, javaClass, args, javaObject);\r\n        }\r\n        var codeAttributes = method.attributes.filter(function (attribute) { return (0, ConstantPoolInfo_js_1.readUtf8FromConstantPool)(klass.constantPool, attribute.attributeNameIndex) === \"Code\"; });\r\n        if (!codeAttributes || codeAttributes.length == 0) {\r\n            return;\r\n        }\r\n        var codeAttribute = codeAttributes[0];\r\n        var code = codeAttribute.code;\r\n        code.resetOffset();\r\n        var argsCount = (0, ClassFileLoader_js_1.getArgumentsAndReturnType)((0, ConstantPoolInfo_js_1.readUtf8FromConstantPool)(klass.constantPool, method.descriptorIndex))[0].length;\r\n        var frame = new Frame_js_1.Frame(this, this.runtimeDataArea, method, klass, codeAttribute.maxLocals - argsCount, klass.constantPool, args, javaObject);\r\n        this.runtimeDataArea.incrementPCRegister(this.id);\r\n        this.stack.push(frame);\r\n        if (this.stack.length > this.stackSize) {\r\n            (0, ExceptionHandler_1.throwException)(\"java.lang.StackOverFlowError\", this.runtimeDataArea);\r\n            return;\r\n        }\r\n        (0, Log_1.logMethod)(\"CALL\", klass.name, (0, ConstantPoolInfo_js_1.readUtf8FromConstantPool)(klass.constantPool, method.nameIndex));\r\n        /*\r\n        if (methodName == \"isMethodHandleInvokeName\") {\r\n            throwException(\"java.lang.RuntimeException\", this.runtimeDataArea);\r\n            return ;\r\n        }\r\n\r\n         */\r\n        frame.loadOpcodes();\r\n        /*\r\n        if (methodName === \"main\") {\r\n            console.log(JITCompiler.compile(this, klass, method));\r\n        }\r\n\r\n         */\r\n        var result = frame.execute();\r\n        this.stack.pop();\r\n        return result;\r\n    };\r\n    Thread.prototype.invokeNative = function (methodName, method, javaClass, args, javaObject) {\r\n        var _a;\r\n        if (javaObject === void 0) { javaObject = null; }\r\n        this.invokingNative = true;\r\n        (0, Log_1.logMethod)(\"NATIVECALL\", javaClass.name, methodName);\r\n        var module = this.runtimeDataArea.nativeModules[javaClass.name]; // await import(\"../../../lib/\" + javaClass.name.split(\".\").join(\"/\") + \".js\");\r\n        // TODO\r\n        if (methodName === \"getClass\") {\r\n            return this.runtimeDataArea.nativeModules[\"java.lang.Object\"][\"JavaObject\"][\"getClass\"](this, javaClass, javaObject);\r\n        }\r\n        else if (methodName === \"hashCode\") {\r\n            return this.runtimeDataArea.nativeModules[\"java.lang.Object\"][\"JavaObject\"][\"hashCode\"](this, javaClass, javaObject);\r\n        }\r\n        else if (methodName === \"notifyAll\") {\r\n            return this.runtimeDataArea.nativeModules[\"java.lang.Object\"][\"JavaObject\"][\"notifyAll\"](this, javaClass, javaObject);\r\n        }\r\n        if (module == null) {\r\n            (0, ExceptionHandler_1.throwException)(\"java.lang.ClassNotFoundException: \" + javaClass.name, this.runtimeDataArea);\r\n            return;\r\n        }\r\n        if (module[javaClass.getSimpleName()][methodName] == null) {\r\n            (0, ExceptionHandler_1.throwException)(\"java.lang.NoSuchMethodError: \" + javaClass.name + \".\" + methodName, this.runtimeDataArea);\r\n            return;\r\n        }\r\n        return (_a = module[javaClass.getSimpleName()])[methodName].apply(_a, __spreadArray([this, javaClass, javaObject], args.reverse(), false));\r\n    };\r\n    return Thread;\r\n}());\r\nexports[\"default\"] = Thread;\r\n//# sourceMappingURL=Thread.js.map\n\n//# sourceURL=webpack://churu-vm/./src/jvm/core/rda/stack/Thread.js?");

/***/ }),

/***/ "./src/jvm/jvm.js":
/*!************************!*\
  !*** ./src/jvm/jvm.js ***!
  \************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.throwErrorOrException = exports.JVM = void 0;\r\nvar ByteBuffer_js_1 = __webpack_require__(/*! ./utils/ByteBuffer.js */ \"./src/jvm/utils/ByteBuffer.js\");\r\nvar RuntimeDataArea_js_1 = __importDefault(__webpack_require__(/*! ./core/rda/RuntimeDataArea.js */ \"./src/jvm/core/rda/RuntimeDataArea.js\"));\r\nvar fflate_1 = __webpack_require__(/*! fflate */ \"./node_modules/fflate/lib/index.cjs\");\r\nvar BootstrapClassLoader_1 = __importDefault(__webpack_require__(/*! ./core/BootstrapClassLoader */ \"./src/jvm/core/BootstrapClassLoader.ts\"));\r\nvar Thread_1 = __webpack_require__(/*! ./lib/java/lang/Thread */ \"./src/jvm/lib/java/lang/Thread.ts\");\r\nvar OutputLogger_1 = __webpack_require__(/*! ./utils/OutputLogger */ \"./src/jvm/utils/OutputLogger.ts\");\r\nvar JVM = /** @class */ (function () {\r\n    function JVM(array, fileName, jvmArgs, args, onLaunch) {\r\n        this.buffer = array;\r\n        this.fileName = fileName;\r\n        this.jvmArgs = jvmArgs;\r\n        this.args = args;\r\n        this.onLaunch = onLaunch;\r\n        this.runtimeDataArea = new RuntimeDataArea_js_1.default();\r\n    }\r\n    JVM.prototype.launch = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!this.buffer) {\r\n                            console.error(\"buffer must not be undefined!\");\r\n                            return [2 /*return*/];\r\n                        }\r\n                        if (!(this.jvmArgs[\"logger\"] == null)) {\r\n                            OutputLogger_1.OutputLogger.setLogger(this.jvmArgs[\"logger\"]);\r\n                        }\r\n                        if (this.jvmArgs[\"Xss\"] == null) {\r\n                            this.jvmArgs[\"Xss\"] = 100;\r\n                        }\r\n                        return [4 /*yield*/, this.loadLibraries()];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    JVM.prototype.onLibrariesLoad = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        BootstrapClassLoader_1.default.getInstance().setRuntimeDataArea(this.runtimeDataArea);\r\n                        if (!this.isClassFile()) return [3 /*break*/, 1];\r\n                        this.processClassFile();\r\n                        return [3 /*break*/, 3];\r\n                    case 1: return [4 /*yield*/, this.processJarFile()];\r\n                    case 2:\r\n                        _a.sent();\r\n                        _a.label = 3;\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    JVM.prototype.isClassFile = function () {\r\n        var buf = new ByteBuffer_js_1.ByteBuffer(this.buffer.buffer);\r\n        var magic = buf.getUint32();\r\n        return magic == 0xCAFEBABE;\r\n    };\r\n    JVM.prototype.processClassFile = function () {\r\n        OutputLogger_1.OutputLogger.log(\"> java \".concat(this.fileName.replace(\".class\", \"\")));\r\n        this.runtimeDataArea.loadedClasses[this.fileName.replace(\".class\", \"\")] = this.buffer;\r\n        var javaClass = BootstrapClassLoader_1.default.getInstance().defineClass(this.fileName.replace(\".class\", \"\"), this.buffer);\r\n        this.invokeMain(javaClass);\r\n    };\r\n    JVM.prototype.loadLibraries = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var libraries, checkForLibraries, unzipJar;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                libraries = {\r\n                    \"./rt.jar\": false,\r\n                    //\"./java-dom-api.jar\": false\r\n                };\r\n                checkForLibraries = function () {\r\n                    for (var _i = 0, _a = Object.keys(libraries); _i < _a.length; _i++) {\r\n                        var key = _a[_i];\r\n                        if (!libraries[key])\r\n                            return false;\r\n                    }\r\n                    return true;\r\n                };\r\n                unzipJar = function (key, target) {\r\n                    (0, fflate_1.unzip)(target, (function (err, data) {\r\n                        var manifest = JVM.loadManifest(data);\r\n                        _this.runtimeDataArea.loadedJars.push({\r\n                            manifest: manifest,\r\n                            unzipped: data\r\n                        });\r\n                        libraries[key] = true;\r\n                        if (checkForLibraries()) {\r\n                            _this.onLibrariesLoad();\r\n                        }\r\n                        //this.onLibrariesLoad();\r\n                    }));\r\n                };\r\n                Object.keys(libraries).forEach(function (key) {\r\n                    fetch(key).then(function (data) {\r\n                        data.arrayBuffer().then(function (array) {\r\n                            unzipJar(key, new Uint8Array(array));\r\n                        });\r\n                    });\r\n                });\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    JVM.prototype.processJarFile = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                OutputLogger_1.OutputLogger.log(\"> java -jar \".concat(this.fileName));\r\n                (0, fflate_1.unzip)(new Uint8Array(this.buffer), (function (err, data) {\r\n                    var manifest = JVM.loadManifest(data);\r\n                    var mainClass = manifest[\"Main-Class\"];\r\n                    _this.buffer = new Uint8Array(data[mainClass.replaceAll(\".\", \"/\") + \".class\"].buffer);\r\n                    _this.runtimeDataArea.loadedJars.push({\r\n                        manifest: manifest,\r\n                        unzipped: data\r\n                    });\r\n                    var classFile = BootstrapClassLoader_1.default.getInstance().defineClass(mainClass, _this.buffer);\r\n                    _this.invokeMain(classFile);\r\n                }));\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    JVM.prototype.initializeVM = function (thread) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var system;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.runtimeDataArea.registerNatives()];\r\n                    case 1:\r\n                        _a.sent();\r\n                        BootstrapClassLoader_1.default.getInstance().findClass(\"java.lang.Class\");\r\n                        BootstrapClassLoader_1.default.getInstance().findClass(\"java.net.URLClassLoader\");\r\n                        system = BootstrapClassLoader_1.default.getInstance().findClass(\"java.lang.System\");\r\n                        system.initStatic(thread);\r\n                        Thread_1.Thread.init(thread);\r\n                        thread.invokeMethod(\"initializeSystemClass\", \"()V\", system, []);\r\n                        console.log(\"VM is Booted!\");\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    JVM.prototype.invokeMain = function (classFile) {\r\n        var _this = this;\r\n        this.runtimeDataArea\r\n            .createThread(this.jvmArgs[\"Xss\"], true)\r\n            .then(function (thread) {\r\n            (function () { return __awaiter(_this, void 0, void 0, function () {\r\n                return __generator(this, function (_a) {\r\n                    switch (_a.label) {\r\n                        case 0: return [4 /*yield*/, this.initializeVM(thread)];\r\n                        case 1:\r\n                            _a.sent();\r\n                            thread.invokeMethod(\"main\", \"([Ljava/lang/String;)V\", classFile, this.args);\r\n                            this.onLaunch();\r\n                            return [2 /*return*/];\r\n                    }\r\n                });\r\n            }); })();\r\n        });\r\n    };\r\n    JVM.loadManifest = function (data) {\r\n        var manifest = new TextDecoder().decode(data[\"META-INF/MANIFEST.MF\"]);\r\n        var manifestData = {};\r\n        for (var _i = 0, _a = manifest.split(\"\\r\\n\"); _i < _a.length; _i++) {\r\n            var line = _a[_i];\r\n            var _b = line.split(\": \"), key = _b[0], value = _b[1];\r\n            if (!(value == null))\r\n                manifestData[key] = value;\r\n        }\r\n        return manifestData;\r\n    };\r\n    return JVM;\r\n}());\r\nexports.JVM = JVM;\r\nwindow.JVM = JVM;\r\nvar throwErrorOrException = function (throwable) {\r\n    throwable.printStackTrace();\r\n};\r\nexports.throwErrorOrException = throwErrorOrException;\r\n//# sourceMappingURL=jvm.js.map\n\n//# sourceURL=webpack://churu-vm/./src/jvm/jvm.js?");

/***/ }),

/***/ "./src/jvm/lib/dev/itsu/$.js":
/*!***********************************!*\
  !*** ./src/jvm/lib/dev/itsu/$.js ***!
  \***********************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.$ = void 0;\r\nvar types_1 = __webpack_require__(/*! ../../../core/cfl/types */ \"./src/jvm/core/cfl/types.ts\");\r\nvar Utils_1 = __webpack_require__(/*! ../../../utils/Utils */ \"./src/jvm/utils/Utils.ts\");\r\nvar $ = /** @class */ (function (_super) {\r\n    __extends($, _super);\r\n    function $() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    $.alert = function (thread, klazz, obj, _text) {\r\n        alert((0, Utils_1.getString)(thread.runtimeDataArea, _text));\r\n    };\r\n    return $;\r\n}(types_1.JavaObject));\r\nexports.$ = $;\r\n//# sourceMappingURL=$.js.map\n\n//# sourceURL=webpack://churu-vm/./src/jvm/lib/dev/itsu/$.js?");

/***/ }),

/***/ "./src/jvm/lib/dev/itsu/Document.js":
/*!******************************************!*\
  !*** ./src/jvm/lib/dev/itsu/Document.js ***!
  \******************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Document = void 0;\r\nvar types_1 = __webpack_require__(/*! ../../../core/cfl/types */ \"./src/jvm/core/cfl/types.ts\");\r\nvar Document = /** @class */ (function (_super) {\r\n    __extends(Document, _super);\r\n    function Document() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Document.getDefault = function (thread, klazz, obj) {\r\n        if (this.doc == null) {\r\n            this.doc = thread.runtimeDataArea.createObject(\"dev.itsu.Document\");\r\n        }\r\n        return this.doc;\r\n    };\r\n    Document.getElementById = function (thread, klazz, obj, _id) {\r\n        var elem = thread.runtimeDataArea.createObject(\"dev.itsu.node.html.HTMLElement\");\r\n        thread.runtimeDataArea.objectHeap[elem.heapIndex].filter(function (value) { return value.name == \"id\"; })[0].value = _id;\r\n        return elem;\r\n    };\r\n    Document.doc = null;\r\n    return Document;\r\n}(types_1.JavaObject));\r\nexports.Document = Document;\r\n//# sourceMappingURL=Document.js.map\n\n//# sourceURL=webpack://churu-vm/./src/jvm/lib/dev/itsu/Document.js?");

/***/ }),

/***/ "./src/jvm/lib/dev/itsu/event/EventTarget.js":
/*!***************************************************!*\
  !*** ./src/jvm/lib/dev/itsu/event/EventTarget.js ***!
  \***************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.EventTarget = void 0;\r\nvar types_1 = __webpack_require__(/*! ../../../../core/cfl/types */ \"./src/jvm/core/cfl/types.ts\");\r\nvar Utils_1 = __webpack_require__(/*! ../../../../utils/Utils */ \"./src/jvm/utils/Utils.ts\");\r\nvar EventTarget = /** @class */ (function (_super) {\r\n    __extends(EventTarget, _super);\r\n    function EventTarget() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    EventTarget.addEventListener = function (thread, klazz, obj, _type, _callback) {\r\n        var type = (0, Utils_1.getString)(thread.runtimeDataArea, _type);\r\n        document.getElementById((0, Utils_1.getString)(thread.runtimeDataArea, (0, Utils_1.getFieldValue)(obj, \"id\"))).addEventListener(type, function () { return thread.invokeMethod(\"accept\", \"(Ljava/lang/Object;)V\", _callback.type, [null], _callback); });\r\n    };\r\n    return EventTarget;\r\n}(types_1.JavaObject));\r\nexports.EventTarget = EventTarget;\r\n//# sourceMappingURL=EventTarget.js.map\n\n//# sourceURL=webpack://churu-vm/./src/jvm/lib/dev/itsu/event/EventTarget.js?");

/***/ }),

/***/ "./src/jvm/lib/dev/itsu/node/Element.js":
/*!**********************************************!*\
  !*** ./src/jvm/lib/dev/itsu/node/Element.js ***!
  \**********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Element = void 0;\r\nvar Utils_1 = __webpack_require__(/*! ../../../../utils/Utils */ \"./src/jvm/utils/Utils.ts\");\r\nvar Node_1 = __webpack_require__(/*! ./Node */ \"./src/jvm/lib/dev/itsu/node/Node.ts\");\r\nvar Element = /** @class */ (function (_super) {\r\n    __extends(Element, _super);\r\n    function Element() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Element.insertAdjacentHTML = function (thread, klazz, obj, _position, _text) {\r\n        document.getElementById((0, Utils_1.getString)(thread.runtimeDataArea, (0, Utils_1.getFieldValue)(obj, \"id\"))).insertAdjacentHTML((0, Utils_1.getString)(obj.runtimeDataArea, _position), (0, Utils_1.getString)(obj.runtimeDataArea, _text));\r\n    };\r\n    Element.remove = function (thread, klazz, obj) {\r\n        document.getElementById((0, Utils_1.getString)(thread.runtimeDataArea, (0, Utils_1.getFieldValue)(obj, \"id\"))).remove();\r\n    };\r\n    return Element;\r\n}(Node_1.Node));\r\nexports.Element = Element;\r\n//# sourceMappingURL=Element.js.map\n\n//# sourceURL=webpack://churu-vm/./src/jvm/lib/dev/itsu/node/Element.js?");

/***/ }),

/***/ "./src/jvm/lib/dev/itsu/node/html/HTMLElement.js":
/*!*******************************************************!*\
  !*** ./src/jvm/lib/dev/itsu/node/html/HTMLElement.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.HTMLElement = void 0;\r\nvar Utils_1 = __webpack_require__(/*! ../../../../../utils/Utils */ \"./src/jvm/utils/Utils.ts\");\r\nvar Element_1 = __webpack_require__(/*! ../Element */ \"./src/jvm/lib/dev/itsu/node/Element.ts\");\r\nvar HTMLElement = /** @class */ (function (_super) {\r\n    __extends(HTMLElement, _super);\r\n    function HTMLElement() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    HTMLElement.getInnerText = function (thread, klazz, obj) {\r\n        return obj.runtimeDataArea.createStringObject(thread, document.getElementById((0, Utils_1.getString)(thread.runtimeDataArea, (0, Utils_1.getFieldValue)(obj, \"id\"))).innerText);\r\n    };\r\n    HTMLElement.setInnerText = function (thread, klazz, obj, _innerText) {\r\n        document.getElementById((0, Utils_1.getString)(thread.runtimeDataArea, (0, Utils_1.getFieldValue)(obj, \"id\"))).innerText = (0, Utils_1.getString)(obj.runtimeDataArea, _innerText);\r\n    };\r\n    HTMLElement.getValue = function (thread, klazz, obj) {\r\n        return obj.runtimeDataArea.createStringObject(thread, document.getElementById((0, Utils_1.getString)(thread.runtimeDataArea, (0, Utils_1.getFieldValue)(obj, \"id\"))).value);\r\n    };\r\n    HTMLElement.setValue = function (thread, klazz, obj, _value) {\r\n        document.getElementById((0, Utils_1.getString)(thread.runtimeDataArea, (0, Utils_1.getFieldValue)(obj, \"id\"))).value = (0, Utils_1.getString)(obj.runtimeDataArea, _value);\r\n    };\r\n    return HTMLElement;\r\n}(Element_1.Element));\r\nexports.HTMLElement = HTMLElement;\r\n//# sourceMappingURL=HTMLElement.js.map\n\n//# sourceURL=webpack://churu-vm/./src/jvm/lib/dev/itsu/node/html/HTMLElement.js?");

/***/ }),

/***/ "./src/jvm/lib/dev/itsu/node/html/HTMLInputElement.js":
/*!************************************************************!*\
  !*** ./src/jvm/lib/dev/itsu/node/html/HTMLInputElement.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.HTMLInputElement = void 0;\r\nvar Utils_1 = __webpack_require__(/*! ../../../../../utils/Utils */ \"./src/jvm/utils/Utils.ts\");\r\nvar HTMLElement_1 = __webpack_require__(/*! ./HTMLElement */ \"./src/jvm/lib/dev/itsu/node/html/HTMLElement.ts\");\r\nvar HTMLInputElement = /** @class */ (function (_super) {\r\n    __extends(HTMLInputElement, _super);\r\n    function HTMLInputElement() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    HTMLInputElement.getValue = function (thread, klazz, obj) {\r\n        return obj.runtimeDataArea.createStringObject(thread, document.getElementById((0, Utils_1.getString)(thread.runtimeDataArea, (0, Utils_1.getFieldValue)(obj, \"id\"))).value);\r\n    };\r\n    HTMLInputElement.setValue = function (thread, klazz, obj, _value) {\r\n        document.getElementById((0, Utils_1.getString)(thread.runtimeDataArea, (0, Utils_1.getFieldValue)(obj, \"id\"))).value = (0, Utils_1.getString)(obj.runtimeDataArea, _value);\r\n    };\r\n    return HTMLInputElement;\r\n}(HTMLElement_1.HTMLElement));\r\nexports.HTMLInputElement = HTMLInputElement;\r\n//# sourceMappingURL=HTMLInputElement.js.map\n\n//# sourceURL=webpack://churu-vm/./src/jvm/lib/dev/itsu/node/html/HTMLInputElement.js?");

/***/ }),

/***/ "./src/jvm/lib/java/io/FileDescriptor.js":
/*!***********************************************!*\
  !*** ./src/jvm/lib/java/io/FileDescriptor.js ***!
  \***********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.FileDescriptor = void 0;\r\nvar types_1 = __webpack_require__(/*! ../../../core/cfl/types */ \"./src/jvm/core/cfl/types.ts\");\r\nvar FileDescriptor = /** @class */ (function (_super) {\r\n    __extends(FileDescriptor, _super);\r\n    function FileDescriptor() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    FileDescriptor.initIDs = function (thread, klass, obj) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    FileDescriptor.set = function (thread, klass, obj, fd) {\r\n        return fd;\r\n    };\r\n    FileDescriptor.sync = function (thread, klass, obj) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    return FileDescriptor;\r\n}(types_1.JavaObject));\r\nexports.FileDescriptor = FileDescriptor;\r\n//# sourceMappingURL=FileDescriptor.js.map\n\n//# sourceURL=webpack://churu-vm/./src/jvm/lib/java/io/FileDescriptor.js?");

/***/ }),

/***/ "./src/jvm/lib/java/io/FileOutputStream.js":
/*!*************************************************!*\
  !*** ./src/jvm/lib/java/io/FileOutputStream.js ***!
  \*************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.FileOutputStream = void 0;\r\nvar types_1 = __webpack_require__(/*! ../../../core/cfl/types */ \"./src/jvm/core/cfl/types.ts\");\r\nvar OutputLogger_1 = __webpack_require__(/*! ../../../utils/OutputLogger */ \"./src/jvm/utils/OutputLogger.ts\");\r\nvar FileOutputStream = /** @class */ (function (_super) {\r\n    __extends(FileOutputStream, _super);\r\n    function FileOutputStream() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    FileOutputStream._writeOut = function (thread, b, off, len) {\r\n        var bytes = thread.runtimeDataArea.objectHeap[b.heapIndex];\r\n        for (var i = off; i < off + len; i++) {\r\n            var byte = bytes[i];\r\n            OutputLogger_1.OutputLogger.write(String.fromCharCode(byte));\r\n        }\r\n    };\r\n    FileOutputStream.writeBytes = function (thread, klass, obj, b, off, len, append) {\r\n        var fileDescriptor = thread.runtimeDataArea.objectHeap[obj.heapIndex].filter(function (v) { return v.name === \"fd\"; })[0].value;\r\n        var fd = thread.runtimeDataArea.objectHeap[fileDescriptor.heapIndex].filter(function (v) { return v.name === \"handle\"; })[0].value;\r\n        if (fd == 1)\r\n            this._writeOut(thread, b, off, len);\r\n    };\r\n    return FileOutputStream;\r\n}(types_1.JavaObject));\r\nexports.FileOutputStream = FileOutputStream;\r\n//# sourceMappingURL=FileOutputStream.js.map\n\n//# sourceURL=webpack://churu-vm/./src/jvm/lib/java/io/FileOutputStream.js?");

/***/ }),

/***/ "./src/jvm/lib/java/lang/Class.js":
/*!****************************************!*\
  !*** ./src/jvm/lib/java/lang/Class.js ***!
  \****************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Class = void 0;\r\nvar JavaClass_1 = __importDefault(__webpack_require__(/*! ../../../core/cfl/JavaClass */ \"./src/jvm/core/cfl/JavaClass.ts\"));\r\nvar types_1 = __webpack_require__(/*! ../../../core/cfl/types */ \"./src/jvm/core/cfl/types.ts\");\r\nvar Utils_1 = __webpack_require__(/*! ../../../utils/Utils */ \"./src/jvm/utils/Utils.ts\");\r\nvar BootstrapClassLoader_1 = __importStar(__webpack_require__(/*! ../../../core/BootstrapClassLoader */ \"./src/jvm/core/BootstrapClassLoader.ts\"));\r\nvar ConstantPoolInfo_1 = __webpack_require__(/*! ../../../models/info/ConstantPoolInfo */ \"./src/jvm/models/info/ConstantPoolInfo.ts\");\r\nvar Class = /** @class */ (function (_super) {\r\n    __extends(Class, _super);\r\n    function Class() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Class.registerNatives = function (thread, klazz, obj) {\r\n        return;\r\n    };\r\n    Class.getClassLoader0 = function (thread, klazz, obj) {\r\n        // TODO\r\n        return null;\r\n    };\r\n    Class.forName0 = function (thread, klazz, obj, name, initialize, loader, caller) {\r\n        var name0 = (0, Utils_1.getString)(thread.runtimeDataArea, name);\r\n        return thread.runtimeDataArea.createClassObject(thread, BootstrapClassLoader_1.default.getInstance().findClass(name0));\r\n    };\r\n    Class.desiredAssertionStatus0 = function (thread, klazz, obj, clazz) {\r\n        // TODO\r\n        return true;\r\n    };\r\n    Class.isInterface = function (thread, klazz, obj) {\r\n        return klazz.accessFlags & 512;\r\n    };\r\n    Class.isAssignableFrom = function (thread, klazz, obj, _cls) {\r\n        var _a;\r\n        return klazz.name == _cls.type.name || ((_a = klazz.superClass) === null || _a === void 0 ? void 0 : _a.name) == _cls.type.name;\r\n    };\r\n    Class.getPrimitiveClass = function (thread, klazz, obj, name) {\r\n        var name0 = (0, Utils_1.getString)(thread.runtimeDataArea, name);\r\n        return thread.runtimeDataArea.createClassObject(thread, BootstrapClassLoader_1.default.getInstance().findClass(name0));\r\n    };\r\n    Class.isArray = function (thread, klazz, obj) {\r\n        return obj.isArray;\r\n    };\r\n    Class.getComponentType = function (thread, klazz, obj) {\r\n        console.log(obj.isArray, klazz.name);\r\n        return thread.runtimeDataArea.createClassObject(thread, obj.type);\r\n    };\r\n    /*\r\n    @return Object[]?\r\n    Object[0]: Class<?> enclosingClass\r\n    Object[1]: String name\r\n    Object[2]: String descriptor\r\n     */\r\n    Class.getEnclosingMethod0 = function (thread, klazz, obj) {\r\n        var enclosingMethodAttrs = klazz.attributes.filter(function (attr) { return (0, ConstantPoolInfo_1.readUtf8FromConstantPool)(klazz.constantPool, attr.attributeNameIndex) === \"EnclosingMethod\"; });\r\n        if (enclosingMethodAttrs.length == 0)\r\n            return null;\r\n        var enclosingMethodAttr = enclosingMethodAttrs[0];\r\n        var nameAndTypeInfo = (0, BootstrapClassLoader_1.getConstantPoolInfo)(klazz.constantPool, enclosingMethodAttr.methodIndex).info;\r\n        var classInfo = (0, BootstrapClassLoader_1.getConstantPoolInfo)(klazz.constantPool, enclosingMethodAttr.classIndex).info;\r\n        var clazz = BootstrapClassLoader_1.default.getInstance().findClass((0, ConstantPoolInfo_1.readUtf8FromConstantPool)(klazz.constantPool, classInfo.nameIndex).split(\"/\").join(\".\"));\r\n        var name = thread.runtimeDataArea.createStringObject(thread, (0, ConstantPoolInfo_1.readUtf8FromConstantPool)(klazz.constantPool, nameAndTypeInfo.nameIndex));\r\n        var descriptor = thread.runtimeDataArea.createStringObject(thread, (0, ConstantPoolInfo_1.readUtf8FromConstantPool)(klazz.constantPool, nameAndTypeInfo.descriptorIndex));\r\n        var array = thread.runtimeDataArea.objectHeap[thread.runtimeDataArea.createAArray(\"java.lang.Object\", 3).heapIndex];\r\n        array.push([clazz, name, descriptor]);\r\n        return array;\r\n    };\r\n    Class.getDeclaringClass0 = function (thread, klazz, obj) {\r\n        var split = klazz.name.split(\".\");\r\n        var names = split[split.length - 1].split(\"$\");\r\n        if (names.length == 1)\r\n            return null;\r\n        var enclosingClassName = \"\";\r\n        for (var i = 0; i < split.length - 1; i++) {\r\n            enclosingClassName += split[i] + \".\";\r\n        }\r\n        for (var i = 0; i < names.length - 1; i++) {\r\n            enclosingClassName += names[i] + \".\";\r\n        }\r\n        enclosingClassName = enclosingClassName.substring(0, enclosingClassName.length - 2);\r\n        return thread.runtimeDataArea.createClassObject(thread, BootstrapClassLoader_1.default.getInstance().findClass(enclosingClassName));\r\n    };\r\n    Class.getModifiers = function (thread, klazz, obj) {\r\n        return klazz.accessFlags;\r\n    };\r\n    Class.getDeclaredFields0 = function (thread, klazz, obj, _publicOnly) {\r\n        var clazz = BootstrapClassLoader_1.default.getInstance().findClass((0, Utils_1.getString)(thread.runtimeDataArea, (0, Utils_1.getFieldValue)(obj, \"name\")));\r\n        var array = thread.runtimeDataArea.createAArray(\"java.lang.reflect.Field\", clazz.getDeclaredFields().length);\r\n        clazz.getDeclaredFields().forEach(function (field, index) {\r\n            // TODO publiconly\r\n            var obj = thread.runtimeDataArea.createObject(\"java.lang.reflect.Field\");\r\n            var args = [];\r\n            args.push(thread.runtimeDataArea.createClassObject(thread, field.declaringClass));\r\n            args.push(thread.runtimeDataArea.createStringObject(thread, field.name));\r\n            args.push(thread.runtimeDataArea.createClassObject(thread, BootstrapClassLoader_1.default.getInstance().findClass(field.typeName)));\r\n            args.push(field.modifiers);\r\n            args.push(0);\r\n            args.push(thread.runtimeDataArea.createStringObject(thread, \"\"));\r\n            args.push(thread.runtimeDataArea.createPArray(8, 0));\r\n            thread.invokeMethod(\"<init>\", \"(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;IILjava/lang/String;[B)V\", obj.type, args.reverse(), obj);\r\n            thread.runtimeDataArea.objectHeap[array.heapIndex][index] = obj;\r\n        });\r\n        return array;\r\n    };\r\n    Class.isPrimitive = function (thread, klazz, obj) {\r\n        var clazz = BootstrapClassLoader_1.default.getInstance().findClass((0, Utils_1.getString)(thread.runtimeDataArea, (0, Utils_1.getFieldValue)(obj, \"name\")));\r\n        console.log(clazz.name);\r\n        return JavaClass_1.default.isWrappedPrimitive(clazz.name);\r\n    };\r\n    return Class;\r\n}(types_1.JavaObject));\r\nexports.Class = Class;\r\n//# sourceMappingURL=Class.js.map\n\n//# sourceURL=webpack://churu-vm/./src/jvm/lib/java/lang/Class.js?");

/***/ }),

/***/ "./src/jvm/lib/java/lang/JavaObject.js":
/*!*********************************************!*\
  !*** ./src/jvm/lib/java/lang/JavaObject.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.JavaObject = void 0;\r\nvar JavaObject = /** @class */ (function () {\r\n    function JavaObject() {\r\n    }\r\n    JavaObject.notifyAll = function (thread, klass, obj) {\r\n        // TODO\r\n    };\r\n    JavaObject.getClass = function (thread, klass, obj) {\r\n        return thread.runtimeDataArea.createClassObject(thread, klass);\r\n    };\r\n    // https://qiita.com/yoshi389111/items/9e34fe297bd908a36065#%E6%89%8B%E5%8B%95%E3%81%A7%E3%83%8F%E3%83%83%E3%82%B7%E3%83%A5%E8%A8%88%E7%AE%97\r\n    JavaObject.hashCode = function (thread, klass, obj) {\r\n        if (obj == null)\r\n            return 0;\r\n        var variables = thread.runtimeDataArea.objectHeap[obj.heapIndex];\r\n        var result = 17;\r\n        for (var _i = 0, variables_1 = variables; _i < variables_1.length; _i++) {\r\n            var variable = variables_1[_i];\r\n            var value = variable.value;\r\n            result *= 31;\r\n            if (typeof value === \"number\") {\r\n                result += value;\r\n            }\r\n            else if (value == null) {\r\n                result += 0;\r\n            }\r\n            else {\r\n                result += thread.invokeMethod(\"hashCode\", \"()I\", value.type, [], value);\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    return JavaObject;\r\n}());\r\nexports.JavaObject = JavaObject;\r\n//# sourceMappingURL=JavaObject.js.map\n\n//# sourceURL=webpack://churu-vm/./src/jvm/lib/java/lang/JavaObject.js?");

/***/ }),

/***/ "./src/jvm/lib/java/lang/Runtime.js":
/*!******************************************!*\
  !*** ./src/jvm/lib/java/lang/Runtime.js ***!
  \******************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Runtime = void 0;\r\nvar JavaObject_1 = __webpack_require__(/*! ../lang/JavaObject */ \"./src/jvm/lib/java/lang/JavaObject.ts\");\r\nvar Runtime = /** @class */ (function (_super) {\r\n    __extends(Runtime, _super);\r\n    function Runtime() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Runtime.availableProcessors = function (thread, klass, obj) {\r\n        return window.navigator.hardwareConcurrency;\r\n    };\r\n    return Runtime;\r\n}(JavaObject_1.JavaObject));\r\nexports.Runtime = Runtime;\r\n//# sourceMappingURL=Runtime.js.map\n\n//# sourceURL=webpack://churu-vm/./src/jvm/lib/java/lang/Runtime.js?");

/***/ }),

/***/ "./src/jvm/lib/java/lang/String.js":
/*!*****************************************!*\
  !*** ./src/jvm/lib/java/lang/String.js ***!
  \*****************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.String = void 0;\r\nvar types_1 = __webpack_require__(/*! ../../../core/cfl/types */ \"./src/jvm/core/cfl/types.ts\");\r\nvar String = /** @class */ (function (_super) {\r\n    __extends(String, _super);\r\n    function String() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    String.intern = function (thread, klazz, obj) {\r\n        return obj;\r\n    };\r\n    return String;\r\n}(types_1.JavaObject));\r\nexports.String = String;\r\n//# sourceMappingURL=String.js.map\n\n//# sourceURL=webpack://churu-vm/./src/jvm/lib/java/lang/String.js?");

/***/ }),

/***/ "./src/jvm/lib/java/lang/System.js":
/*!*****************************************!*\
  !*** ./src/jvm/lib/java/lang/System.js ***!
  \*****************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.System = void 0;\r\nvar types_1 = __webpack_require__(/*! ../../../core/cfl/types */ \"./src/jvm/core/cfl/types.ts\");\r\nvar JavaClass_1 = __importDefault(__webpack_require__(/*! ../../../core/cfl/JavaClass */ \"./src/jvm/core/cfl/JavaClass.ts\"));\r\nvar ExceptionHandler_1 = __webpack_require__(/*! ../../../utils/ExceptionHandler */ \"./src/jvm/utils/ExceptionHandler.ts\");\r\nvar System = /** @class */ (function (_super) {\r\n    __extends(System, _super);\r\n    function System() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    System.registerNatives = function (thread, klass, obj) {\r\n        // TODO\r\n    };\r\n    System.setIn0 = function (thread, klass, obj, inputStream) {\r\n        klass.getDeclaredField(\"in\").staticValue = inputStream;\r\n    };\r\n    System.setOut0 = function (thread, klass, obj, printStream) {\r\n        klass.getDeclaredField(\"out\").staticValue = printStream;\r\n    };\r\n    System.setErr0 = function (thread, klass, obj, printStream) {\r\n        klass.getDeclaredField(\"err\").staticValue = printStream;\r\n    };\r\n    System.initProperties = function (thread, klass, obj, properties) {\r\n        // const lineSeparator = await createString(thread.runtimeDataArea, \"line.separator\");\r\n        var fileEncodingKey = thread.runtimeDataArea.createStringObject(thread, \"file.encoding\");\r\n        var fileEncodingValue = thread.runtimeDataArea.createStringObject(thread, \"UTF-8\");\r\n        thread.invokeMethod(\"setProperty\", \"(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;\", properties.type, [fileEncodingValue, fileEncodingKey], properties);\r\n        var lineSeparatorKey = thread.runtimeDataArea.createStringObject(thread, \"line.separator\");\r\n        var lineSeparatorValue = thread.runtimeDataArea.createStringObject(thread, \"\\n\");\r\n        thread.invokeMethod(\"setProperty\", \"(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;\", properties.type, [lineSeparatorValue, lineSeparatorKey], properties);\r\n        return properties;\r\n    };\r\n    System.arraycopy = function (thread, klass, obj, src, srcPos, dest, destPos, length) {\r\n        if (src == null) {\r\n            (0, ExceptionHandler_1.throwException)(\"java.lang.NullPointerException: src\", thread.runtimeDataArea);\r\n            return;\r\n        }\r\n        if (dest == null) {\r\n            (0, ExceptionHandler_1.throwException)(\"java.lang.NullPointerException: dest\", thread.runtimeDataArea);\r\n            return;\r\n        }\r\n        if (!src.isArray || !dest.isArray\r\n            || ((JavaClass_1.default.isWrappedPrimitive(src.type.name) && JavaClass_1.default.isWrappedPrimitive(dest.type.name)) && src.type.name !== src.type.name)) {\r\n            (0, ExceptionHandler_1.throwException)(\"java.lang.ArrayStoreException\", thread.runtimeDataArea);\r\n            return;\r\n        }\r\n        var srcArray = thread.runtimeDataArea.objectHeap[src.heapIndex];\r\n        var destArray = thread.runtimeDataArea.objectHeap[dest.heapIndex];\r\n        if (srcPos < 0 || destPos < 0 || length < 0 || srcArray.length < srcPos + length || destArray.length < destPos + length) {\r\n            (0, ExceptionHandler_1.throwException)(\"java.lang.IndexOutOfBoundsException\", thread.runtimeDataArea);\r\n            return;\r\n        }\r\n        for (var i = 0; i < length; i++) {\r\n            destArray[destPos + i] = srcArray[srcPos + i];\r\n        }\r\n        return;\r\n    };\r\n    return System;\r\n}(types_1.JavaObject));\r\nexports.System = System;\r\n//# sourceMappingURL=System.js.map\n\n//# sourceURL=webpack://churu-vm/./src/jvm/lib/java/lang/System.js?");

/***/ }),

/***/ "./src/jvm/lib/java/lang/Thread.js":
/*!*****************************************!*\
  !*** ./src/jvm/lib/java/lang/Thread.js ***!
  \*****************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Thread = void 0;\r\nvar types_1 = __webpack_require__(/*! ../../../core/cfl/types */ \"./src/jvm/core/cfl/types.ts\");\r\nvar Thread = /** @class */ (function (_super) {\r\n    __extends(Thread, _super);\r\n    function Thread() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Thread.init = function (thread) {\r\n        if (this.current == null) {\r\n            var threadGroup = thread.runtimeDataArea.createObject(\"java.lang.ThreadGroup\");\r\n            thread.invokeMethod(\"<init>\", \"()V\", threadGroup.type, [], threadGroup);\r\n            var currentThread = thread.runtimeDataArea.createObject(\"java.lang.Thread\");\r\n            var variables = thread.runtimeDataArea.objectHeap[currentThread.heapIndex];\r\n            variables.filter(function (v) { return v.name == \"group\"; })[0].value = threadGroup;\r\n            variables.filter(function (v) { return v.name == \"name\"; })[0].value = thread.runtimeDataArea.createStringObject(thread, \"main\");\r\n            variables.filter(function (v) { return v.name == \"priority\"; })[0].value = 5;\r\n            this.current = currentThread;\r\n        }\r\n    };\r\n    Thread.registerNatives = function (thread, klass, obj) {\r\n        // klass.getDeclaredField(\"in\").staticValue = inputStream;\r\n    };\r\n    Thread.currentThread = function (thread, klass, obj) {\r\n        if (this.current == null) {\r\n            var threadGroup = thread.runtimeDataArea.createObject(\"java.lang.ThreadGroup\");\r\n            thread.invokeMethod(\"<init>\", \"()V\", threadGroup.type, [], threadGroup);\r\n            var currentThread = thread.runtimeDataArea.createObject(\"java.lang.Thread\");\r\n            var variables = thread.runtimeDataArea.objectHeap[currentThread.heapIndex];\r\n            variables.filter(function (v) { return v.name == \"group\"; })[0].value = threadGroup;\r\n            variables.filter(function (v) { return v.name == \"name\"; })[0].value = thread.runtimeDataArea.createStringObject(thread, \"main\");\r\n            variables.filter(function (v) { return v.name == \"priority\"; })[0].value = 5;\r\n            this.current = currentThread;\r\n        }\r\n        return this.current;\r\n    };\r\n    Thread.current = null;\r\n    return Thread;\r\n}(types_1.JavaObject));\r\nexports.Thread = Thread;\r\n//# sourceMappingURL=Thread.js.map\n\n//# sourceURL=webpack://churu-vm/./src/jvm/lib/java/lang/Thread.js?");

/***/ }),

/***/ "./src/jvm/lib/java/lang/invoke/MethodHandleNatives.js":
/*!*************************************************************!*\
  !*** ./src/jvm/lib/java/lang/invoke/MethodHandleNatives.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.MethodHandleNatives = void 0;\r\nvar JavaObject_1 = __webpack_require__(/*! ../JavaObject */ \"./src/jvm/lib/java/lang/JavaObject.ts\");\r\nvar MethodHandleNatives = /** @class */ (function (_super) {\r\n    __extends(MethodHandleNatives, _super);\r\n    function MethodHandleNatives() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    MethodHandleNatives.registerNatives = function (thread, klazz, obj) {\r\n        return;\r\n    };\r\n    MethodHandleNatives.resolve = function (thread, klazz, obj, _self, _caller) {\r\n        return _self;\r\n    };\r\n    MethodHandleNatives.getConstant = function (thread, klazz, obj, _which) {\r\n        // TODO\r\n        return 1;\r\n    };\r\n    return MethodHandleNatives;\r\n}(JavaObject_1.JavaObject));\r\nexports.MethodHandleNatives = MethodHandleNatives;\r\n//# sourceMappingURL=MethodHandleNatives.js.map\n\n//# sourceURL=webpack://churu-vm/./src/jvm/lib/java/lang/invoke/MethodHandleNatives.js?");

/***/ }),

/***/ "./src/jvm/lib/java/security/AccessController.js":
/*!*******************************************************!*\
  !*** ./src/jvm/lib/java/security/AccessController.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.AccessController = void 0;\r\nvar types_1 = __webpack_require__(/*! ../../../core/cfl/types */ \"./src/jvm/core/cfl/types.ts\");\r\nvar AccessController = /** @class */ (function (_super) {\r\n    __extends(AccessController, _super);\r\n    function AccessController() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    AccessController.doPrivileged = function (thread, klazz, obj, action) {\r\n        return thread.invokeMethod(\"run\", \"\", action.type, [], action);\r\n    };\r\n    return AccessController;\r\n}(types_1.JavaObject));\r\nexports.AccessController = AccessController;\r\n//# sourceMappingURL=AccessController.js.map\n\n//# sourceURL=webpack://churu-vm/./src/jvm/lib/java/security/AccessController.js?");

/***/ }),

/***/ "./src/jvm/lib/sun/misc/Unsafe.js":
/*!****************************************!*\
  !*** ./src/jvm/lib/sun/misc/Unsafe.js ***!
  \****************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Unsafe = void 0;\r\nvar JavaObject_1 = __webpack_require__(/*! ../../java/lang/JavaObject */ \"./src/jvm/lib/java/lang/JavaObject.ts\");\r\nvar Utils_1 = __webpack_require__(/*! ../../../utils/Utils */ \"./src/jvm/utils/Utils.ts\");\r\nvar BootstrapClassLoader_1 = __importDefault(__webpack_require__(/*! ../../../core/BootstrapClassLoader */ \"./src/jvm/core/BootstrapClassLoader.ts\"));\r\nvar Unsafe = /** @class */ (function (_super) {\r\n    __extends(Unsafe, _super);\r\n    function Unsafe() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Unsafe.registerNatives = function (thread, klass, obj) {\r\n    };\r\n    Unsafe.arrayBaseOffset = function (thread, klass, obj, clazz) {\r\n        return 0;\r\n    };\r\n    Unsafe.arrayIndexScale = function (thread, klass, obj, clazz) {\r\n        return 0;\r\n    };\r\n    Unsafe.addressSize = function (thread, klass, obj) {\r\n        return 4;\r\n    };\r\n    Unsafe.isBigEndian0 = function (thread, klass, obj) {\r\n        return 1;\r\n    };\r\n    Unsafe.unalignedAccess0 = function (thread, klass, obj) {\r\n        return 0;\r\n    };\r\n    Unsafe.allocateMemory = function (thread, klass, obj, size) {\r\n        return thread.runtimeDataArea.allocate(size);\r\n    };\r\n    Unsafe.freeMemory = function (thread, klass, obj, ptr) {\r\n        thread.runtimeDataArea.objectHeap[ptr] = null;\r\n    };\r\n    Unsafe.putLong = function (thread, klass, obj, ptr, x) {\r\n        var array = new ArrayBuffer(8);\r\n        var view = new DataView(array);\r\n        view.setBigUint64(0, x, false);\r\n        return thread.runtimeDataArea.objectHeap[ptr] = Array.from(new Uint8Array(array));\r\n    };\r\n    Unsafe.getByte = function (thread, klass, obj, ptr) {\r\n        return thread.runtimeDataArea.objectHeap[ptr][0];\r\n    };\r\n    Unsafe.objectFieldOffset = function (thread, klass, obj, _field) {\r\n        var declaringClassName = (0, Utils_1.getString)(thread.runtimeDataArea, (0, Utils_1.getFieldValue)((0, Utils_1.getFieldValue)(_field, \"clazz\"), \"name\"));\r\n        var declaringClass = BootstrapClassLoader_1.default.getInstance().findClass(declaringClassName);\r\n        var name = (0, Utils_1.getString)(thread.runtimeDataArea, (0, Utils_1.getFieldValue)(_field, \"name\"));\r\n        var index = 0;\r\n        for (var _i = 0, _a = declaringClass.getDeclaredFields(); _i < _a.length; _i++) {\r\n            var declaredField = _a[_i];\r\n            if (declaredField.name == name) {\r\n                return index;\r\n            }\r\n            index++;\r\n        }\r\n        return -1;\r\n    };\r\n    Unsafe.compareAndSwapObject = function (thread, klass, obj, _o, _offset, _expected, _x) {\r\n        var variable = thread.runtimeDataArea.objectHeap[_o.heapIndex].filter(function (v) { return v.name === _o.type.getDeclaredFields()[_offset].name; })[0];\r\n        var hash1 = 0;\r\n        if (variable.value != null)\r\n            hash1 = JavaObject_1.JavaObject.hashCode(thread, BootstrapClassLoader_1.default.getInstance().findClass(variable.typeName.substring(1)), variable.value);\r\n        var hash2 = 0;\r\n        if (_expected != null)\r\n            hash2 = JavaObject_1.JavaObject.hashCode(thread, _expected.type, _expected);\r\n        if (hash1 == hash2) {\r\n            variable.value = _x;\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    Unsafe.compareAndSwapInt = function (thread, klass, obj, _o, _offset, _expected, _x) {\r\n        var variable = thread.runtimeDataArea.objectHeap[_o.heapIndex].filter(function (v) { return v.name === _o.type.getDeclaredFields()[_offset].name; })[0];\r\n        if (variable.value == _expected) {\r\n            variable.value = _x;\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    Unsafe.getObjectVolatile = function (thread, klass, obj, _o, _offset) {\r\n        return thread.runtimeDataArea.objectHeap[_o.heapIndex]\r\n            .filter(function (v) { return v.name === _o.type.getDeclaredFields()[_offset].name; })[0]\r\n            .value;\r\n    };\r\n    return Unsafe;\r\n}(JavaObject_1.JavaObject));\r\nexports.Unsafe = Unsafe;\r\n//# sourceMappingURL=Unsafe.js.map\n\n//# sourceURL=webpack://churu-vm/./src/jvm/lib/sun/misc/Unsafe.js?");

/***/ }),

/***/ "./src/jvm/lib/sun/misc/VM.js":
/*!************************************!*\
  !*** ./src/jvm/lib/sun/misc/VM.js ***!
  \************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.VM = void 0;\r\nvar JavaObject_1 = __webpack_require__(/*! ../../java/lang/JavaObject */ \"./src/jvm/lib/java/lang/JavaObject.ts\");\r\nvar VM = /** @class */ (function (_super) {\r\n    __extends(VM, _super);\r\n    function VM() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    VM.initialize = function (thread, klass, obj) {\r\n        // klass.getDeclaredField(\"in\").staticValue = inputStream;\r\n    };\r\n    return VM;\r\n}(JavaObject_1.JavaObject));\r\nexports.VM = VM;\r\n//# sourceMappingURL=VM.js.map\n\n//# sourceURL=webpack://churu-vm/./src/jvm/lib/sun/misc/VM.js?");

/***/ }),

/***/ "./src/jvm/lib/sun/reflect/Reflection.js":
/*!***********************************************!*\
  !*** ./src/jvm/lib/sun/reflect/Reflection.js ***!
  \***********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Reflection = void 0;\r\nvar JavaObject_1 = __webpack_require__(/*! ../../java/lang/JavaObject */ \"./src/jvm/lib/java/lang/JavaObject.ts\");\r\nvar Reflection = /** @class */ (function (_super) {\r\n    __extends(Reflection, _super);\r\n    function Reflection() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Reflection.initialize = function (thread, klass, obj) {\r\n        // klass.getDeclaredField(\"in\").staticValue = inputStream;\r\n    };\r\n    Reflection.getCallerClass = function (thread, klass, obj) {\r\n        // TODO\r\n        return thread.runtimeDataArea.createClassObject(thread, thread.stack[thread.stack.length - 2].javaClass);\r\n    };\r\n    return Reflection;\r\n}(JavaObject_1.JavaObject));\r\nexports.Reflection = Reflection;\r\n//# sourceMappingURL=Reflection.js.map\n\n//# sourceURL=webpack://churu-vm/./src/jvm/lib/sun/reflect/Reflection.js?");

/***/ }),

/***/ "./src/jvm/models/info/ConstantPoolInfo.js":
/*!*************************************************!*\
  !*** ./src/jvm/models/info/ConstantPoolInfo.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.readUtf8FromConstantPool = exports.isConstantDoubleInfo = exports.isConstantLongInfo = exports.isConstantStringInfo = exports.isConstantFieldRefInfo = exports.CONSTANT_INVOKE_DYNAMIC = exports.CONSTANT_METHOD_TYPE = exports.CONSTANT_METHOD_HANDLE = exports.CONSTANT_UTF8 = exports.CONSTANT_NAME_AND_TYPE = exports.CONSTANT_DOUBLE = exports.CONSTANT_LONG = exports.CONSTANT_FLOAT = exports.CONSTANT_INTEGER = exports.CONSTANT_STRING = exports.CONSTANT_INTERFACE_METHOD_REF = exports.CONSTANT_METHOD_REF = exports.CONSTANT_FIELD_REF = exports.CONSTANT_CLASS = void 0;\r\nvar ClassFileLoader_js_1 = __webpack_require__(/*! ../../core/cfl/ClassFileLoader.js */ \"./src/jvm/core/cfl/ClassFileLoader.js\");\r\nexports.CONSTANT_CLASS = 7;\r\nexports.CONSTANT_FIELD_REF = 9;\r\nexports.CONSTANT_METHOD_REF = 10;\r\nexports.CONSTANT_INTERFACE_METHOD_REF = 11;\r\nexports.CONSTANT_STRING = 8;\r\nexports.CONSTANT_INTEGER = 3;\r\nexports.CONSTANT_FLOAT = 4;\r\nexports.CONSTANT_LONG = 5;\r\nexports.CONSTANT_DOUBLE = 6;\r\nexports.CONSTANT_NAME_AND_TYPE = 12;\r\nexports.CONSTANT_UTF8 = 1;\r\nexports.CONSTANT_METHOD_HANDLE = 15;\r\nexports.CONSTANT_METHOD_TYPE = 16;\r\nexports.CONSTANT_INVOKE_DYNAMIC = 18;\r\nvar isConstantFieldRefInfo = function (arg) {\r\n    return typeof arg === \"object\" &&\r\n        arg !== null &&\r\n        typeof arg.tag === \"number\" &&\r\n        typeof arg.classIndex === \"number\" &&\r\n        typeof arg.nameAndTypeIndex === \"number\";\r\n};\r\nexports.isConstantFieldRefInfo = isConstantFieldRefInfo;\r\nvar isConstantStringInfo = function (arg) {\r\n    return typeof arg === \"object\" &&\r\n        arg !== null &&\r\n        typeof arg.tag === \"number\" &&\r\n        typeof arg.stringIndex === \"number\";\r\n};\r\nexports.isConstantStringInfo = isConstantStringInfo;\r\nvar isConstantLongInfo = function (arg) {\r\n    return typeof arg === \"object\" &&\r\n        arg !== null &&\r\n        typeof arg.tag === \"number\" &&\r\n        typeof arg.highBytes === \"number\" &&\r\n        typeof arg.lowBytes === \"number\";\r\n};\r\nexports.isConstantLongInfo = isConstantLongInfo;\r\nvar isConstantDoubleInfo = function (arg) {\r\n    return typeof arg === \"object\" &&\r\n        arg !== null &&\r\n        typeof arg.tag === \"number\" &&\r\n        typeof arg.highBytes === \"number\" &&\r\n        typeof arg.lowBytes === \"number\";\r\n};\r\nexports.isConstantDoubleInfo = isConstantDoubleInfo;\r\nvar readUtf8FromConstantPool = function (constantPool, index) {\r\n    return new TextDecoder(\"utf-8\").decode((0, ClassFileLoader_js_1.getConstantPoolInfo)(constantPool, index).info.bytes.view);\r\n};\r\nexports.readUtf8FromConstantPool = readUtf8FromConstantPool;\r\n//# sourceMappingURL=ConstantPoolInfo.js.map\n\n//# sourceURL=webpack://churu-vm/./src/jvm/models/info/ConstantPoolInfo.js?");

/***/ }),

/***/ "./src/jvm/utils/ByteBuffer.js":
/*!*************************************!*\
  !*** ./src/jvm/utils/ByteBuffer.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ByteBuffer = void 0;\r\nvar ByteBuffer = /** @class */ (function () {\r\n    function ByteBuffer(array) {\r\n        this.offset = 0;\r\n        this.view = new DataView(array);\r\n    }\r\n    ByteBuffer.prototype.getInt8 = function () {\r\n        var result = this.view.getInt8(this.offset);\r\n        this.offset += 1;\r\n        return result;\r\n    };\r\n    ByteBuffer.prototype.getInt16 = function () {\r\n        var result = this.view.getInt8(this.offset);\r\n        this.offset += 2;\r\n        return result;\r\n    };\r\n    ByteBuffer.prototype.getInt32 = function () {\r\n        var result = this.view.getInt8(this.offset);\r\n        this.offset += 4;\r\n        return result;\r\n    };\r\n    ByteBuffer.prototype.getFloat32 = function () {\r\n        var result = this.view.getFloat32(this.offset);\r\n        this.offset += 4;\r\n        return result;\r\n    };\r\n    ByteBuffer.prototype.getFloat64 = function () {\r\n        var result = this.view.getFloat64(this.offset);\r\n        this.offset += 8;\r\n        return result;\r\n    };\r\n    ByteBuffer.prototype.getUint8 = function () {\r\n        var result = this.view.getUint8(this.offset);\r\n        this.offset += 1;\r\n        return result;\r\n    };\r\n    ByteBuffer.prototype.getUint16 = function () {\r\n        var result = this.view.getUint16(this.offset);\r\n        this.offset += 2;\r\n        return result;\r\n    };\r\n    ByteBuffer.prototype.getUint32 = function () {\r\n        var result = this.view.getUint32(this.offset);\r\n        this.offset += 4;\r\n        return result;\r\n    };\r\n    ByteBuffer.prototype.getBigInt64 = function () {\r\n        var result = this.view.getBigInt64(this.offset);\r\n        this.offset += 8;\r\n        return result;\r\n    };\r\n    ByteBuffer.prototype.setInt8 = function (n) {\r\n        this.view.setInt8(this.offset, n);\r\n        this.offset += 1;\r\n    };\r\n    ByteBuffer.prototype.setInt16 = function (n) {\r\n        this.view.setInt32(this.offset, n);\r\n        this.offset += 2;\r\n    };\r\n    ByteBuffer.prototype.setInt32 = function (n) {\r\n        this.view.setInt32(this.offset, n);\r\n        this.offset += 4;\r\n    };\r\n    ByteBuffer.prototype.setFloat32 = function (n) {\r\n        this.view.setFloat32(this.offset, n);\r\n        this.offset += 4;\r\n    };\r\n    ByteBuffer.prototype.setFloat64 = function (n) {\r\n        this.view.setFloat64(this.offset, n);\r\n        this.offset += 8;\r\n    };\r\n    ByteBuffer.prototype.setUint8 = function (n) {\r\n        this.view.setUint8(this.offset, n);\r\n        this.offset += 1;\r\n    };\r\n    ByteBuffer.prototype.setUint16 = function (n) {\r\n        this.view.setUint16(this.offset, n);\r\n        this.offset += 2;\r\n    };\r\n    ByteBuffer.prototype.setUint32 = function (n) {\r\n        this.view.setUint32(this.offset, n);\r\n        this.offset += 4;\r\n    };\r\n    ByteBuffer.prototype.resetOffset = function () {\r\n        this.offset = 0;\r\n    };\r\n    ByteBuffer.prototype.getLength = function () {\r\n        return this.view.byteLength;\r\n    };\r\n    return ByteBuffer;\r\n}());\r\nexports.ByteBuffer = ByteBuffer;\r\n//# sourceMappingURL=ByteBuffer.js.map\n\n//# sourceURL=webpack://churu-vm/./src/jvm/utils/ByteBuffer.js?");

/***/ }),

/***/ "./node_modules/fflate/lib/index.cjs":
/*!*******************************************!*\
  !*** ./node_modules/fflate/lib/index.cjs ***!
  \*******************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\n// DEFLATE is a complex format; to read this code, you should probably check the RFC first:\r\n// https://tools.ietf.org/html/rfc1951\r\n// You may also wish to take a look at the guide I made about this program:\r\n// https://gist.github.com/101arrowz/253f31eb5abc3d9275ab943003ffecad\r\n// Some of the following code is similar to that of UZIP.js:\r\n// https://github.com/photopea/UZIP.js\r\n// However, the vast majority of the codebase has diverged from UZIP.js to increase performance and reduce bundle size.\r\n// Sometimes 0 will appear where -1 would be more appropriate. This is because using a uint\r\n// is better for memory in most engines (I *think*).\r\nvar node_worker_1 = __webpack_require__(/*! ./node-worker.cjs */ \"./node_modules/fflate/lib/worker.cjs\");\r\n// aliases for shorter compressed code (most minifers don't do this)\r\nvar u8 = Uint8Array, u16 = Uint16Array, u32 = Uint32Array;\r\n// fixed length extra bits\r\nvar fleb = new u8([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, /* unused */ 0, 0, /* impossible */ 0]);\r\n// fixed distance extra bits\r\n// see fleb note\r\nvar fdeb = new u8([0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, /* unused */ 0, 0]);\r\n// code length index map\r\nvar clim = new u8([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\r\n// get base, reverse index map from extra bits\r\nvar freb = function (eb, start) {\r\n    var b = new u16(31);\r\n    for (var i = 0; i < 31; ++i) {\r\n        b[i] = start += 1 << eb[i - 1];\r\n    }\r\n    // numbers here are at max 18 bits\r\n    var r = new u32(b[30]);\r\n    for (var i = 1; i < 30; ++i) {\r\n        for (var j = b[i]; j < b[i + 1]; ++j) {\r\n            r[j] = ((j - b[i]) << 5) | i;\r\n        }\r\n    }\r\n    return [b, r];\r\n};\r\nvar _a = freb(fleb, 2), fl = _a[0], revfl = _a[1];\r\n// we can ignore the fact that the other numbers are wrong; they never happen anyway\r\nfl[28] = 258, revfl[258] = 28;\r\nvar _b = freb(fdeb, 0), fd = _b[0], revfd = _b[1];\r\n// map of value to reverse (assuming 16 bits)\r\nvar rev = new u16(32768);\r\nfor (var i = 0; i < 32768; ++i) {\r\n    // reverse table algorithm from SO\r\n    var x = ((i & 0xAAAA) >>> 1) | ((i & 0x5555) << 1);\r\n    x = ((x & 0xCCCC) >>> 2) | ((x & 0x3333) << 2);\r\n    x = ((x & 0xF0F0) >>> 4) | ((x & 0x0F0F) << 4);\r\n    rev[i] = (((x & 0xFF00) >>> 8) | ((x & 0x00FF) << 8)) >>> 1;\r\n}\r\n// create huffman tree from u8 \"map\": index -> code length for code index\r\n// mb (max bits) must be at most 15\r\n// TODO: optimize/split up?\r\nvar hMap = (function (cd, mb, r) {\r\n    var s = cd.length;\r\n    // index\r\n    var i = 0;\r\n    // u16 \"map\": index -> # of codes with bit length = index\r\n    var l = new u16(mb);\r\n    // length of cd must be 288 (total # of codes)\r\n    for (; i < s; ++i) {\r\n        if (cd[i])\r\n            ++l[cd[i] - 1];\r\n    }\r\n    // u16 \"map\": index -> minimum code for bit length = index\r\n    var le = new u16(mb);\r\n    for (i = 0; i < mb; ++i) {\r\n        le[i] = (le[i - 1] + l[i - 1]) << 1;\r\n    }\r\n    var co;\r\n    if (r) {\r\n        // u16 \"map\": index -> number of actual bits, symbol for code\r\n        co = new u16(1 << mb);\r\n        // bits to remove for reverser\r\n        var rvb = 15 - mb;\r\n        for (i = 0; i < s; ++i) {\r\n            // ignore 0 lengths\r\n            if (cd[i]) {\r\n                // num encoding both symbol and bits read\r\n                var sv = (i << 4) | cd[i];\r\n                // free bits\r\n                var r_1 = mb - cd[i];\r\n                // start value\r\n                var v = le[cd[i] - 1]++ << r_1;\r\n                // m is end value\r\n                for (var m = v | ((1 << r_1) - 1); v <= m; ++v) {\r\n                    // every 16 bit value starting with the code yields the same result\r\n                    co[rev[v] >>> rvb] = sv;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        co = new u16(s);\r\n        for (i = 0; i < s; ++i) {\r\n            if (cd[i]) {\r\n                co[i] = rev[le[cd[i] - 1]++] >>> (15 - cd[i]);\r\n            }\r\n        }\r\n    }\r\n    return co;\r\n});\r\n// fixed length tree\r\nvar flt = new u8(288);\r\nfor (var i = 0; i < 144; ++i)\r\n    flt[i] = 8;\r\nfor (var i = 144; i < 256; ++i)\r\n    flt[i] = 9;\r\nfor (var i = 256; i < 280; ++i)\r\n    flt[i] = 7;\r\nfor (var i = 280; i < 288; ++i)\r\n    flt[i] = 8;\r\n// fixed distance tree\r\nvar fdt = new u8(32);\r\nfor (var i = 0; i < 32; ++i)\r\n    fdt[i] = 5;\r\n// fixed length map\r\nvar flm = /*#__PURE__*/ hMap(flt, 9, 0), flrm = /*#__PURE__*/ hMap(flt, 9, 1);\r\n// fixed distance map\r\nvar fdm = /*#__PURE__*/ hMap(fdt, 5, 0), fdrm = /*#__PURE__*/ hMap(fdt, 5, 1);\r\n// find max of array\r\nvar max = function (a) {\r\n    var m = a[0];\r\n    for (var i = 1; i < a.length; ++i) {\r\n        if (a[i] > m)\r\n            m = a[i];\r\n    }\r\n    return m;\r\n};\r\n// read d, starting at bit p and mask with m\r\nvar bits = function (d, p, m) {\r\n    var o = (p / 8) | 0;\r\n    return ((d[o] | (d[o + 1] << 8)) >> (p & 7)) & m;\r\n};\r\n// read d, starting at bit p continuing for at least 16 bits\r\nvar bits16 = function (d, p) {\r\n    var o = (p / 8) | 0;\r\n    return ((d[o] | (d[o + 1] << 8) | (d[o + 2] << 16)) >> (p & 7));\r\n};\r\n// get end of byte\r\nvar shft = function (p) { return ((p + 7) / 8) | 0; };\r\n// typed array slice - allows garbage collector to free original reference,\r\n// while being more compatible than .slice\r\nvar slc = function (v, s, e) {\r\n    if (s == null || s < 0)\r\n        s = 0;\r\n    if (e == null || e > v.length)\r\n        e = v.length;\r\n    // can't use .constructor in case user-supplied\r\n    var n = new (v.BYTES_PER_ELEMENT == 2 ? u16 : v.BYTES_PER_ELEMENT == 4 ? u32 : u8)(e - s);\r\n    n.set(v.subarray(s, e));\r\n    return n;\r\n};\r\n/**\r\n * Codes for errors generated within this library\r\n */\r\nexports.FlateErrorCode = {\r\n    UnexpectedEOF: 0,\r\n    InvalidBlockType: 1,\r\n    InvalidLengthLiteral: 2,\r\n    InvalidDistance: 3,\r\n    StreamFinished: 4,\r\n    NoStreamHandler: 5,\r\n    InvalidHeader: 6,\r\n    NoCallback: 7,\r\n    InvalidUTF8: 8,\r\n    ExtraFieldTooLong: 9,\r\n    InvalidDate: 10,\r\n    FilenameTooLong: 11,\r\n    StreamFinishing: 12,\r\n    InvalidZipData: 13,\r\n    UnknownCompressionMethod: 14\r\n};\r\n// error codes\r\nvar ec = [\r\n    'unexpected EOF',\r\n    'invalid block type',\r\n    'invalid length/literal',\r\n    'invalid distance',\r\n    'stream finished',\r\n    'no stream handler',\r\n    ,\r\n    'no callback',\r\n    'invalid UTF-8 data',\r\n    'extra field too long',\r\n    'date not in range 1980-2099',\r\n    'filename too long',\r\n    'stream finishing',\r\n    'invalid zip data'\r\n    // determined by unknown compression method\r\n];\r\n;\r\nvar err = function (ind, msg, nt) {\r\n    var e = new Error(msg || ec[ind]);\r\n    e.code = ind;\r\n    if (Error.captureStackTrace)\r\n        Error.captureStackTrace(e, err);\r\n    if (!nt)\r\n        throw e;\r\n    return e;\r\n};\r\n// expands raw DEFLATE data\r\nvar inflt = function (dat, buf, st) {\r\n    // source length\r\n    var sl = dat.length;\r\n    if (!sl || (st && st.f && !st.l))\r\n        return buf || new u8(0);\r\n    // have to estimate size\r\n    var noBuf = !buf || st;\r\n    // no state\r\n    var noSt = !st || st.i;\r\n    if (!st)\r\n        st = {};\r\n    // Assumes roughly 33% compression ratio average\r\n    if (!buf)\r\n        buf = new u8(sl * 3);\r\n    // ensure buffer can fit at least l elements\r\n    var cbuf = function (l) {\r\n        var bl = buf.length;\r\n        // need to increase size to fit\r\n        if (l > bl) {\r\n            // Double or set to necessary, whichever is greater\r\n            var nbuf = new u8(Math.max(bl * 2, l));\r\n            nbuf.set(buf);\r\n            buf = nbuf;\r\n        }\r\n    };\r\n    //  last chunk         bitpos           bytes\r\n    var final = st.f || 0, pos = st.p || 0, bt = st.b || 0, lm = st.l, dm = st.d, lbt = st.m, dbt = st.n;\r\n    // total bits\r\n    var tbts = sl * 8;\r\n    do {\r\n        if (!lm) {\r\n            // BFINAL - this is only 1 when last chunk is next\r\n            final = bits(dat, pos, 1);\r\n            // type: 0 = no compression, 1 = fixed huffman, 2 = dynamic huffman\r\n            var type = bits(dat, pos + 1, 3);\r\n            pos += 3;\r\n            if (!type) {\r\n                // go to end of byte boundary\r\n                var s = shft(pos) + 4, l = dat[s - 4] | (dat[s - 3] << 8), t = s + l;\r\n                if (t > sl) {\r\n                    if (noSt)\r\n                        err(0);\r\n                    break;\r\n                }\r\n                // ensure size\r\n                if (noBuf)\r\n                    cbuf(bt + l);\r\n                // Copy over uncompressed data\r\n                buf.set(dat.subarray(s, t), bt);\r\n                // Get new bitpos, update byte count\r\n                st.b = bt += l, st.p = pos = t * 8, st.f = final;\r\n                continue;\r\n            }\r\n            else if (type == 1)\r\n                lm = flrm, dm = fdrm, lbt = 9, dbt = 5;\r\n            else if (type == 2) {\r\n                //  literal                            lengths\r\n                var hLit = bits(dat, pos, 31) + 257, hcLen = bits(dat, pos + 10, 15) + 4;\r\n                var tl = hLit + bits(dat, pos + 5, 31) + 1;\r\n                pos += 14;\r\n                // length+distance tree\r\n                var ldt = new u8(tl);\r\n                // code length tree\r\n                var clt = new u8(19);\r\n                for (var i = 0; i < hcLen; ++i) {\r\n                    // use index map to get real code\r\n                    clt[clim[i]] = bits(dat, pos + i * 3, 7);\r\n                }\r\n                pos += hcLen * 3;\r\n                // code lengths bits\r\n                var clb = max(clt), clbmsk = (1 << clb) - 1;\r\n                // code lengths map\r\n                var clm = hMap(clt, clb, 1);\r\n                for (var i = 0; i < tl;) {\r\n                    var r = clm[bits(dat, pos, clbmsk)];\r\n                    // bits read\r\n                    pos += r & 15;\r\n                    // symbol\r\n                    var s = r >>> 4;\r\n                    // code length to copy\r\n                    if (s < 16) {\r\n                        ldt[i++] = s;\r\n                    }\r\n                    else {\r\n                        //  copy   count\r\n                        var c = 0, n = 0;\r\n                        if (s == 16)\r\n                            n = 3 + bits(dat, pos, 3), pos += 2, c = ldt[i - 1];\r\n                        else if (s == 17)\r\n                            n = 3 + bits(dat, pos, 7), pos += 3;\r\n                        else if (s == 18)\r\n                            n = 11 + bits(dat, pos, 127), pos += 7;\r\n                        while (n--)\r\n                            ldt[i++] = c;\r\n                    }\r\n                }\r\n                //    length tree                 distance tree\r\n                var lt = ldt.subarray(0, hLit), dt = ldt.subarray(hLit);\r\n                // max length bits\r\n                lbt = max(lt);\r\n                // max dist bits\r\n                dbt = max(dt);\r\n                lm = hMap(lt, lbt, 1);\r\n                dm = hMap(dt, dbt, 1);\r\n            }\r\n            else\r\n                err(1);\r\n            if (pos > tbts) {\r\n                if (noSt)\r\n                    err(0);\r\n                break;\r\n            }\r\n        }\r\n        // Make sure the buffer can hold this + the largest possible addition\r\n        // Maximum chunk size (practically, theoretically infinite) is 2^17;\r\n        if (noBuf)\r\n            cbuf(bt + 131072);\r\n        var lms = (1 << lbt) - 1, dms = (1 << dbt) - 1;\r\n        var lpos = pos;\r\n        for (;; lpos = pos) {\r\n            // bits read, code\r\n            var c = lm[bits16(dat, pos) & lms], sym = c >>> 4;\r\n            pos += c & 15;\r\n            if (pos > tbts) {\r\n                if (noSt)\r\n                    err(0);\r\n                break;\r\n            }\r\n            if (!c)\r\n                err(2);\r\n            if (sym < 256)\r\n                buf[bt++] = sym;\r\n            else if (sym == 256) {\r\n                lpos = pos, lm = null;\r\n                break;\r\n            }\r\n            else {\r\n                var add = sym - 254;\r\n                // no extra bits needed if less\r\n                if (sym > 264) {\r\n                    // index\r\n                    var i = sym - 257, b = fleb[i];\r\n                    add = bits(dat, pos, (1 << b) - 1) + fl[i];\r\n                    pos += b;\r\n                }\r\n                // dist\r\n                var d = dm[bits16(dat, pos) & dms], dsym = d >>> 4;\r\n                if (!d)\r\n                    err(3);\r\n                pos += d & 15;\r\n                var dt = fd[dsym];\r\n                if (dsym > 3) {\r\n                    var b = fdeb[dsym];\r\n                    dt += bits16(dat, pos) & ((1 << b) - 1), pos += b;\r\n                }\r\n                if (pos > tbts) {\r\n                    if (noSt)\r\n                        err(0);\r\n                    break;\r\n                }\r\n                if (noBuf)\r\n                    cbuf(bt + 131072);\r\n                var end = bt + add;\r\n                for (; bt < end; bt += 4) {\r\n                    buf[bt] = buf[bt - dt];\r\n                    buf[bt + 1] = buf[bt + 1 - dt];\r\n                    buf[bt + 2] = buf[bt + 2 - dt];\r\n                    buf[bt + 3] = buf[bt + 3 - dt];\r\n                }\r\n                bt = end;\r\n            }\r\n        }\r\n        st.l = lm, st.p = lpos, st.b = bt, st.f = final;\r\n        if (lm)\r\n            final = 1, st.m = lbt, st.d = dm, st.n = dbt;\r\n    } while (!final);\r\n    return bt == buf.length ? buf : slc(buf, 0, bt);\r\n};\r\n// starting at p, write the minimum number of bits that can hold v to d\r\nvar wbits = function (d, p, v) {\r\n    v <<= p & 7;\r\n    var o = (p / 8) | 0;\r\n    d[o] |= v;\r\n    d[o + 1] |= v >>> 8;\r\n};\r\n// starting at p, write the minimum number of bits (>8) that can hold v to d\r\nvar wbits16 = function (d, p, v) {\r\n    v <<= p & 7;\r\n    var o = (p / 8) | 0;\r\n    d[o] |= v;\r\n    d[o + 1] |= v >>> 8;\r\n    d[o + 2] |= v >>> 16;\r\n};\r\n// creates code lengths from a frequency table\r\nvar hTree = function (d, mb) {\r\n    // Need extra info to make a tree\r\n    var t = [];\r\n    for (var i = 0; i < d.length; ++i) {\r\n        if (d[i])\r\n            t.push({ s: i, f: d[i] });\r\n    }\r\n    var s = t.length;\r\n    var t2 = t.slice();\r\n    if (!s)\r\n        return [et, 0];\r\n    if (s == 1) {\r\n        var v = new u8(t[0].s + 1);\r\n        v[t[0].s] = 1;\r\n        return [v, 1];\r\n    }\r\n    t.sort(function (a, b) { return a.f - b.f; });\r\n    // after i2 reaches last ind, will be stopped\r\n    // freq must be greater than largest possible number of symbols\r\n    t.push({ s: -1, f: 25001 });\r\n    var l = t[0], r = t[1], i0 = 0, i1 = 1, i2 = 2;\r\n    t[0] = { s: -1, f: l.f + r.f, l: l, r: r };\r\n    // efficient algorithm from UZIP.js\r\n    // i0 is lookbehind, i2 is lookahead - after processing two low-freq\r\n    // symbols that combined have high freq, will start processing i2 (high-freq,\r\n    // non-composite) symbols instead\r\n    // see https://reddit.com/r/photopea/comments/ikekht/uzipjs_questions/\r\n    while (i1 != s - 1) {\r\n        l = t[t[i0].f < t[i2].f ? i0++ : i2++];\r\n        r = t[i0 != i1 && t[i0].f < t[i2].f ? i0++ : i2++];\r\n        t[i1++] = { s: -1, f: l.f + r.f, l: l, r: r };\r\n    }\r\n    var maxSym = t2[0].s;\r\n    for (var i = 1; i < s; ++i) {\r\n        if (t2[i].s > maxSym)\r\n            maxSym = t2[i].s;\r\n    }\r\n    // code lengths\r\n    var tr = new u16(maxSym + 1);\r\n    // max bits in tree\r\n    var mbt = ln(t[i1 - 1], tr, 0);\r\n    if (mbt > mb) {\r\n        // more algorithms from UZIP.js\r\n        // TODO: find out how this code works (debt)\r\n        //  ind    debt\r\n        var i = 0, dt = 0;\r\n        //    left            cost\r\n        var lft = mbt - mb, cst = 1 << lft;\r\n        t2.sort(function (a, b) { return tr[b.s] - tr[a.s] || a.f - b.f; });\r\n        for (; i < s; ++i) {\r\n            var i2_1 = t2[i].s;\r\n            if (tr[i2_1] > mb) {\r\n                dt += cst - (1 << (mbt - tr[i2_1]));\r\n                tr[i2_1] = mb;\r\n            }\r\n            else\r\n                break;\r\n        }\r\n        dt >>>= lft;\r\n        while (dt > 0) {\r\n            var i2_2 = t2[i].s;\r\n            if (tr[i2_2] < mb)\r\n                dt -= 1 << (mb - tr[i2_2]++ - 1);\r\n            else\r\n                ++i;\r\n        }\r\n        for (; i >= 0 && dt; --i) {\r\n            var i2_3 = t2[i].s;\r\n            if (tr[i2_3] == mb) {\r\n                --tr[i2_3];\r\n                ++dt;\r\n            }\r\n        }\r\n        mbt = mb;\r\n    }\r\n    return [new u8(tr), mbt];\r\n};\r\n// get the max length and assign length codes\r\nvar ln = function (n, l, d) {\r\n    return n.s == -1\r\n        ? Math.max(ln(n.l, l, d + 1), ln(n.r, l, d + 1))\r\n        : (l[n.s] = d);\r\n};\r\n// length codes generation\r\nvar lc = function (c) {\r\n    var s = c.length;\r\n    // Note that the semicolon was intentional\r\n    while (s && !c[--s])\r\n        ;\r\n    var cl = new u16(++s);\r\n    //  ind      num         streak\r\n    var cli = 0, cln = c[0], cls = 1;\r\n    var w = function (v) { cl[cli++] = v; };\r\n    for (var i = 1; i <= s; ++i) {\r\n        if (c[i] == cln && i != s)\r\n            ++cls;\r\n        else {\r\n            if (!cln && cls > 2) {\r\n                for (; cls > 138; cls -= 138)\r\n                    w(32754);\r\n                if (cls > 2) {\r\n                    w(cls > 10 ? ((cls - 11) << 5) | 28690 : ((cls - 3) << 5) | 12305);\r\n                    cls = 0;\r\n                }\r\n            }\r\n            else if (cls > 3) {\r\n                w(cln), --cls;\r\n                for (; cls > 6; cls -= 6)\r\n                    w(8304);\r\n                if (cls > 2)\r\n                    w(((cls - 3) << 5) | 8208), cls = 0;\r\n            }\r\n            while (cls--)\r\n                w(cln);\r\n            cls = 1;\r\n            cln = c[i];\r\n        }\r\n    }\r\n    return [cl.subarray(0, cli), s];\r\n};\r\n// calculate the length of output from tree, code lengths\r\nvar clen = function (cf, cl) {\r\n    var l = 0;\r\n    for (var i = 0; i < cl.length; ++i)\r\n        l += cf[i] * cl[i];\r\n    return l;\r\n};\r\n// writes a fixed block\r\n// returns the new bit pos\r\nvar wfblk = function (out, pos, dat) {\r\n    // no need to write 00 as type: TypedArray defaults to 0\r\n    var s = dat.length;\r\n    var o = shft(pos + 2);\r\n    out[o] = s & 255;\r\n    out[o + 1] = s >>> 8;\r\n    out[o + 2] = out[o] ^ 255;\r\n    out[o + 3] = out[o + 1] ^ 255;\r\n    for (var i = 0; i < s; ++i)\r\n        out[o + i + 4] = dat[i];\r\n    return (o + 4 + s) * 8;\r\n};\r\n// writes a block\r\nvar wblk = function (dat, out, final, syms, lf, df, eb, li, bs, bl, p) {\r\n    wbits(out, p++, final);\r\n    ++lf[256];\r\n    var _a = hTree(lf, 15), dlt = _a[0], mlb = _a[1];\r\n    var _b = hTree(df, 15), ddt = _b[0], mdb = _b[1];\r\n    var _c = lc(dlt), lclt = _c[0], nlc = _c[1];\r\n    var _d = lc(ddt), lcdt = _d[0], ndc = _d[1];\r\n    var lcfreq = new u16(19);\r\n    for (var i = 0; i < lclt.length; ++i)\r\n        lcfreq[lclt[i] & 31]++;\r\n    for (var i = 0; i < lcdt.length; ++i)\r\n        lcfreq[lcdt[i] & 31]++;\r\n    var _e = hTree(lcfreq, 7), lct = _e[0], mlcb = _e[1];\r\n    var nlcc = 19;\r\n    for (; nlcc > 4 && !lct[clim[nlcc - 1]]; --nlcc)\r\n        ;\r\n    var flen = (bl + 5) << 3;\r\n    var ftlen = clen(lf, flt) + clen(df, fdt) + eb;\r\n    var dtlen = clen(lf, dlt) + clen(df, ddt) + eb + 14 + 3 * nlcc + clen(lcfreq, lct) + (2 * lcfreq[16] + 3 * lcfreq[17] + 7 * lcfreq[18]);\r\n    if (flen <= ftlen && flen <= dtlen)\r\n        return wfblk(out, p, dat.subarray(bs, bs + bl));\r\n    var lm, ll, dm, dl;\r\n    wbits(out, p, 1 + (dtlen < ftlen)), p += 2;\r\n    if (dtlen < ftlen) {\r\n        lm = hMap(dlt, mlb, 0), ll = dlt, dm = hMap(ddt, mdb, 0), dl = ddt;\r\n        var llm = hMap(lct, mlcb, 0);\r\n        wbits(out, p, nlc - 257);\r\n        wbits(out, p + 5, ndc - 1);\r\n        wbits(out, p + 10, nlcc - 4);\r\n        p += 14;\r\n        for (var i = 0; i < nlcc; ++i)\r\n            wbits(out, p + 3 * i, lct[clim[i]]);\r\n        p += 3 * nlcc;\r\n        var lcts = [lclt, lcdt];\r\n        for (var it = 0; it < 2; ++it) {\r\n            var clct = lcts[it];\r\n            for (var i = 0; i < clct.length; ++i) {\r\n                var len = clct[i] & 31;\r\n                wbits(out, p, llm[len]), p += lct[len];\r\n                if (len > 15)\r\n                    wbits(out, p, (clct[i] >>> 5) & 127), p += clct[i] >>> 12;\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        lm = flm, ll = flt, dm = fdm, dl = fdt;\r\n    }\r\n    for (var i = 0; i < li; ++i) {\r\n        if (syms[i] > 255) {\r\n            var len = (syms[i] >>> 18) & 31;\r\n            wbits16(out, p, lm[len + 257]), p += ll[len + 257];\r\n            if (len > 7)\r\n                wbits(out, p, (syms[i] >>> 23) & 31), p += fleb[len];\r\n            var dst = syms[i] & 31;\r\n            wbits16(out, p, dm[dst]), p += dl[dst];\r\n            if (dst > 3)\r\n                wbits16(out, p, (syms[i] >>> 5) & 8191), p += fdeb[dst];\r\n        }\r\n        else {\r\n            wbits16(out, p, lm[syms[i]]), p += ll[syms[i]];\r\n        }\r\n    }\r\n    wbits16(out, p, lm[256]);\r\n    return p + ll[256];\r\n};\r\n// deflate options (nice << 13) | chain\r\nvar deo = /*#__PURE__*/ new u32([65540, 131080, 131088, 131104, 262176, 1048704, 1048832, 2114560, 2117632]);\r\n// empty\r\nvar et = /*#__PURE__*/ new u8(0);\r\n// compresses data into a raw DEFLATE buffer\r\nvar dflt = function (dat, lvl, plvl, pre, post, lst) {\r\n    var s = dat.length;\r\n    var o = new u8(pre + s + 5 * (1 + Math.ceil(s / 7000)) + post);\r\n    // writing to this writes to the output buffer\r\n    var w = o.subarray(pre, o.length - post);\r\n    var pos = 0;\r\n    if (!lvl || s < 8) {\r\n        for (var i = 0; i <= s; i += 65535) {\r\n            // end\r\n            var e = i + 65535;\r\n            if (e >= s) {\r\n                // write final block\r\n                w[pos >> 3] = lst;\r\n            }\r\n            pos = wfblk(w, pos + 1, dat.subarray(i, e));\r\n        }\r\n    }\r\n    else {\r\n        var opt = deo[lvl - 1];\r\n        var n = opt >>> 13, c = opt & 8191;\r\n        var msk_1 = (1 << plvl) - 1;\r\n        //    prev 2-byte val map    curr 2-byte val map\r\n        var prev = new u16(32768), head = new u16(msk_1 + 1);\r\n        var bs1_1 = Math.ceil(plvl / 3), bs2_1 = 2 * bs1_1;\r\n        var hsh = function (i) { return (dat[i] ^ (dat[i + 1] << bs1_1) ^ (dat[i + 2] << bs2_1)) & msk_1; };\r\n        // 24576 is an arbitrary number of maximum symbols per block\r\n        // 424 buffer for last block\r\n        var syms = new u32(25000);\r\n        // length/literal freq   distance freq\r\n        var lf = new u16(288), df = new u16(32);\r\n        //  l/lcnt  exbits  index  l/lind  waitdx  bitpos\r\n        var lc_1 = 0, eb = 0, i = 0, li = 0, wi = 0, bs = 0;\r\n        for (; i < s; ++i) {\r\n            // hash value\r\n            // deopt when i > s - 3 - at end, deopt acceptable\r\n            var hv = hsh(i);\r\n            // index mod 32768    previous index mod\r\n            var imod = i & 32767, pimod = head[hv];\r\n            prev[imod] = pimod;\r\n            head[hv] = imod;\r\n            // We always should modify head and prev, but only add symbols if\r\n            // this data is not yet processed (\"wait\" for wait index)\r\n            if (wi <= i) {\r\n                // bytes remaining\r\n                var rem = s - i;\r\n                if ((lc_1 > 7000 || li > 24576) && rem > 423) {\r\n                    pos = wblk(dat, w, 0, syms, lf, df, eb, li, bs, i - bs, pos);\r\n                    li = lc_1 = eb = 0, bs = i;\r\n                    for (var j = 0; j < 286; ++j)\r\n                        lf[j] = 0;\r\n                    for (var j = 0; j < 30; ++j)\r\n                        df[j] = 0;\r\n                }\r\n                //  len    dist   chain\r\n                var l = 2, d = 0, ch_1 = c, dif = (imod - pimod) & 32767;\r\n                if (rem > 2 && hv == hsh(i - dif)) {\r\n                    var maxn = Math.min(n, rem) - 1;\r\n                    var maxd = Math.min(32767, i);\r\n                    // max possible length\r\n                    // not capped at dif because decompressors implement \"rolling\" index population\r\n                    var ml = Math.min(258, rem);\r\n                    while (dif <= maxd && --ch_1 && imod != pimod) {\r\n                        if (dat[i + l] == dat[i + l - dif]) {\r\n                            var nl = 0;\r\n                            for (; nl < ml && dat[i + nl] == dat[i + nl - dif]; ++nl)\r\n                                ;\r\n                            if (nl > l) {\r\n                                l = nl, d = dif;\r\n                                // break out early when we reach \"nice\" (we are satisfied enough)\r\n                                if (nl > maxn)\r\n                                    break;\r\n                                // now, find the rarest 2-byte sequence within this\r\n                                // length of literals and search for that instead.\r\n                                // Much faster than just using the start\r\n                                var mmd = Math.min(dif, nl - 2);\r\n                                var md = 0;\r\n                                for (var j = 0; j < mmd; ++j) {\r\n                                    var ti = (i - dif + j + 32768) & 32767;\r\n                                    var pti = prev[ti];\r\n                                    var cd = (ti - pti + 32768) & 32767;\r\n                                    if (cd > md)\r\n                                        md = cd, pimod = ti;\r\n                                }\r\n                            }\r\n                        }\r\n                        // check the previous match\r\n                        imod = pimod, pimod = prev[imod];\r\n                        dif += (imod - pimod + 32768) & 32767;\r\n                    }\r\n                }\r\n                // d will be nonzero only when a match was found\r\n                if (d) {\r\n                    // store both dist and len data in one Uint32\r\n                    // Make sure this is recognized as a len/dist with 28th bit (2^28)\r\n                    syms[li++] = 268435456 | (revfl[l] << 18) | revfd[d];\r\n                    var lin = revfl[l] & 31, din = revfd[d] & 31;\r\n                    eb += fleb[lin] + fdeb[din];\r\n                    ++lf[257 + lin];\r\n                    ++df[din];\r\n                    wi = i + l;\r\n                    ++lc_1;\r\n                }\r\n                else {\r\n                    syms[li++] = dat[i];\r\n                    ++lf[dat[i]];\r\n                }\r\n            }\r\n        }\r\n        pos = wblk(dat, w, lst, syms, lf, df, eb, li, bs, i - bs, pos);\r\n        // this is the easiest way to avoid needing to maintain state\r\n        if (!lst && pos & 7)\r\n            pos = wfblk(w, pos + 1, et);\r\n    }\r\n    return slc(o, 0, pre + shft(pos) + post);\r\n};\r\n// CRC32 table\r\nvar crct = /*#__PURE__*/ (function () {\r\n    var t = new Int32Array(256);\r\n    for (var i = 0; i < 256; ++i) {\r\n        var c = i, k = 9;\r\n        while (--k)\r\n            c = ((c & 1) && -306674912) ^ (c >>> 1);\r\n        t[i] = c;\r\n    }\r\n    return t;\r\n})();\r\n// CRC32\r\nvar crc = function () {\r\n    var c = -1;\r\n    return {\r\n        p: function (d) {\r\n            // closures have awful performance\r\n            var cr = c;\r\n            for (var i = 0; i < d.length; ++i)\r\n                cr = crct[(cr & 255) ^ d[i]] ^ (cr >>> 8);\r\n            c = cr;\r\n        },\r\n        d: function () { return ~c; }\r\n    };\r\n};\r\n// Alder32\r\nvar adler = function () {\r\n    var a = 1, b = 0;\r\n    return {\r\n        p: function (d) {\r\n            // closures have awful performance\r\n            var n = a, m = b;\r\n            var l = d.length | 0;\r\n            for (var i = 0; i != l;) {\r\n                var e = Math.min(i + 2655, l);\r\n                for (; i < e; ++i)\r\n                    m += n += d[i];\r\n                n = (n & 65535) + 15 * (n >> 16), m = (m & 65535) + 15 * (m >> 16);\r\n            }\r\n            a = n, b = m;\r\n        },\r\n        d: function () {\r\n            a %= 65521, b %= 65521;\r\n            return (a & 255) << 24 | (a >>> 8) << 16 | (b & 255) << 8 | (b >>> 8);\r\n        }\r\n    };\r\n};\r\n;\r\n// deflate with opts\r\nvar dopt = function (dat, opt, pre, post, st) {\r\n    return dflt(dat, opt.level == null ? 6 : opt.level, opt.mem == null ? Math.ceil(Math.max(8, Math.min(13, Math.log(dat.length))) * 1.5) : (12 + opt.mem), pre, post, !st);\r\n};\r\n// Walmart object spread\r\nvar mrg = function (a, b) {\r\n    var o = {};\r\n    for (var k in a)\r\n        o[k] = a[k];\r\n    for (var k in b)\r\n        o[k] = b[k];\r\n    return o;\r\n};\r\n// worker clone\r\n// This is possibly the craziest part of the entire codebase, despite how simple it may seem.\r\n// The only parameter to this function is a closure that returns an array of variables outside of the function scope.\r\n// We're going to try to figure out the variable names used in the closure as strings because that is crucial for workerization.\r\n// We will return an object mapping of true variable name to value (basically, the current scope as a JS object).\r\n// The reason we can't just use the original variable names is minifiers mangling the toplevel scope.\r\n// This took me three weeks to figure out how to do.\r\nvar wcln = function (fn, fnStr, td) {\r\n    var dt = fn();\r\n    var st = fn.toString();\r\n    var ks = st.slice(st.indexOf('[') + 1, st.lastIndexOf(']')).replace(/\\s+/g, '').split(',');\r\n    for (var i = 0; i < dt.length; ++i) {\r\n        var v = dt[i], k = ks[i];\r\n        if (typeof v == 'function') {\r\n            fnStr += ';' + k + '=';\r\n            var st_1 = v.toString();\r\n            if (v.prototype) {\r\n                // for global objects\r\n                if (st_1.indexOf('[native code]') != -1) {\r\n                    var spInd = st_1.indexOf(' ', 8) + 1;\r\n                    fnStr += st_1.slice(spInd, st_1.indexOf('(', spInd));\r\n                }\r\n                else {\r\n                    fnStr += st_1;\r\n                    for (var t in v.prototype)\r\n                        fnStr += ';' + k + '.prototype.' + t + '=' + v.prototype[t].toString();\r\n                }\r\n            }\r\n            else\r\n                fnStr += st_1;\r\n        }\r\n        else\r\n            td[k] = v;\r\n    }\r\n    return [fnStr, td];\r\n};\r\nvar ch = [];\r\n// clone bufs\r\nvar cbfs = function (v) {\r\n    var tl = [];\r\n    for (var k in v) {\r\n        if (v[k].buffer) {\r\n            tl.push((v[k] = new v[k].constructor(v[k])).buffer);\r\n        }\r\n    }\r\n    return tl;\r\n};\r\n// use a worker to execute code\r\nvar wrkr = function (fns, init, id, cb) {\r\n    var _a;\r\n    if (!ch[id]) {\r\n        var fnStr = '', td_1 = {}, m = fns.length - 1;\r\n        for (var i = 0; i < m; ++i)\r\n            _a = wcln(fns[i], fnStr, td_1), fnStr = _a[0], td_1 = _a[1];\r\n        ch[id] = wcln(fns[m], fnStr, td_1);\r\n    }\r\n    var td = mrg({}, ch[id][1]);\r\n    return node_worker_1[\"default\"](ch[id][0] + ';onmessage=function(e){for(var k in e.data)self[k]=e.data[k];onmessage=' + init.toString() + '}', id, td, cbfs(td), cb);\r\n};\r\n// base async inflate fn\r\nvar bInflt = function () { return [u8, u16, u32, fleb, fdeb, clim, fl, fd, flrm, fdrm, rev, ec, hMap, max, bits, bits16, shft, slc, err, inflt, inflateSync, pbf, gu8]; };\r\nvar bDflt = function () { return [u8, u16, u32, fleb, fdeb, clim, revfl, revfd, flm, flt, fdm, fdt, rev, deo, et, hMap, wbits, wbits16, hTree, ln, lc, clen, wfblk, wblk, shft, slc, dflt, dopt, deflateSync, pbf]; };\r\n// gzip extra\r\nvar gze = function () { return [gzh, gzhl, wbytes, crc, crct]; };\r\n// gunzip extra\r\nvar guze = function () { return [gzs, gzl]; };\r\n// zlib extra\r\nvar zle = function () { return [zlh, wbytes, adler]; };\r\n// unzlib extra\r\nvar zule = function () { return [zlv]; };\r\n// post buf\r\nvar pbf = function (msg) { return postMessage(msg, [msg.buffer]); };\r\n// get u8\r\nvar gu8 = function (o) { return o && o.size && new u8(o.size); };\r\n// async helper\r\nvar cbify = function (dat, opts, fns, init, id, cb) {\r\n    var w = wrkr(fns, init, id, function (err, dat) {\r\n        w.terminate();\r\n        cb(err, dat);\r\n    });\r\n    w.postMessage([dat, opts], opts.consume ? [dat.buffer] : []);\r\n    return function () { w.terminate(); };\r\n};\r\n// auto stream\r\nvar astrm = function (strm) {\r\n    strm.ondata = function (dat, final) { return postMessage([dat, final], [dat.buffer]); };\r\n    return function (ev) { return strm.push(ev.data[0], ev.data[1]); };\r\n};\r\n// async stream attach\r\nvar astrmify = function (fns, strm, opts, init, id) {\r\n    var t;\r\n    var w = wrkr(fns, init, id, function (err, dat) {\r\n        if (err)\r\n            w.terminate(), strm.ondata.call(strm, err);\r\n        else {\r\n            if (dat[1])\r\n                w.terminate();\r\n            strm.ondata.call(strm, err, dat[0], dat[1]);\r\n        }\r\n    });\r\n    w.postMessage(opts);\r\n    strm.push = function (d, f) {\r\n        if (!strm.ondata)\r\n            err(5);\r\n        if (t)\r\n            strm.ondata(err(4, 0, 1), null, !!f);\r\n        w.postMessage([d, t = f], [d.buffer]);\r\n    };\r\n    strm.terminate = function () { w.terminate(); };\r\n};\r\n// read 2 bytes\r\nvar b2 = function (d, b) { return d[b] | (d[b + 1] << 8); };\r\n// read 4 bytes\r\nvar b4 = function (d, b) { return (d[b] | (d[b + 1] << 8) | (d[b + 2] << 16) | (d[b + 3] << 24)) >>> 0; };\r\nvar b8 = function (d, b) { return b4(d, b) + (b4(d, b + 4) * 4294967296); };\r\n// write bytes\r\nvar wbytes = function (d, b, v) {\r\n    for (; v; ++b)\r\n        d[b] = v, v >>>= 8;\r\n};\r\n// gzip header\r\nvar gzh = function (c, o) {\r\n    var fn = o.filename;\r\n    c[0] = 31, c[1] = 139, c[2] = 8, c[8] = o.level < 2 ? 4 : o.level == 9 ? 2 : 0, c[9] = 3; // assume Unix\r\n    if (o.mtime != 0)\r\n        wbytes(c, 4, Math.floor(new Date(o.mtime || Date.now()) / 1000));\r\n    if (fn) {\r\n        c[3] = 8;\r\n        for (var i = 0; i <= fn.length; ++i)\r\n            c[i + 10] = fn.charCodeAt(i);\r\n    }\r\n};\r\n// gzip footer: -8 to -4 = CRC, -4 to -0 is length\r\n// gzip start\r\nvar gzs = function (d) {\r\n    if (d[0] != 31 || d[1] != 139 || d[2] != 8)\r\n        err(6, 'invalid gzip data');\r\n    var flg = d[3];\r\n    var st = 10;\r\n    if (flg & 4)\r\n        st += d[10] | (d[11] << 8) + 2;\r\n    for (var zs = (flg >> 3 & 1) + (flg >> 4 & 1); zs > 0; zs -= !d[st++])\r\n        ;\r\n    return st + (flg & 2);\r\n};\r\n// gzip length\r\nvar gzl = function (d) {\r\n    var l = d.length;\r\n    return ((d[l - 4] | d[l - 3] << 8 | d[l - 2] << 16) | (d[l - 1] << 24)) >>> 0;\r\n};\r\n// gzip header length\r\nvar gzhl = function (o) { return 10 + ((o.filename && (o.filename.length + 1)) || 0); };\r\n// zlib header\r\nvar zlh = function (c, o) {\r\n    var lv = o.level, fl = lv == 0 ? 0 : lv < 6 ? 1 : lv == 9 ? 3 : 2;\r\n    c[0] = 120, c[1] = (fl << 6) | (fl ? (32 - 2 * fl) : 1);\r\n};\r\n// zlib valid\r\nvar zlv = function (d) {\r\n    if ((d[0] & 15) != 8 || (d[0] >>> 4) > 7 || ((d[0] << 8 | d[1]) % 31))\r\n        err(6, 'invalid zlib data');\r\n    if (d[1] & 32)\r\n        err(6, 'invalid zlib data: preset dictionaries not supported');\r\n};\r\nfunction AsyncCmpStrm(opts, cb) {\r\n    if (!cb && typeof opts == 'function')\r\n        cb = opts, opts = {};\r\n    this.ondata = cb;\r\n    return opts;\r\n}\r\n// zlib footer: -4 to -0 is Adler32\r\n/**\r\n * Streaming DEFLATE compression\r\n */\r\nvar Deflate = /*#__PURE__*/ (function () {\r\n    function Deflate(opts, cb) {\r\n        if (!cb && typeof opts == 'function')\r\n            cb = opts, opts = {};\r\n        this.ondata = cb;\r\n        this.o = opts || {};\r\n    }\r\n    Deflate.prototype.p = function (c, f) {\r\n        this.ondata(dopt(c, this.o, 0, 0, !f), f);\r\n    };\r\n    /**\r\n     * Pushes a chunk to be deflated\r\n     * @param chunk The chunk to push\r\n     * @param final Whether this is the last chunk\r\n     */\r\n    Deflate.prototype.push = function (chunk, final) {\r\n        if (!this.ondata)\r\n            err(5);\r\n        if (this.d)\r\n            err(4);\r\n        this.d = final;\r\n        this.p(chunk, final || false);\r\n    };\r\n    return Deflate;\r\n}());\r\nexports.Deflate = Deflate;\r\n/**\r\n * Asynchronous streaming DEFLATE compression\r\n */\r\nvar AsyncDeflate = /*#__PURE__*/ (function () {\r\n    function AsyncDeflate(opts, cb) {\r\n        astrmify([\r\n            bDflt,\r\n            function () { return [astrm, Deflate]; }\r\n        ], this, AsyncCmpStrm.call(this, opts, cb), function (ev) {\r\n            var strm = new Deflate(ev.data);\r\n            onmessage = astrm(strm);\r\n        }, 6);\r\n    }\r\n    return AsyncDeflate;\r\n}());\r\nexports.AsyncDeflate = AsyncDeflate;\r\nfunction deflate(data, opts, cb) {\r\n    if (!cb)\r\n        cb = opts, opts = {};\r\n    if (typeof cb != 'function')\r\n        err(7);\r\n    return cbify(data, opts, [\r\n        bDflt,\r\n    ], function (ev) { return pbf(deflateSync(ev.data[0], ev.data[1])); }, 0, cb);\r\n}\r\nexports.deflate = deflate;\r\n/**\r\n * Compresses data with DEFLATE without any wrapper\r\n * @param data The data to compress\r\n * @param opts The compression options\r\n * @returns The deflated version of the data\r\n */\r\nfunction deflateSync(data, opts) {\r\n    return dopt(data, opts || {}, 0, 0);\r\n}\r\nexports.deflateSync = deflateSync;\r\n/**\r\n * Streaming DEFLATE decompression\r\n */\r\nvar Inflate = /*#__PURE__*/ (function () {\r\n    /**\r\n     * Creates an inflation stream\r\n     * @param cb The callback to call whenever data is inflated\r\n     */\r\n    function Inflate(cb) {\r\n        this.s = {};\r\n        this.p = new u8(0);\r\n        this.ondata = cb;\r\n    }\r\n    Inflate.prototype.e = function (c) {\r\n        if (!this.ondata)\r\n            err(5);\r\n        if (this.d)\r\n            err(4);\r\n        var l = this.p.length;\r\n        var n = new u8(l + c.length);\r\n        n.set(this.p), n.set(c, l), this.p = n;\r\n    };\r\n    Inflate.prototype.c = function (final) {\r\n        this.d = this.s.i = final || false;\r\n        var bts = this.s.b;\r\n        var dt = inflt(this.p, this.o, this.s);\r\n        this.ondata(slc(dt, bts, this.s.b), this.d);\r\n        this.o = slc(dt, this.s.b - 32768), this.s.b = this.o.length;\r\n        this.p = slc(this.p, (this.s.p / 8) | 0), this.s.p &= 7;\r\n    };\r\n    /**\r\n     * Pushes a chunk to be inflated\r\n     * @param chunk The chunk to push\r\n     * @param final Whether this is the final chunk\r\n     */\r\n    Inflate.prototype.push = function (chunk, final) {\r\n        this.e(chunk), this.c(final);\r\n    };\r\n    return Inflate;\r\n}());\r\nexports.Inflate = Inflate;\r\n/**\r\n * Asynchronous streaming DEFLATE decompression\r\n */\r\nvar AsyncInflate = /*#__PURE__*/ (function () {\r\n    /**\r\n     * Creates an asynchronous inflation stream\r\n     * @param cb The callback to call whenever data is deflated\r\n     */\r\n    function AsyncInflate(cb) {\r\n        this.ondata = cb;\r\n        astrmify([\r\n            bInflt,\r\n            function () { return [astrm, Inflate]; }\r\n        ], this, 0, function () {\r\n            var strm = new Inflate();\r\n            onmessage = astrm(strm);\r\n        }, 7);\r\n    }\r\n    return AsyncInflate;\r\n}());\r\nexports.AsyncInflate = AsyncInflate;\r\nfunction inflate(data, opts, cb) {\r\n    if (!cb)\r\n        cb = opts, opts = {};\r\n    if (typeof cb != 'function')\r\n        err(7);\r\n    return cbify(data, opts, [\r\n        bInflt\r\n    ], function (ev) { return pbf(inflateSync(ev.data[0], gu8(ev.data[1]))); }, 1, cb);\r\n}\r\nexports.inflate = inflate;\r\n/**\r\n * Expands DEFLATE data with no wrapper\r\n * @param data The data to decompress\r\n * @param out Where to write the data. Saves memory if you know the decompressed size and provide an output buffer of that length.\r\n * @returns The decompressed version of the data\r\n */\r\nfunction inflateSync(data, out) {\r\n    return inflt(data, out);\r\n}\r\nexports.inflateSync = inflateSync;\r\n// before you yell at me for not just using extends, my reason is that TS inheritance is hard to workerize.\r\n/**\r\n * Streaming GZIP compression\r\n */\r\nvar Gzip = /*#__PURE__*/ (function () {\r\n    function Gzip(opts, cb) {\r\n        this.c = crc();\r\n        this.l = 0;\r\n        this.v = 1;\r\n        Deflate.call(this, opts, cb);\r\n    }\r\n    /**\r\n     * Pushes a chunk to be GZIPped\r\n     * @param chunk The chunk to push\r\n     * @param final Whether this is the last chunk\r\n     */\r\n    Gzip.prototype.push = function (chunk, final) {\r\n        Deflate.prototype.push.call(this, chunk, final);\r\n    };\r\n    Gzip.prototype.p = function (c, f) {\r\n        this.c.p(c);\r\n        this.l += c.length;\r\n        var raw = dopt(c, this.o, this.v && gzhl(this.o), f && 8, !f);\r\n        if (this.v)\r\n            gzh(raw, this.o), this.v = 0;\r\n        if (f)\r\n            wbytes(raw, raw.length - 8, this.c.d()), wbytes(raw, raw.length - 4, this.l);\r\n        this.ondata(raw, f);\r\n    };\r\n    return Gzip;\r\n}());\r\nexports.Gzip = Gzip;\r\nexports.Compress = Gzip;\r\n/**\r\n * Asynchronous streaming GZIP compression\r\n */\r\nvar AsyncGzip = /*#__PURE__*/ (function () {\r\n    function AsyncGzip(opts, cb) {\r\n        astrmify([\r\n            bDflt,\r\n            gze,\r\n            function () { return [astrm, Deflate, Gzip]; }\r\n        ], this, AsyncCmpStrm.call(this, opts, cb), function (ev) {\r\n            var strm = new Gzip(ev.data);\r\n            onmessage = astrm(strm);\r\n        }, 8);\r\n    }\r\n    return AsyncGzip;\r\n}());\r\nexports.AsyncGzip = AsyncGzip;\r\nexports.AsyncCompress = AsyncGzip;\r\nfunction gzip(data, opts, cb) {\r\n    if (!cb)\r\n        cb = opts, opts = {};\r\n    if (typeof cb != 'function')\r\n        err(7);\r\n    return cbify(data, opts, [\r\n        bDflt,\r\n        gze,\r\n        function () { return [gzipSync]; }\r\n    ], function (ev) { return pbf(gzipSync(ev.data[0], ev.data[1])); }, 2, cb);\r\n}\r\nexports.gzip = gzip;\r\nexports.compress = gzip;\r\n/**\r\n * Compresses data with GZIP\r\n * @param data The data to compress\r\n * @param opts The compression options\r\n * @returns The gzipped version of the data\r\n */\r\nfunction gzipSync(data, opts) {\r\n    if (!opts)\r\n        opts = {};\r\n    var c = crc(), l = data.length;\r\n    c.p(data);\r\n    var d = dopt(data, opts, gzhl(opts), 8), s = d.length;\r\n    return gzh(d, opts), wbytes(d, s - 8, c.d()), wbytes(d, s - 4, l), d;\r\n}\r\nexports.gzipSync = gzipSync;\r\nexports.compressSync = gzipSync;\r\n/**\r\n * Streaming GZIP decompression\r\n */\r\nvar Gunzip = /*#__PURE__*/ (function () {\r\n    /**\r\n     * Creates a GUNZIP stream\r\n     * @param cb The callback to call whenever data is inflated\r\n     */\r\n    function Gunzip(cb) {\r\n        this.v = 1;\r\n        Inflate.call(this, cb);\r\n    }\r\n    /**\r\n     * Pushes a chunk to be GUNZIPped\r\n     * @param chunk The chunk to push\r\n     * @param final Whether this is the last chunk\r\n     */\r\n    Gunzip.prototype.push = function (chunk, final) {\r\n        Inflate.prototype.e.call(this, chunk);\r\n        if (this.v) {\r\n            var s = this.p.length > 3 ? gzs(this.p) : 4;\r\n            if (s >= this.p.length && !final)\r\n                return;\r\n            this.p = this.p.subarray(s), this.v = 0;\r\n        }\r\n        if (final) {\r\n            if (this.p.length < 8)\r\n                err(6, 'invalid gzip data');\r\n            this.p = this.p.subarray(0, -8);\r\n        }\r\n        // necessary to prevent TS from using the closure value\r\n        // This allows for workerization to function correctly\r\n        Inflate.prototype.c.call(this, final);\r\n    };\r\n    return Gunzip;\r\n}());\r\nexports.Gunzip = Gunzip;\r\n/**\r\n * Asynchronous streaming GZIP decompression\r\n */\r\nvar AsyncGunzip = /*#__PURE__*/ (function () {\r\n    /**\r\n     * Creates an asynchronous GUNZIP stream\r\n     * @param cb The callback to call whenever data is deflated\r\n     */\r\n    function AsyncGunzip(cb) {\r\n        this.ondata = cb;\r\n        astrmify([\r\n            bInflt,\r\n            guze,\r\n            function () { return [astrm, Inflate, Gunzip]; }\r\n        ], this, 0, function () {\r\n            var strm = new Gunzip();\r\n            onmessage = astrm(strm);\r\n        }, 9);\r\n    }\r\n    return AsyncGunzip;\r\n}());\r\nexports.AsyncGunzip = AsyncGunzip;\r\nfunction gunzip(data, opts, cb) {\r\n    if (!cb)\r\n        cb = opts, opts = {};\r\n    if (typeof cb != 'function')\r\n        err(7);\r\n    return cbify(data, opts, [\r\n        bInflt,\r\n        guze,\r\n        function () { return [gunzipSync]; }\r\n    ], function (ev) { return pbf(gunzipSync(ev.data[0])); }, 3, cb);\r\n}\r\nexports.gunzip = gunzip;\r\n/**\r\n * Expands GZIP data\r\n * @param data The data to decompress\r\n * @param out Where to write the data. GZIP already encodes the output size, so providing this doesn't save memory.\r\n * @returns The decompressed version of the data\r\n */\r\nfunction gunzipSync(data, out) {\r\n    return inflt(data.subarray(gzs(data), -8), out || new u8(gzl(data)));\r\n}\r\nexports.gunzipSync = gunzipSync;\r\n/**\r\n * Streaming Zlib compression\r\n */\r\nvar Zlib = /*#__PURE__*/ (function () {\r\n    function Zlib(opts, cb) {\r\n        this.c = adler();\r\n        this.v = 1;\r\n        Deflate.call(this, opts, cb);\r\n    }\r\n    /**\r\n     * Pushes a chunk to be zlibbed\r\n     * @param chunk The chunk to push\r\n     * @param final Whether this is the last chunk\r\n     */\r\n    Zlib.prototype.push = function (chunk, final) {\r\n        Deflate.prototype.push.call(this, chunk, final);\r\n    };\r\n    Zlib.prototype.p = function (c, f) {\r\n        this.c.p(c);\r\n        var raw = dopt(c, this.o, this.v && 2, f && 4, !f);\r\n        if (this.v)\r\n            zlh(raw, this.o), this.v = 0;\r\n        if (f)\r\n            wbytes(raw, raw.length - 4, this.c.d());\r\n        this.ondata(raw, f);\r\n    };\r\n    return Zlib;\r\n}());\r\nexports.Zlib = Zlib;\r\n/**\r\n * Asynchronous streaming Zlib compression\r\n */\r\nvar AsyncZlib = /*#__PURE__*/ (function () {\r\n    function AsyncZlib(opts, cb) {\r\n        astrmify([\r\n            bDflt,\r\n            zle,\r\n            function () { return [astrm, Deflate, Zlib]; }\r\n        ], this, AsyncCmpStrm.call(this, opts, cb), function (ev) {\r\n            var strm = new Zlib(ev.data);\r\n            onmessage = astrm(strm);\r\n        }, 10);\r\n    }\r\n    return AsyncZlib;\r\n}());\r\nexports.AsyncZlib = AsyncZlib;\r\nfunction zlib(data, opts, cb) {\r\n    if (!cb)\r\n        cb = opts, opts = {};\r\n    if (typeof cb != 'function')\r\n        err(7);\r\n    return cbify(data, opts, [\r\n        bDflt,\r\n        zle,\r\n        function () { return [zlibSync]; }\r\n    ], function (ev) { return pbf(zlibSync(ev.data[0], ev.data[1])); }, 4, cb);\r\n}\r\nexports.zlib = zlib;\r\n/**\r\n * Compress data with Zlib\r\n * @param data The data to compress\r\n * @param opts The compression options\r\n * @returns The zlib-compressed version of the data\r\n */\r\nfunction zlibSync(data, opts) {\r\n    if (!opts)\r\n        opts = {};\r\n    var a = adler();\r\n    a.p(data);\r\n    var d = dopt(data, opts, 2, 4);\r\n    return zlh(d, opts), wbytes(d, d.length - 4, a.d()), d;\r\n}\r\nexports.zlibSync = zlibSync;\r\n/**\r\n * Streaming Zlib decompression\r\n */\r\nvar Unzlib = /*#__PURE__*/ (function () {\r\n    /**\r\n     * Creates a Zlib decompression stream\r\n     * @param cb The callback to call whenever data is inflated\r\n     */\r\n    function Unzlib(cb) {\r\n        this.v = 1;\r\n        Inflate.call(this, cb);\r\n    }\r\n    /**\r\n     * Pushes a chunk to be unzlibbed\r\n     * @param chunk The chunk to push\r\n     * @param final Whether this is the last chunk\r\n     */\r\n    Unzlib.prototype.push = function (chunk, final) {\r\n        Inflate.prototype.e.call(this, chunk);\r\n        if (this.v) {\r\n            if (this.p.length < 2 && !final)\r\n                return;\r\n            this.p = this.p.subarray(2), this.v = 0;\r\n        }\r\n        if (final) {\r\n            if (this.p.length < 4)\r\n                err(6, 'invalid zlib data');\r\n            this.p = this.p.subarray(0, -4);\r\n        }\r\n        // necessary to prevent TS from using the closure value\r\n        // This allows for workerization to function correctly\r\n        Inflate.prototype.c.call(this, final);\r\n    };\r\n    return Unzlib;\r\n}());\r\nexports.Unzlib = Unzlib;\r\n/**\r\n * Asynchronous streaming Zlib decompression\r\n */\r\nvar AsyncUnzlib = /*#__PURE__*/ (function () {\r\n    /**\r\n     * Creates an asynchronous Zlib decompression stream\r\n     * @param cb The callback to call whenever data is deflated\r\n     */\r\n    function AsyncUnzlib(cb) {\r\n        this.ondata = cb;\r\n        astrmify([\r\n            bInflt,\r\n            zule,\r\n            function () { return [astrm, Inflate, Unzlib]; }\r\n        ], this, 0, function () {\r\n            var strm = new Unzlib();\r\n            onmessage = astrm(strm);\r\n        }, 11);\r\n    }\r\n    return AsyncUnzlib;\r\n}());\r\nexports.AsyncUnzlib = AsyncUnzlib;\r\nfunction unzlib(data, opts, cb) {\r\n    if (!cb)\r\n        cb = opts, opts = {};\r\n    if (typeof cb != 'function')\r\n        err(7);\r\n    return cbify(data, opts, [\r\n        bInflt,\r\n        zule,\r\n        function () { return [unzlibSync]; }\r\n    ], function (ev) { return pbf(unzlibSync(ev.data[0], gu8(ev.data[1]))); }, 5, cb);\r\n}\r\nexports.unzlib = unzlib;\r\n/**\r\n * Expands Zlib data\r\n * @param data The data to decompress\r\n * @param out Where to write the data. Saves memory if you know the decompressed size and provide an output buffer of that length.\r\n * @returns The decompressed version of the data\r\n */\r\nfunction unzlibSync(data, out) {\r\n    return inflt((zlv(data), data.subarray(2, -4)), out);\r\n}\r\nexports.unzlibSync = unzlibSync;\r\n/**\r\n * Streaming GZIP, Zlib, or raw DEFLATE decompression\r\n */\r\nvar Decompress = /*#__PURE__*/ (function () {\r\n    /**\r\n     * Creates a decompression stream\r\n     * @param cb The callback to call whenever data is decompressed\r\n     */\r\n    function Decompress(cb) {\r\n        this.G = Gunzip;\r\n        this.I = Inflate;\r\n        this.Z = Unzlib;\r\n        this.ondata = cb;\r\n    }\r\n    /**\r\n     * Pushes a chunk to be decompressed\r\n     * @param chunk The chunk to push\r\n     * @param final Whether this is the last chunk\r\n     */\r\n    Decompress.prototype.push = function (chunk, final) {\r\n        if (!this.ondata)\r\n            err(5);\r\n        if (!this.s) {\r\n            if (this.p && this.p.length) {\r\n                var n = new u8(this.p.length + chunk.length);\r\n                n.set(this.p), n.set(chunk, this.p.length);\r\n            }\r\n            else\r\n                this.p = chunk;\r\n            if (this.p.length > 2) {\r\n                var _this_1 = this;\r\n                var cb = function () { _this_1.ondata.apply(_this_1, arguments); };\r\n                this.s = (this.p[0] == 31 && this.p[1] == 139 && this.p[2] == 8)\r\n                    ? new this.G(cb)\r\n                    : ((this.p[0] & 15) != 8 || (this.p[0] >> 4) > 7 || ((this.p[0] << 8 | this.p[1]) % 31))\r\n                        ? new this.I(cb)\r\n                        : new this.Z(cb);\r\n                this.s.push(this.p, final);\r\n                this.p = null;\r\n            }\r\n        }\r\n        else\r\n            this.s.push(chunk, final);\r\n    };\r\n    return Decompress;\r\n}());\r\nexports.Decompress = Decompress;\r\n/**\r\n * Asynchronous streaming GZIP, Zlib, or raw DEFLATE decompression\r\n */\r\nvar AsyncDecompress = /*#__PURE__*/ (function () {\r\n    /**\r\n   * Creates an asynchronous decompression stream\r\n   * @param cb The callback to call whenever data is decompressed\r\n   */\r\n    function AsyncDecompress(cb) {\r\n        this.G = AsyncGunzip;\r\n        this.I = AsyncInflate;\r\n        this.Z = AsyncUnzlib;\r\n        this.ondata = cb;\r\n    }\r\n    /**\r\n     * Pushes a chunk to be decompressed\r\n     * @param chunk The chunk to push\r\n     * @param final Whether this is the last chunk\r\n     */\r\n    AsyncDecompress.prototype.push = function (chunk, final) {\r\n        Decompress.prototype.push.call(this, chunk, final);\r\n    };\r\n    return AsyncDecompress;\r\n}());\r\nexports.AsyncDecompress = AsyncDecompress;\r\nfunction decompress(data, opts, cb) {\r\n    if (!cb)\r\n        cb = opts, opts = {};\r\n    if (typeof cb != 'function')\r\n        err(7);\r\n    return (data[0] == 31 && data[1] == 139 && data[2] == 8)\r\n        ? gunzip(data, opts, cb)\r\n        : ((data[0] & 15) != 8 || (data[0] >> 4) > 7 || ((data[0] << 8 | data[1]) % 31))\r\n            ? inflate(data, opts, cb)\r\n            : unzlib(data, opts, cb);\r\n}\r\nexports.decompress = decompress;\r\n/**\r\n * Expands compressed GZIP, Zlib, or raw DEFLATE data, automatically detecting the format\r\n * @param data The data to decompress\r\n * @param out Where to write the data. Saves memory if you know the decompressed size and provide an output buffer of that length.\r\n * @returns The decompressed version of the data\r\n */\r\nfunction decompressSync(data, out) {\r\n    return (data[0] == 31 && data[1] == 139 && data[2] == 8)\r\n        ? gunzipSync(data, out)\r\n        : ((data[0] & 15) != 8 || (data[0] >> 4) > 7 || ((data[0] << 8 | data[1]) % 31))\r\n            ? inflateSync(data, out)\r\n            : unzlibSync(data, out);\r\n}\r\nexports.decompressSync = decompressSync;\r\n// flatten a directory structure\r\nvar fltn = function (d, p, t, o) {\r\n    for (var k in d) {\r\n        var val = d[k], n = p + k, op = o;\r\n        if (Array.isArray(val))\r\n            op = mrg(o, val[1]), val = val[0];\r\n        if (val instanceof u8)\r\n            t[n] = [val, op];\r\n        else {\r\n            t[n += '/'] = [new u8(0), op];\r\n            fltn(val, n, t, o);\r\n        }\r\n    }\r\n};\r\n// text encoder\r\nvar te = typeof TextEncoder != 'undefined' && /*#__PURE__*/ new TextEncoder();\r\n// text decoder\r\nvar td = typeof TextDecoder != 'undefined' && /*#__PURE__*/ new TextDecoder();\r\n// text decoder stream\r\nvar tds = 0;\r\ntry {\r\n    td.decode(et, { stream: true });\r\n    tds = 1;\r\n}\r\ncatch (e) { }\r\n// decode UTF8\r\nvar dutf8 = function (d) {\r\n    for (var r = '', i = 0;;) {\r\n        var c = d[i++];\r\n        var eb = (c > 127) + (c > 223) + (c > 239);\r\n        if (i + eb > d.length)\r\n            return [r, slc(d, i - 1)];\r\n        if (!eb)\r\n            r += String.fromCharCode(c);\r\n        else if (eb == 3) {\r\n            c = ((c & 15) << 18 | (d[i++] & 63) << 12 | (d[i++] & 63) << 6 | (d[i++] & 63)) - 65536,\r\n                r += String.fromCharCode(55296 | (c >> 10), 56320 | (c & 1023));\r\n        }\r\n        else if (eb & 1)\r\n            r += String.fromCharCode((c & 31) << 6 | (d[i++] & 63));\r\n        else\r\n            r += String.fromCharCode((c & 15) << 12 | (d[i++] & 63) << 6 | (d[i++] & 63));\r\n    }\r\n};\r\n/**\r\n * Streaming UTF-8 decoding\r\n */\r\nvar DecodeUTF8 = /*#__PURE__*/ (function () {\r\n    /**\r\n     * Creates a UTF-8 decoding stream\r\n     * @param cb The callback to call whenever data is decoded\r\n     */\r\n    function DecodeUTF8(cb) {\r\n        this.ondata = cb;\r\n        if (tds)\r\n            this.t = new TextDecoder();\r\n        else\r\n            this.p = et;\r\n    }\r\n    /**\r\n     * Pushes a chunk to be decoded from UTF-8 binary\r\n     * @param chunk The chunk to push\r\n     * @param final Whether this is the last chunk\r\n     */\r\n    DecodeUTF8.prototype.push = function (chunk, final) {\r\n        if (!this.ondata)\r\n            err(5);\r\n        final = !!final;\r\n        if (this.t) {\r\n            this.ondata(this.t.decode(chunk, { stream: true }), final);\r\n            if (final) {\r\n                if (this.t.decode().length)\r\n                    err(8);\r\n                this.t = null;\r\n            }\r\n            return;\r\n        }\r\n        if (!this.p)\r\n            err(4);\r\n        var dat = new u8(this.p.length + chunk.length);\r\n        dat.set(this.p);\r\n        dat.set(chunk, this.p.length);\r\n        var _a = dutf8(dat), ch = _a[0], np = _a[1];\r\n        if (final) {\r\n            if (np.length)\r\n                err(8);\r\n            this.p = null;\r\n        }\r\n        else\r\n            this.p = np;\r\n        this.ondata(ch, final);\r\n    };\r\n    return DecodeUTF8;\r\n}());\r\nexports.DecodeUTF8 = DecodeUTF8;\r\n/**\r\n * Streaming UTF-8 encoding\r\n */\r\nvar EncodeUTF8 = /*#__PURE__*/ (function () {\r\n    /**\r\n     * Creates a UTF-8 decoding stream\r\n     * @param cb The callback to call whenever data is encoded\r\n     */\r\n    function EncodeUTF8(cb) {\r\n        this.ondata = cb;\r\n    }\r\n    /**\r\n     * Pushes a chunk to be encoded to UTF-8\r\n     * @param chunk The string data to push\r\n     * @param final Whether this is the last chunk\r\n     */\r\n    EncodeUTF8.prototype.push = function (chunk, final) {\r\n        if (!this.ondata)\r\n            err(5);\r\n        if (this.d)\r\n            err(4);\r\n        this.ondata(strToU8(chunk), this.d = final || false);\r\n    };\r\n    return EncodeUTF8;\r\n}());\r\nexports.EncodeUTF8 = EncodeUTF8;\r\n/**\r\n * Converts a string into a Uint8Array for use with compression/decompression methods\r\n * @param str The string to encode\r\n * @param latin1 Whether or not to interpret the data as Latin-1. This should\r\n *               not need to be true unless decoding a binary string.\r\n * @returns The string encoded in UTF-8/Latin-1 binary\r\n */\r\nfunction strToU8(str, latin1) {\r\n    if (latin1) {\r\n        var ar_1 = new u8(str.length);\r\n        for (var i = 0; i < str.length; ++i)\r\n            ar_1[i] = str.charCodeAt(i);\r\n        return ar_1;\r\n    }\r\n    if (te)\r\n        return te.encode(str);\r\n    var l = str.length;\r\n    var ar = new u8(str.length + (str.length >> 1));\r\n    var ai = 0;\r\n    var w = function (v) { ar[ai++] = v; };\r\n    for (var i = 0; i < l; ++i) {\r\n        if (ai + 5 > ar.length) {\r\n            var n = new u8(ai + 8 + ((l - i) << 1));\r\n            n.set(ar);\r\n            ar = n;\r\n        }\r\n        var c = str.charCodeAt(i);\r\n        if (c < 128 || latin1)\r\n            w(c);\r\n        else if (c < 2048)\r\n            w(192 | (c >> 6)), w(128 | (c & 63));\r\n        else if (c > 55295 && c < 57344)\r\n            c = 65536 + (c & 1023 << 10) | (str.charCodeAt(++i) & 1023),\r\n                w(240 | (c >> 18)), w(128 | ((c >> 12) & 63)), w(128 | ((c >> 6) & 63)), w(128 | (c & 63));\r\n        else\r\n            w(224 | (c >> 12)), w(128 | ((c >> 6) & 63)), w(128 | (c & 63));\r\n    }\r\n    return slc(ar, 0, ai);\r\n}\r\nexports.strToU8 = strToU8;\r\n/**\r\n * Converts a Uint8Array to a string\r\n * @param dat The data to decode to string\r\n * @param latin1 Whether or not to interpret the data as Latin-1. This should\r\n *               not need to be true unless encoding to binary string.\r\n * @returns The original UTF-8/Latin-1 string\r\n */\r\nfunction strFromU8(dat, latin1) {\r\n    if (latin1) {\r\n        var r = '';\r\n        for (var i = 0; i < dat.length; i += 16384)\r\n            r += String.fromCharCode.apply(null, dat.subarray(i, i + 16384));\r\n        return r;\r\n    }\r\n    else if (td)\r\n        return td.decode(dat);\r\n    else {\r\n        var _a = dutf8(dat), out = _a[0], ext = _a[1];\r\n        if (ext.length)\r\n            err(8);\r\n        return out;\r\n    }\r\n}\r\nexports.strFromU8 = strFromU8;\r\n;\r\n// deflate bit flag\r\nvar dbf = function (l) { return l == 1 ? 3 : l < 6 ? 2 : l == 9 ? 1 : 0; };\r\n// skip local zip header\r\nvar slzh = function (d, b) { return b + 30 + b2(d, b + 26) + b2(d, b + 28); };\r\n// read zip header\r\nvar zh = function (d, b, z) {\r\n    var fnl = b2(d, b + 28), fn = strFromU8(d.subarray(b + 46, b + 46 + fnl), !(b2(d, b + 8) & 2048)), es = b + 46 + fnl, bs = b4(d, b + 20);\r\n    var _a = z && bs == 4294967295 ? z64e(d, es) : [bs, b4(d, b + 24), b4(d, b + 42)], sc = _a[0], su = _a[1], off = _a[2];\r\n    return [b2(d, b + 10), sc, su, fn, es + b2(d, b + 30) + b2(d, b + 32), off];\r\n};\r\n// read zip64 extra field\r\nvar z64e = function (d, b) {\r\n    for (; b2(d, b) != 1; b += 4 + b2(d, b + 2))\r\n        ;\r\n    return [b8(d, b + 12), b8(d, b + 4), b8(d, b + 20)];\r\n};\r\n// extra field length\r\nvar exfl = function (ex) {\r\n    var le = 0;\r\n    if (ex) {\r\n        for (var k in ex) {\r\n            var l = ex[k].length;\r\n            if (l > 65535)\r\n                err(9);\r\n            le += l + 4;\r\n        }\r\n    }\r\n    return le;\r\n};\r\n// write zip header\r\nvar wzh = function (d, b, f, fn, u, c, ce, co) {\r\n    var fl = fn.length, ex = f.extra, col = co && co.length;\r\n    var exl = exfl(ex);\r\n    wbytes(d, b, ce != null ? 0x2014B50 : 0x4034B50), b += 4;\r\n    if (ce != null)\r\n        d[b++] = 20, d[b++] = f.os;\r\n    d[b] = 20, b += 2; // spec compliance? what's that?\r\n    d[b++] = (f.flag << 1) | (c == null && 8), d[b++] = u && 8;\r\n    d[b++] = f.compression & 255, d[b++] = f.compression >> 8;\r\n    var dt = new Date(f.mtime == null ? Date.now() : f.mtime), y = dt.getFullYear() - 1980;\r\n    if (y < 0 || y > 119)\r\n        err(10);\r\n    wbytes(d, b, (y << 25) | ((dt.getMonth() + 1) << 21) | (dt.getDate() << 16) | (dt.getHours() << 11) | (dt.getMinutes() << 5) | (dt.getSeconds() >>> 1)), b += 4;\r\n    if (c != null) {\r\n        wbytes(d, b, f.crc);\r\n        wbytes(d, b + 4, c);\r\n        wbytes(d, b + 8, f.size);\r\n    }\r\n    wbytes(d, b + 12, fl);\r\n    wbytes(d, b + 14, exl), b += 16;\r\n    if (ce != null) {\r\n        wbytes(d, b, col);\r\n        wbytes(d, b + 6, f.attrs);\r\n        wbytes(d, b + 10, ce), b += 14;\r\n    }\r\n    d.set(fn, b);\r\n    b += fl;\r\n    if (exl) {\r\n        for (var k in ex) {\r\n            var exf = ex[k], l = exf.length;\r\n            wbytes(d, b, +k);\r\n            wbytes(d, b + 2, l);\r\n            d.set(exf, b + 4), b += 4 + l;\r\n        }\r\n    }\r\n    if (col)\r\n        d.set(co, b), b += col;\r\n    return b;\r\n};\r\n// write zip footer (end of central directory)\r\nvar wzf = function (o, b, c, d, e) {\r\n    wbytes(o, b, 0x6054B50); // skip disk\r\n    wbytes(o, b + 8, c);\r\n    wbytes(o, b + 10, c);\r\n    wbytes(o, b + 12, d);\r\n    wbytes(o, b + 16, e);\r\n};\r\n/**\r\n * A pass-through stream to keep data uncompressed in a ZIP archive.\r\n */\r\nvar ZipPassThrough = /*#__PURE__*/ (function () {\r\n    /**\r\n     * Creates a pass-through stream that can be added to ZIP archives\r\n     * @param filename The filename to associate with this data stream\r\n     */\r\n    function ZipPassThrough(filename) {\r\n        this.filename = filename;\r\n        this.c = crc();\r\n        this.size = 0;\r\n        this.compression = 0;\r\n    }\r\n    /**\r\n     * Processes a chunk and pushes to the output stream. You can override this\r\n     * method in a subclass for custom behavior, but by default this passes\r\n     * the data through. You must call this.ondata(err, chunk, final) at some\r\n     * point in this method.\r\n     * @param chunk The chunk to process\r\n     * @param final Whether this is the last chunk\r\n     */\r\n    ZipPassThrough.prototype.process = function (chunk, final) {\r\n        this.ondata(null, chunk, final);\r\n    };\r\n    /**\r\n     * Pushes a chunk to be added. If you are subclassing this with a custom\r\n     * compression algorithm, note that you must push data from the source\r\n     * file only, pre-compression.\r\n     * @param chunk The chunk to push\r\n     * @param final Whether this is the last chunk\r\n     */\r\n    ZipPassThrough.prototype.push = function (chunk, final) {\r\n        if (!this.ondata)\r\n            err(5);\r\n        this.c.p(chunk);\r\n        this.size += chunk.length;\r\n        if (final)\r\n            this.crc = this.c.d();\r\n        this.process(chunk, final || false);\r\n    };\r\n    return ZipPassThrough;\r\n}());\r\nexports.ZipPassThrough = ZipPassThrough;\r\n// I don't extend because TypeScript extension adds 1kB of runtime bloat\r\n/**\r\n * Streaming DEFLATE compression for ZIP archives. Prefer using AsyncZipDeflate\r\n * for better performance\r\n */\r\nvar ZipDeflate = /*#__PURE__*/ (function () {\r\n    /**\r\n     * Creates a DEFLATE stream that can be added to ZIP archives\r\n     * @param filename The filename to associate with this data stream\r\n     * @param opts The compression options\r\n     */\r\n    function ZipDeflate(filename, opts) {\r\n        var _this_1 = this;\r\n        if (!opts)\r\n            opts = {};\r\n        ZipPassThrough.call(this, filename);\r\n        this.d = new Deflate(opts, function (dat, final) {\r\n            _this_1.ondata(null, dat, final);\r\n        });\r\n        this.compression = 8;\r\n        this.flag = dbf(opts.level);\r\n    }\r\n    ZipDeflate.prototype.process = function (chunk, final) {\r\n        try {\r\n            this.d.push(chunk, final);\r\n        }\r\n        catch (e) {\r\n            this.ondata(e, null, final);\r\n        }\r\n    };\r\n    /**\r\n     * Pushes a chunk to be deflated\r\n     * @param chunk The chunk to push\r\n     * @param final Whether this is the last chunk\r\n     */\r\n    ZipDeflate.prototype.push = function (chunk, final) {\r\n        ZipPassThrough.prototype.push.call(this, chunk, final);\r\n    };\r\n    return ZipDeflate;\r\n}());\r\nexports.ZipDeflate = ZipDeflate;\r\n/**\r\n * Asynchronous streaming DEFLATE compression for ZIP archives\r\n */\r\nvar AsyncZipDeflate = /*#__PURE__*/ (function () {\r\n    /**\r\n     * Creates a DEFLATE stream that can be added to ZIP archives\r\n     * @param filename The filename to associate with this data stream\r\n     * @param opts The compression options\r\n     */\r\n    function AsyncZipDeflate(filename, opts) {\r\n        var _this_1 = this;\r\n        if (!opts)\r\n            opts = {};\r\n        ZipPassThrough.call(this, filename);\r\n        this.d = new AsyncDeflate(opts, function (err, dat, final) {\r\n            _this_1.ondata(err, dat, final);\r\n        });\r\n        this.compression = 8;\r\n        this.flag = dbf(opts.level);\r\n        this.terminate = this.d.terminate;\r\n    }\r\n    AsyncZipDeflate.prototype.process = function (chunk, final) {\r\n        this.d.push(chunk, final);\r\n    };\r\n    /**\r\n     * Pushes a chunk to be deflated\r\n     * @param chunk The chunk to push\r\n     * @param final Whether this is the last chunk\r\n     */\r\n    AsyncZipDeflate.prototype.push = function (chunk, final) {\r\n        ZipPassThrough.prototype.push.call(this, chunk, final);\r\n    };\r\n    return AsyncZipDeflate;\r\n}());\r\nexports.AsyncZipDeflate = AsyncZipDeflate;\r\n// TODO: Better tree shaking\r\n/**\r\n * A zippable archive to which files can incrementally be added\r\n */\r\nvar Zip = /*#__PURE__*/ (function () {\r\n    /**\r\n     * Creates an empty ZIP archive to which files can be added\r\n     * @param cb The callback to call whenever data for the generated ZIP archive\r\n     *           is available\r\n     */\r\n    function Zip(cb) {\r\n        this.ondata = cb;\r\n        this.u = [];\r\n        this.d = 1;\r\n    }\r\n    /**\r\n     * Adds a file to the ZIP archive\r\n     * @param file The file stream to add\r\n     */\r\n    Zip.prototype.add = function (file) {\r\n        var _this_1 = this;\r\n        if (!this.ondata)\r\n            err(5);\r\n        // finishing or finished\r\n        if (this.d & 2)\r\n            this.ondata(err(4 + (this.d & 1) * 8, 0, 1), null, false);\r\n        else {\r\n            var f = strToU8(file.filename), fl_1 = f.length;\r\n            var com = file.comment, o = com && strToU8(com);\r\n            var u = fl_1 != file.filename.length || (o && (com.length != o.length));\r\n            var hl_1 = fl_1 + exfl(file.extra) + 30;\r\n            if (fl_1 > 65535)\r\n                this.ondata(err(11, 0, 1), null, false);\r\n            var header = new u8(hl_1);\r\n            wzh(header, 0, file, f, u);\r\n            var chks_1 = [header];\r\n            var pAll_1 = function () {\r\n                for (var _i = 0, chks_2 = chks_1; _i < chks_2.length; _i++) {\r\n                    var chk = chks_2[_i];\r\n                    _this_1.ondata(null, chk, false);\r\n                }\r\n                chks_1 = [];\r\n            };\r\n            var tr_1 = this.d;\r\n            this.d = 0;\r\n            var ind_1 = this.u.length;\r\n            var uf_1 = mrg(file, {\r\n                f: f,\r\n                u: u,\r\n                o: o,\r\n                t: function () {\r\n                    if (file.terminate)\r\n                        file.terminate();\r\n                },\r\n                r: function () {\r\n                    pAll_1();\r\n                    if (tr_1) {\r\n                        var nxt = _this_1.u[ind_1 + 1];\r\n                        if (nxt)\r\n                            nxt.r();\r\n                        else\r\n                            _this_1.d = 1;\r\n                    }\r\n                    tr_1 = 1;\r\n                }\r\n            });\r\n            var cl_1 = 0;\r\n            file.ondata = function (err, dat, final) {\r\n                if (err) {\r\n                    _this_1.ondata(err, dat, final);\r\n                    _this_1.terminate();\r\n                }\r\n                else {\r\n                    cl_1 += dat.length;\r\n                    chks_1.push(dat);\r\n                    if (final) {\r\n                        var dd = new u8(16);\r\n                        wbytes(dd, 0, 0x8074B50);\r\n                        wbytes(dd, 4, file.crc);\r\n                        wbytes(dd, 8, cl_1);\r\n                        wbytes(dd, 12, file.size);\r\n                        chks_1.push(dd);\r\n                        uf_1.c = cl_1, uf_1.b = hl_1 + cl_1 + 16, uf_1.crc = file.crc, uf_1.size = file.size;\r\n                        if (tr_1)\r\n                            uf_1.r();\r\n                        tr_1 = 1;\r\n                    }\r\n                    else if (tr_1)\r\n                        pAll_1();\r\n                }\r\n            };\r\n            this.u.push(uf_1);\r\n        }\r\n    };\r\n    /**\r\n     * Ends the process of adding files and prepares to emit the final chunks.\r\n     * This *must* be called after adding all desired files for the resulting\r\n     * ZIP file to work properly.\r\n     */\r\n    Zip.prototype.end = function () {\r\n        var _this_1 = this;\r\n        if (this.d & 2) {\r\n            this.ondata(err(4 + (this.d & 1) * 8, 0, 1), null, true);\r\n            return;\r\n        }\r\n        if (this.d)\r\n            this.e();\r\n        else\r\n            this.u.push({\r\n                r: function () {\r\n                    if (!(_this_1.d & 1))\r\n                        return;\r\n                    _this_1.u.splice(-1, 1);\r\n                    _this_1.e();\r\n                },\r\n                t: function () { }\r\n            });\r\n        this.d = 3;\r\n    };\r\n    Zip.prototype.e = function () {\r\n        var bt = 0, l = 0, tl = 0;\r\n        for (var _i = 0, _a = this.u; _i < _a.length; _i++) {\r\n            var f = _a[_i];\r\n            tl += 46 + f.f.length + exfl(f.extra) + (f.o ? f.o.length : 0);\r\n        }\r\n        var out = new u8(tl + 22);\r\n        for (var _b = 0, _c = this.u; _b < _c.length; _b++) {\r\n            var f = _c[_b];\r\n            wzh(out, bt, f, f.f, f.u, f.c, l, f.o);\r\n            bt += 46 + f.f.length + exfl(f.extra) + (f.o ? f.o.length : 0), l += f.b;\r\n        }\r\n        wzf(out, bt, this.u.length, tl, l);\r\n        this.ondata(null, out, true);\r\n        this.d = 2;\r\n    };\r\n    /**\r\n     * A method to terminate any internal workers used by the stream. Subsequent\r\n     * calls to add() will fail.\r\n     */\r\n    Zip.prototype.terminate = function () {\r\n        for (var _i = 0, _a = this.u; _i < _a.length; _i++) {\r\n            var f = _a[_i];\r\n            f.t();\r\n        }\r\n        this.d = 2;\r\n    };\r\n    return Zip;\r\n}());\r\nexports.Zip = Zip;\r\nfunction zip(data, opts, cb) {\r\n    if (!cb)\r\n        cb = opts, opts = {};\r\n    if (typeof cb != 'function')\r\n        err(7);\r\n    var r = {};\r\n    fltn(data, '', r, opts);\r\n    var k = Object.keys(r);\r\n    var lft = k.length, o = 0, tot = 0;\r\n    var slft = lft, files = new Array(lft);\r\n    var term = [];\r\n    var tAll = function () {\r\n        for (var i = 0; i < term.length; ++i)\r\n            term[i]();\r\n    };\r\n    var cbd = function (a, b) {\r\n        mt(function () { cb(a, b); });\r\n    };\r\n    mt(function () { cbd = cb; });\r\n    var cbf = function () {\r\n        var out = new u8(tot + 22), oe = o, cdl = tot - o;\r\n        tot = 0;\r\n        for (var i = 0; i < slft; ++i) {\r\n            var f = files[i];\r\n            try {\r\n                var l = f.c.length;\r\n                wzh(out, tot, f, f.f, f.u, l);\r\n                var badd = 30 + f.f.length + exfl(f.extra);\r\n                var loc = tot + badd;\r\n                out.set(f.c, loc);\r\n                wzh(out, o, f, f.f, f.u, l, tot, f.m), o += 16 + badd + (f.m ? f.m.length : 0), tot = loc + l;\r\n            }\r\n            catch (e) {\r\n                return cbd(e, null);\r\n            }\r\n        }\r\n        wzf(out, o, files.length, cdl, oe);\r\n        cbd(null, out);\r\n    };\r\n    if (!lft)\r\n        cbf();\r\n    var _loop_1 = function (i) {\r\n        var fn = k[i];\r\n        var _a = r[fn], file = _a[0], p = _a[1];\r\n        var c = crc(), size = file.length;\r\n        c.p(file);\r\n        var f = strToU8(fn), s = f.length;\r\n        var com = p.comment, m = com && strToU8(com), ms = m && m.length;\r\n        var exl = exfl(p.extra);\r\n        var compression = p.level == 0 ? 0 : 8;\r\n        var cbl = function (e, d) {\r\n            if (e) {\r\n                tAll();\r\n                cbd(e, null);\r\n            }\r\n            else {\r\n                var l = d.length;\r\n                files[i] = mrg(p, {\r\n                    size: size,\r\n                    crc: c.d(),\r\n                    c: d,\r\n                    f: f,\r\n                    m: m,\r\n                    u: s != fn.length || (m && (com.length != ms)),\r\n                    compression: compression\r\n                });\r\n                o += 30 + s + exl + l;\r\n                tot += 76 + 2 * (s + exl) + (ms || 0) + l;\r\n                if (!--lft)\r\n                    cbf();\r\n            }\r\n        };\r\n        if (s > 65535)\r\n            cbl(err(11, 0, 1), null);\r\n        if (!compression)\r\n            cbl(null, file);\r\n        else if (size < 160000) {\r\n            try {\r\n                cbl(null, deflateSync(file, p));\r\n            }\r\n            catch (e) {\r\n                cbl(e, null);\r\n            }\r\n        }\r\n        else\r\n            term.push(deflate(file, p, cbl));\r\n    };\r\n    // Cannot use lft because it can decrease\r\n    for (var i = 0; i < slft; ++i) {\r\n        _loop_1(i);\r\n    }\r\n    return tAll;\r\n}\r\nexports.zip = zip;\r\n/**\r\n * Synchronously creates a ZIP file. Prefer using `zip` for better performance\r\n * with more than one file.\r\n * @param data The directory structure for the ZIP archive\r\n * @param opts The main options, merged with per-file options\r\n * @returns The generated ZIP archive\r\n */\r\nfunction zipSync(data, opts) {\r\n    if (!opts)\r\n        opts = {};\r\n    var r = {};\r\n    var files = [];\r\n    fltn(data, '', r, opts);\r\n    var o = 0;\r\n    var tot = 0;\r\n    for (var fn in r) {\r\n        var _a = r[fn], file = _a[0], p = _a[1];\r\n        var compression = p.level == 0 ? 0 : 8;\r\n        var f = strToU8(fn), s = f.length;\r\n        var com = p.comment, m = com && strToU8(com), ms = m && m.length;\r\n        var exl = exfl(p.extra);\r\n        if (s > 65535)\r\n            err(11);\r\n        var d = compression ? deflateSync(file, p) : file, l = d.length;\r\n        var c = crc();\r\n        c.p(file);\r\n        files.push(mrg(p, {\r\n            size: file.length,\r\n            crc: c.d(),\r\n            c: d,\r\n            f: f,\r\n            m: m,\r\n            u: s != fn.length || (m && (com.length != ms)),\r\n            o: o,\r\n            compression: compression\r\n        }));\r\n        o += 30 + s + exl + l;\r\n        tot += 76 + 2 * (s + exl) + (ms || 0) + l;\r\n    }\r\n    var out = new u8(tot + 22), oe = o, cdl = tot - o;\r\n    for (var i = 0; i < files.length; ++i) {\r\n        var f = files[i];\r\n        wzh(out, f.o, f, f.f, f.u, f.c.length);\r\n        var badd = 30 + f.f.length + exfl(f.extra);\r\n        out.set(f.c, f.o + badd);\r\n        wzh(out, o, f, f.f, f.u, f.c.length, f.o, f.m), o += 16 + badd + (f.m ? f.m.length : 0);\r\n    }\r\n    wzf(out, o, files.length, cdl, oe);\r\n    return out;\r\n}\r\nexports.zipSync = zipSync;\r\n/**\r\n * Streaming pass-through decompression for ZIP archives\r\n */\r\nvar UnzipPassThrough = /*#__PURE__*/ (function () {\r\n    function UnzipPassThrough() {\r\n    }\r\n    UnzipPassThrough.prototype.push = function (data, final) {\r\n        this.ondata(null, data, final);\r\n    };\r\n    UnzipPassThrough.compression = 0;\r\n    return UnzipPassThrough;\r\n}());\r\nexports.UnzipPassThrough = UnzipPassThrough;\r\n/**\r\n * Streaming DEFLATE decompression for ZIP archives. Prefer AsyncZipInflate for\r\n * better performance.\r\n */\r\nvar UnzipInflate = /*#__PURE__*/ (function () {\r\n    /**\r\n     * Creates a DEFLATE decompression that can be used in ZIP archives\r\n     */\r\n    function UnzipInflate() {\r\n        var _this_1 = this;\r\n        this.i = new Inflate(function (dat, final) {\r\n            _this_1.ondata(null, dat, final);\r\n        });\r\n    }\r\n    UnzipInflate.prototype.push = function (data, final) {\r\n        try {\r\n            this.i.push(data, final);\r\n        }\r\n        catch (e) {\r\n            this.ondata(e, null, final);\r\n        }\r\n    };\r\n    UnzipInflate.compression = 8;\r\n    return UnzipInflate;\r\n}());\r\nexports.UnzipInflate = UnzipInflate;\r\n/**\r\n * Asynchronous streaming DEFLATE decompression for ZIP archives\r\n */\r\nvar AsyncUnzipInflate = /*#__PURE__*/ (function () {\r\n    /**\r\n     * Creates a DEFLATE decompression that can be used in ZIP archives\r\n     */\r\n    function AsyncUnzipInflate(_, sz) {\r\n        var _this_1 = this;\r\n        if (sz < 320000) {\r\n            this.i = new Inflate(function (dat, final) {\r\n                _this_1.ondata(null, dat, final);\r\n            });\r\n        }\r\n        else {\r\n            this.i = new AsyncInflate(function (err, dat, final) {\r\n                _this_1.ondata(err, dat, final);\r\n            });\r\n            this.terminate = this.i.terminate;\r\n        }\r\n    }\r\n    AsyncUnzipInflate.prototype.push = function (data, final) {\r\n        if (this.i.terminate)\r\n            data = slc(data, 0);\r\n        this.i.push(data, final);\r\n    };\r\n    AsyncUnzipInflate.compression = 8;\r\n    return AsyncUnzipInflate;\r\n}());\r\nexports.AsyncUnzipInflate = AsyncUnzipInflate;\r\n/**\r\n * A ZIP archive decompression stream that emits files as they are discovered\r\n */\r\nvar Unzip = /*#__PURE__*/ (function () {\r\n    /**\r\n     * Creates a ZIP decompression stream\r\n     * @param cb The callback to call whenever a file in the ZIP archive is found\r\n     */\r\n    function Unzip(cb) {\r\n        this.onfile = cb;\r\n        this.k = [];\r\n        this.o = {\r\n            0: UnzipPassThrough\r\n        };\r\n        this.p = et;\r\n    }\r\n    /**\r\n     * Pushes a chunk to be unzipped\r\n     * @param chunk The chunk to push\r\n     * @param final Whether this is the last chunk\r\n     */\r\n    Unzip.prototype.push = function (chunk, final) {\r\n        var _this_1 = this;\r\n        if (!this.onfile)\r\n            err(5);\r\n        if (!this.p)\r\n            err(4);\r\n        if (this.c > 0) {\r\n            var len = Math.min(this.c, chunk.length);\r\n            var toAdd = chunk.subarray(0, len);\r\n            this.c -= len;\r\n            if (this.d)\r\n                this.d.push(toAdd, !this.c);\r\n            else\r\n                this.k[0].push(toAdd);\r\n            chunk = chunk.subarray(len);\r\n            if (chunk.length)\r\n                return this.push(chunk, final);\r\n        }\r\n        else {\r\n            var f = 0, i = 0, is = void 0, buf = void 0;\r\n            if (!this.p.length)\r\n                buf = chunk;\r\n            else if (!chunk.length)\r\n                buf = this.p;\r\n            else {\r\n                buf = new u8(this.p.length + chunk.length);\r\n                buf.set(this.p), buf.set(chunk, this.p.length);\r\n            }\r\n            var l = buf.length, oc = this.c, add = oc && this.d;\r\n            var _loop_2 = function () {\r\n                var _a;\r\n                var sig = b4(buf, i);\r\n                if (sig == 0x4034B50) {\r\n                    f = 1, is = i;\r\n                    this_1.d = null;\r\n                    this_1.c = 0;\r\n                    var bf = b2(buf, i + 6), cmp_1 = b2(buf, i + 8), u = bf & 2048, dd = bf & 8, fnl = b2(buf, i + 26), es = b2(buf, i + 28);\r\n                    if (l > i + 30 + fnl + es) {\r\n                        var chks_3 = [];\r\n                        this_1.k.unshift(chks_3);\r\n                        f = 2;\r\n                        var sc_1 = b4(buf, i + 18), su_1 = b4(buf, i + 22);\r\n                        var fn_1 = strFromU8(buf.subarray(i + 30, i += 30 + fnl), !u);\r\n                        if (sc_1 == 4294967295) {\r\n                            _a = dd ? [-2] : z64e(buf, i), sc_1 = _a[0], su_1 = _a[1];\r\n                        }\r\n                        else if (dd)\r\n                            sc_1 = -1;\r\n                        i += es;\r\n                        this_1.c = sc_1;\r\n                        var d_1;\r\n                        var file_1 = {\r\n                            name: fn_1,\r\n                            compression: cmp_1,\r\n                            start: function () {\r\n                                if (!file_1.ondata)\r\n                                    err(5);\r\n                                if (!sc_1)\r\n                                    file_1.ondata(null, et, true);\r\n                                else {\r\n                                    var ctr = _this_1.o[cmp_1];\r\n                                    if (!ctr)\r\n                                        file_1.ondata(err(14, 'unknown compression type ' + cmp_1, 1), null, false);\r\n                                    d_1 = sc_1 < 0 ? new ctr(fn_1) : new ctr(fn_1, sc_1, su_1);\r\n                                    d_1.ondata = function (err, dat, final) { file_1.ondata(err, dat, final); };\r\n                                    for (var _i = 0, chks_4 = chks_3; _i < chks_4.length; _i++) {\r\n                                        var dat = chks_4[_i];\r\n                                        d_1.push(dat, false);\r\n                                    }\r\n                                    if (_this_1.k[0] == chks_3 && _this_1.c)\r\n                                        _this_1.d = d_1;\r\n                                    else\r\n                                        d_1.push(et, true);\r\n                                }\r\n                            },\r\n                            terminate: function () {\r\n                                if (d_1 && d_1.terminate)\r\n                                    d_1.terminate();\r\n                            }\r\n                        };\r\n                        if (sc_1 >= 0)\r\n                            file_1.size = sc_1, file_1.originalSize = su_1;\r\n                        this_1.onfile(file_1);\r\n                    }\r\n                    return \"break\";\r\n                }\r\n                else if (oc) {\r\n                    if (sig == 0x8074B50) {\r\n                        is = i += 12 + (oc == -2 && 8), f = 3, this_1.c = 0;\r\n                        return \"break\";\r\n                    }\r\n                    else if (sig == 0x2014B50) {\r\n                        is = i -= 4, f = 3, this_1.c = 0;\r\n                        return \"break\";\r\n                    }\r\n                }\r\n            };\r\n            var this_1 = this;\r\n            for (; i < l - 4; ++i) {\r\n                var state_1 = _loop_2();\r\n                if (state_1 === \"break\")\r\n                    break;\r\n            }\r\n            this.p = et;\r\n            if (oc < 0) {\r\n                var dat = f ? buf.subarray(0, is - 12 - (oc == -2 && 8) - (b4(buf, is - 16) == 0x8074B50 && 4)) : buf.subarray(0, i);\r\n                if (add)\r\n                    add.push(dat, !!f);\r\n                else\r\n                    this.k[+(f == 2)].push(dat);\r\n            }\r\n            if (f & 2)\r\n                return this.push(buf.subarray(i), final);\r\n            this.p = buf.subarray(i);\r\n        }\r\n        if (final) {\r\n            if (this.c)\r\n                err(13);\r\n            this.p = null;\r\n        }\r\n    };\r\n    /**\r\n     * Registers a decoder with the stream, allowing for files compressed with\r\n     * the compression type provided to be expanded correctly\r\n     * @param decoder The decoder constructor\r\n     */\r\n    Unzip.prototype.register = function (decoder) {\r\n        this.o[decoder.compression] = decoder;\r\n    };\r\n    return Unzip;\r\n}());\r\nexports.Unzip = Unzip;\r\nvar mt = typeof queueMicrotask == 'function' ? queueMicrotask : typeof setTimeout == 'function' ? setTimeout : function (fn) { fn(); };\r\nfunction unzip(data, opts, cb) {\r\n    if (!cb)\r\n        cb = opts, opts = {};\r\n    if (typeof cb != 'function')\r\n        err(7);\r\n    var term = [];\r\n    var tAll = function () {\r\n        for (var i = 0; i < term.length; ++i)\r\n            term[i]();\r\n    };\r\n    var files = {};\r\n    var cbd = function (a, b) {\r\n        mt(function () { cb(a, b); });\r\n    };\r\n    mt(function () { cbd = cb; });\r\n    var e = data.length - 22;\r\n    for (; b4(data, e) != 0x6054B50; --e) {\r\n        if (!e || data.length - e > 65558) {\r\n            cbd(err(13, 0, 1), null);\r\n            return tAll;\r\n        }\r\n    }\r\n    ;\r\n    var lft = b2(data, e + 8);\r\n    if (lft) {\r\n        var c = lft;\r\n        var o = b4(data, e + 16);\r\n        var z = o == 4294967295;\r\n        if (z) {\r\n            e = b4(data, e - 12);\r\n            if (b4(data, e) != 0x6064B50) {\r\n                cbd(err(13, 0, 1), null);\r\n                return tAll;\r\n            }\r\n            c = lft = b4(data, e + 32);\r\n            o = b4(data, e + 48);\r\n        }\r\n        var fltr = opts && opts.filter;\r\n        var _loop_3 = function (i) {\r\n            var _a = zh(data, o, z), c_1 = _a[0], sc = _a[1], su = _a[2], fn = _a[3], no = _a[4], off = _a[5], b = slzh(data, off);\r\n            o = no;\r\n            var cbl = function (e, d) {\r\n                if (e) {\r\n                    tAll();\r\n                    cbd(e, null);\r\n                }\r\n                else {\r\n                    if (d)\r\n                        files[fn] = d;\r\n                    if (!--lft)\r\n                        cbd(null, files);\r\n                }\r\n            };\r\n            if (!fltr || fltr({\r\n                name: fn,\r\n                size: sc,\r\n                originalSize: su,\r\n                compression: c_1\r\n            })) {\r\n                if (!c_1)\r\n                    cbl(null, slc(data, b, b + sc));\r\n                else if (c_1 == 8) {\r\n                    var infl = data.subarray(b, b + sc);\r\n                    if (sc < 320000) {\r\n                        try {\r\n                            cbl(null, inflateSync(infl, new u8(su)));\r\n                        }\r\n                        catch (e) {\r\n                            cbl(e, null);\r\n                        }\r\n                    }\r\n                    else\r\n                        term.push(inflate(infl, { size: su }, cbl));\r\n                }\r\n                else\r\n                    cbl(err(14, 'unknown compression type ' + c_1, 1), null);\r\n            }\r\n            else\r\n                cbl(null, null);\r\n        };\r\n        for (var i = 0; i < c; ++i) {\r\n            _loop_3(i);\r\n        }\r\n    }\r\n    else\r\n        cbd(null, {});\r\n    return tAll;\r\n}\r\nexports.unzip = unzip;\r\n/**\r\n * Synchronously decompresses a ZIP archive. Prefer using `unzip` for better\r\n * performance with more than one file.\r\n * @param data The raw compressed ZIP file\r\n * @param opts The ZIP extraction options\r\n * @returns The decompressed files\r\n */\r\nfunction unzipSync(data, opts) {\r\n    var files = {};\r\n    var e = data.length - 22;\r\n    for (; b4(data, e) != 0x6054B50; --e) {\r\n        if (!e || data.length - e > 65558)\r\n            err(13);\r\n    }\r\n    ;\r\n    var c = b2(data, e + 8);\r\n    if (!c)\r\n        return {};\r\n    var o = b4(data, e + 16);\r\n    var z = o == 4294967295;\r\n    if (z) {\r\n        e = b4(data, e - 12);\r\n        if (b4(data, e) != 0x6064B50)\r\n            err(13);\r\n        c = b4(data, e + 32);\r\n        o = b4(data, e + 48);\r\n    }\r\n    var fltr = opts && opts.filter;\r\n    for (var i = 0; i < c; ++i) {\r\n        var _a = zh(data, o, z), c_2 = _a[0], sc = _a[1], su = _a[2], fn = _a[3], no = _a[4], off = _a[5], b = slzh(data, off);\r\n        o = no;\r\n        if (!fltr || fltr({\r\n            name: fn,\r\n            size: sc,\r\n            originalSize: su,\r\n            compression: c_2\r\n        })) {\r\n            if (!c_2)\r\n                files[fn] = slc(data, b, b + sc);\r\n            else if (c_2 == 8)\r\n                files[fn] = inflateSync(data.subarray(b, b + sc), new u8(su));\r\n            else\r\n                err(14, 'unknown compression type ' + c_2);\r\n        }\r\n    }\r\n    return files;\r\n}\r\nexports.unzipSync = unzipSync;\r\n\n\n//# sourceURL=webpack://churu-vm/./node_modules/fflate/lib/index.cjs?");

/***/ }),

/***/ "./node_modules/fflate/lib/worker.cjs":
/*!********************************************!*\
  !*** ./node_modules/fflate/lib/worker.cjs ***!
  \********************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nvar ch2 = {};\r\nexports[\"default\"] = (function (c, id, msg, transfer, cb) {\r\n    var w = new Worker(ch2[id] || (ch2[id] = URL.createObjectURL(new Blob([\r\n        c + ';addEventListener(\"error\",function(e){e=e.error;postMessage({$e$:[e.message,e.code,e.stack]})})'\r\n    ], { type: 'text/javascript' }))));\r\n    w.onmessage = function (e) {\r\n        var d = e.data, ed = d.$e$;\r\n        if (ed) {\r\n            var err = new Error(ed[0]);\r\n            err['code'] = ed[1];\r\n            err.stack = ed[2];\r\n            cb(err, null);\r\n        }\r\n        else\r\n            cb(null, d);\r\n    };\r\n    w.postMessage(msg, transfer);\r\n    return w;\r\n});\r\n\n\n//# sourceURL=webpack://churu-vm/./node_modules/fflate/lib/worker.cjs?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/main.ts");
/******/ 	
/******/ })()
;