  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #20                         // java/util/Hashtable
  super_class: #108                       // java/util/Dictionary
  interfaces: 3, fields: 13, methods: 47, attributes: 3
Constant pool:
    #1 = Class              #260          // java/lang/Integer
    #2 = Fieldref           #20.#261      // java/util/Hashtable.modCount:I
    #3 = Fieldref           #20.#262      // java/util/Hashtable.table:[Ljava/util/Hashtable$Entry;
    #4 = Fieldref           #20.#263      // java/util/Hashtable.count:I
    #5 = Methodref          #20.#264      // java/util/Hashtable.getIterator:(I)Ljava/util/Iterator;
    #6 = Methodref          #108.#265     // java/util/Dictionary."<init>":()V
    #7 = Class              #266          // java/lang/IllegalArgumentException
    #8 = Class              #267          // java/lang/StringBuilder
    #9 = Methodref          #8.#265       // java/lang/StringBuilder."<init>":()V
   #10 = String             #268          // Illegal Capacity:
   #11 = Methodref          #8.#269       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #12 = Methodref          #8.#270       // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
   #13 = Methodref          #8.#271       // java/lang/StringBuilder.toString:()Ljava/lang/String;
   #14 = Methodref          #7.#272       // java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
   #15 = Methodref          #273.#274     // java/lang/Float.isNaN:(F)Z
   #16 = String             #275          // Illegal Load:
   #17 = Methodref          #8.#276       // java/lang/StringBuilder.append:(F)Ljava/lang/StringBuilder;
   #18 = Fieldref           #20.#277      // java/util/Hashtable.loadFactor:F
   #19 = Class              #278          // java/util/Hashtable$Entry
   #20 = Class              #279          // java/util/Hashtable
   #21 = Float              2.14748365E9f
   #22 = Methodref          #280.#281     // java/lang/Math.min:(FF)F
   #23 = Fieldref           #20.#282      // java/util/Hashtable.threshold:I
   #24 = Float              0.75f
   #25 = Methodref          #20.#283      // java/util/Hashtable."<init>":(IF)V
   #26 = InterfaceMethodref #79.#284      // java/util/Map.size:()I
   #27 = Methodref          #280.#285     // java/lang/Math.max:(II)I
   #28 = Methodref          #20.#286      // java/util/Hashtable.putAll:(Ljava/util/Map;)V
   #29 = Methodref          #20.#287      // java/util/Hashtable.getEnumeration:(I)Ljava/util/Enumeration;
   #30 = Class              #288          // java/lang/NullPointerException
   #31 = Methodref          #30.#265      // java/lang/NullPointerException."<init>":()V
   #32 = Fieldref           #19.#289      // java/util/Hashtable$Entry.value:Ljava/lang/Object;
   #33 = Methodref          #290.#291     // java/lang/Object.equals:(Ljava/lang/Object;)Z
   #34 = Fieldref           #19.#292      // java/util/Hashtable$Entry.next:Ljava/util/Hashtable$Entry;
   #35 = Methodref          #20.#293      // java/util/Hashtable.contains:(Ljava/lang/Object;)Z
   #36 = Methodref          #290.#294     // java/lang/Object.hashCode:()I
   #37 = Integer            2147483647
   #38 = Fieldref           #19.#295      // java/util/Hashtable$Entry.hash:I
   #39 = Fieldref           #19.#296      // java/util/Hashtable$Entry.key:Ljava/lang/Object;
   #40 = Integer            2147483639
   #41 = Methodref          #20.#297      // java/util/Hashtable.rehash:()V
   #42 = Methodref          #19.#298      // java/util/Hashtable$Entry."<init>":(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/Hashtable$Entry;)V
   #43 = Methodref          #20.#299      // java/util/Hashtable.addEntry:(ILjava/lang/Object;Ljava/lang/Object;I)V
   #44 = InterfaceMethodref #79.#300      // java/util/Map.entrySet:()Ljava/util/Set;
   #45 = InterfaceMethodref #301.#302     // java/util/Set.iterator:()Ljava/util/Iterator;
   #46 = InterfaceMethodref #303.#304     // java/util/Iterator.hasNext:()Z
   #47 = InterfaceMethodref #303.#305     // java/util/Iterator.next:()Ljava/lang/Object;
   #48 = Class              #306          // java/util/Map$Entry
   #49 = InterfaceMethodref #48.#307      // java/util/Map$Entry.getKey:()Ljava/lang/Object;
   #50 = InterfaceMethodref #48.#308      // java/util/Map$Entry.getValue:()Ljava/lang/Object;
   #51 = Methodref          #20.#309      // java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   #52 = Methodref          #290.#310     // java/lang/Object.clone:()Ljava/lang/Object;
   #53 = Methodref          #19.#310      // java/util/Hashtable$Entry.clone:()Ljava/lang/Object;
   #54 = Fieldref           #20.#311      // java/util/Hashtable.keySet:Ljava/util/Set;
   #55 = Fieldref           #20.#312      // java/util/Hashtable.entrySet:Ljava/util/Set;
   #56 = Fieldref           #20.#313      // java/util/Hashtable.values:Ljava/util/Collection;
   #57 = Class              #314          // java/lang/CloneNotSupportedException
   #58 = Class              #315          // java/lang/InternalError
   #59 = Methodref          #58.#316      // java/lang/InternalError."<init>":(Ljava/lang/Throwable;)V
   #60 = Methodref          #20.#284      // java/util/Hashtable.size:()I
   #61 = String             #317          // {}
   #62 = Methodref          #20.#300      // java/util/Hashtable.entrySet:()Ljava/util/Set;
   #63 = Methodref          #8.#318       // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
   #64 = String             #319          // (this Map)
   #65 = Methodref          #290.#271     // java/lang/Object.toString:()Ljava/lang/String;
   #66 = String             #320          // ,
   #67 = Methodref          #321.#322     // java/util/Collections.emptyEnumeration:()Ljava/util/Enumeration;
   #68 = Class              #323          // java/util/Hashtable$Enumerator
   #69 = Methodref          #68.#324      // java/util/Hashtable$Enumerator."<init>":(Ljava/util/Hashtable;IZ)V
   #70 = Methodref          #321.#325     // java/util/Collections.emptyIterator:()Ljava/util/Iterator;
   #71 = Class              #326          // java/util/Hashtable$KeySet
   #72 = Methodref          #71.#327      // java/util/Hashtable$KeySet."<init>":(Ljava/util/Hashtable;Ljava/util/Hashtable$1;)V
   #73 = Methodref          #321.#328     // java/util/Collections.synchronizedSet:(Ljava/util/Set;Ljava/lang/Object;)Ljava/util/Set;
   #74 = Class              #329          // java/util/Hashtable$EntrySet
   #75 = Methodref          #74.#327      // java/util/Hashtable$EntrySet."<init>":(Ljava/util/Hashtable;Ljava/util/Hashtable$1;)V
   #76 = Class              #330          // java/util/Hashtable$ValueCollection
   #77 = Methodref          #76.#327      // java/util/Hashtable$ValueCollection."<init>":(Ljava/util/Hashtable;Ljava/util/Hashtable$1;)V
   #78 = Methodref          #321.#331     // java/util/Collections.synchronizedCollection:(Ljava/util/Collection;Ljava/lang/Object;)Ljava/util/Collection;
   #79 = Class              #332          // java/util/Map
   #80 = InterfaceMethodref #79.#333      // java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
   #81 = InterfaceMethodref #79.#334      // java/util/Map.containsKey:(Ljava/lang/Object;)Z
   #82 = Class              #335          // java/lang/ClassCastException
   #83 = Methodref          #19.#294      // java/util/Hashtable$Entry.hashCode:()I
   #84 = Methodref          #20.#333      // java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
   #85 = Methodref          #336.#337     // java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
   #86 = InterfaceMethodref #338.#339     // java/util/function/BiConsumer.accept:(Ljava/lang/Object;Ljava/lang/Object;)V
   #87 = Class              #340          // java/util/ConcurrentModificationException
   #88 = Methodref          #87.#265      // java/util/ConcurrentModificationException."<init>":()V
   #89 = Class              #119          // "[Ljava/util/Hashtable$Entry;"
   #90 = InterfaceMethodref #341.#342     // java/util/function/BiFunction.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   #91 = InterfaceMethodref #343.#344     // java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
   #92 = Methodref          #336.#345     // java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
   #93 = Methodref          #346.#347     // java/io/ObjectOutputStream.defaultWriteObject:()V
   #94 = Methodref          #346.#348     // java/io/ObjectOutputStream.writeInt:(I)V
   #95 = Methodref          #346.#349     // java/io/ObjectOutputStream.writeObject:(Ljava/lang/Object;)V
   #96 = Methodref          #350.#351     // java/io/ObjectInputStream.defaultReadObject:()V
   #97 = Class              #352          // java/io/StreamCorruptedException
   #98 = Methodref          #97.#272      // java/io/StreamCorruptedException."<init>":(Ljava/lang/String;)V
   #99 = Methodref          #350.#353     // java/io/ObjectInputStream.readInt:()I
  #100 = String             #354          // Illegal # of Elements:
  #101 = Methodref          #280.#355     // java/lang/Math.min:(II)I
  #102 = Methodref          #356.#357     // sun/misc/SharedSecrets.getJavaOISAccess:()Lsun/misc/JavaOISAccess;
  #103 = Class              #358          // "[Ljava/util/Map$Entry;"
  #104 = InterfaceMethodref #359.#360     // sun/misc/JavaOISAccess.checkArray:(Ljava/io/ObjectInputStream;Ljava/lang/Class;I)V
  #105 = Methodref          #350.#361     // java/io/ObjectInputStream.readObject:()Ljava/lang/Object;
  #106 = Methodref          #20.#362      // java/util/Hashtable.reconstitutionPut:([Ljava/util/Hashtable$Entry;Ljava/lang/Object;Ljava/lang/Object;)V
  #107 = Methodref          #97.#265      // java/io/StreamCorruptedException."<init>":()V
  #108 = Class              #363          // java/util/Dictionary
  #109 = Class              #364          // java/lang/Cloneable
  #110 = Class              #365          // java/io/Serializable
  #111 = Class              #366          // java/util/Hashtable$1
  #112 = Utf8               InnerClasses
  #113 = Utf8               Enumerator
  #114 = Utf8               Entry
  #115 = Utf8               ValueCollection
  #116 = Utf8               EntrySet
  #117 = Utf8               KeySet
  #118 = Utf8               table
  #119 = Utf8               [Ljava/util/Hashtable$Entry;
  #120 = Utf8               Signature
  #121 = Utf8               [Ljava/util/Hashtable$Entry<**>;
  #122 = Utf8               count
  #123 = Utf8               I
  #124 = Utf8               threshold
  #125 = Utf8               loadFactor
  #126 = Utf8               F
  #127 = Utf8               modCount
  #128 = Utf8               serialVersionUID
  #129 = Utf8               J
  #130 = Utf8               ConstantValue
  #131 = Long               1421746759512286392l
  #133 = Utf8               MAX_ARRAY_SIZE
  #134 = Utf8               keySet
  #135 = Utf8               Ljava/util/Set;
  #136 = Utf8               Ljava/util/Set<TK;>;
  #137 = Utf8               entrySet
  #138 = Utf8               Ljava/util/Set<Ljava/util/Map$Entry<TK;TV;>;>;
  #139 = Utf8               values
  #140 = Utf8               Ljava/util/Collection;
  #141 = Utf8               Ljava/util/Collection<TV;>;
  #142 = Utf8               KEYS
  #143 = Integer            0
  #144 = Utf8               VALUES
  #145 = Integer            1
  #146 = Utf8               ENTRIES
  #147 = Integer            2
  #148 = Utf8               <init>
  #149 = Utf8               (IF)V
  #150 = Utf8               Code
  #151 = Utf8               LineNumberTable
  #152 = Utf8               StackMapTable
  #153 = Class              #279          // java/util/Hashtable
  #154 = Utf8               (I)V
  #155 = Utf8               ()V
  #156 = Utf8               (Ljava/util/Map;)V
  #157 = Utf8               (Ljava/util/Map<+TK;+TV;>;)V
  #158 = Utf8               size
  #159 = Utf8               ()I
  #160 = Utf8               isEmpty
  #161 = Utf8               ()Z
  #162 = Utf8               keys
  #163 = Utf8               ()Ljava/util/Enumeration;
  #164 = Utf8               ()Ljava/util/Enumeration<TK;>;
  #165 = Utf8               elements
  #166 = Utf8               ()Ljava/util/Enumeration<TV;>;
  #167 = Utf8               contains
  #168 = Utf8               (Ljava/lang/Object;)Z
  #169 = Class              #278          // java/util/Hashtable$Entry
  #170 = Utf8               containsValue
  #171 = Utf8               containsKey
  #172 = Class              #367          // java/lang/Object
  #173 = Utf8               get
  #174 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #175 = Utf8               (Ljava/lang/Object;)TV;
  #176 = Utf8               rehash
  #177 = Utf8               addEntry
  #178 = Utf8               (ILjava/lang/Object;Ljava/lang/Object;I)V
  #179 = Utf8               (ITK;TV;I)V
  #180 = Utf8               put
  #181 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #182 = Utf8               (TK;TV;)TV;
  #183 = Utf8               remove
  #184 = Utf8               putAll
  #185 = Class              #368          // java/util/Iterator
  #186 = Utf8               clear
  #187 = Utf8               clone
  #188 = Utf8               ()Ljava/lang/Object;
  #189 = Class              #314          // java/lang/CloneNotSupportedException
  #190 = Utf8               toString
  #191 = Utf8               ()Ljava/lang/String;
  #192 = Class              #267          // java/lang/StringBuilder
  #193 = Class              #306          // java/util/Map$Entry
  #194 = Class              #369          // java/lang/String
  #195 = Utf8               getEnumeration
  #196 = Utf8               (I)Ljava/util/Enumeration;
  #197 = Utf8               <T:Ljava/lang/Object;>(I)Ljava/util/Enumeration<TT;>;
  #198 = Utf8               getIterator
  #199 = Utf8               (I)Ljava/util/Iterator;
  #200 = Utf8               <T:Ljava/lang/Object;>(I)Ljava/util/Iterator<TT;>;
  #201 = Utf8               ()Ljava/util/Set;
  #202 = Utf8               ()Ljava/util/Set<TK;>;
  #203 = Utf8               ()Ljava/util/Set<Ljava/util/Map$Entry<TK;TV;>;>;
  #204 = Utf8               ()Ljava/util/Collection;
  #205 = Utf8               ()Ljava/util/Collection<TV;>;
  #206 = Utf8               equals
  #207 = Class              #332          // java/util/Map
  #208 = Class              #335          // java/lang/ClassCastException
  #209 = Class              #288          // java/lang/NullPointerException
  #210 = Utf8               hashCode
  #211 = Utf8               getOrDefault
  #212 = Utf8               (Ljava/lang/Object;TV;)TV;
  #213 = Utf8               forEach
  #214 = Utf8               (Ljava/util/function/BiConsumer;)V
  #215 = Class              #370          // java/util/function/BiConsumer
  #216 = Utf8               (Ljava/util/function/BiConsumer<-TK;-TV;>;)V
  #217 = Utf8               replaceAll
  #218 = Utf8               (Ljava/util/function/BiFunction;)V
  #219 = Class              #371          // java/util/function/BiFunction
  #220 = Utf8               (Ljava/util/function/BiFunction<-TK;-TV;+TV;>;)V
  #221 = Utf8               putIfAbsent
  #222 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z
  #223 = Utf8               replace
  #224 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
  #225 = Utf8               (TK;TV;TV;)Z
  #226 = Utf8               computeIfAbsent
  #227 = Utf8               (Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
  #228 = Class              #372          // java/util/function/Function
  #229 = Utf8               (TK;Ljava/util/function/Function<-TK;+TV;>;)TV;
  #230 = Utf8               computeIfPresent
  #231 = Utf8               (Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
  #232 = Utf8               (TK;Ljava/util/function/BiFunction<-TK;-TV;+TV;>;)TV;
  #233 = Utf8               compute
  #234 = Utf8               merge
  #235 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
  #236 = Utf8               (TK;TV;Ljava/util/function/BiFunction<-TV;-TV;+TV;>;)TV;
  #237 = Utf8               writeObject
  #238 = Utf8               (Ljava/io/ObjectOutputStream;)V
  #239 = Class              #373          // java/lang/Throwable
  #240 = Utf8               Exceptions
  #241 = Class              #374          // java/io/IOException
  #242 = Utf8               readObject
  #243 = Utf8               (Ljava/io/ObjectInputStream;)V
  #244 = Class              #375          // java/lang/ClassNotFoundException
  #245 = Utf8               reconstitutionPut
  #246 = Utf8               ([Ljava/util/Hashtable$Entry;Ljava/lang/Object;Ljava/lang/Object;)V
  #247 = Utf8               ([Ljava/util/Hashtable$Entry<**>;TK;TV;)V
  #248 = Utf8               access$100
  #249 = Utf8               (Ljava/util/Hashtable;I)Ljava/util/Iterator;
  #250 = Utf8               access$200
  #251 = Utf8               (Ljava/util/Hashtable;)I
  #252 = Utf8               access$400
  #253 = Utf8               (Ljava/util/Hashtable;)[Ljava/util/Hashtable$Entry;
  #254 = Utf8               access$508
  #255 = Utf8               access$210
  #256 = Utf8               access$500
  #257 = Utf8               <K:Ljava/lang/Object;V:Ljava/lang/Object;>Ljava/util/Dictionary<TK;TV;>;Ljava/util/Map<TK;TV;>;Ljava/lang/Cloneable;Ljava/io/Serializable;
  #258 = Utf8               SourceFile
  #259 = Utf8               Hashtable.java
  #260 = Utf8               java/lang/Integer
  #261 = NameAndType        #127:#123     // modCount:I
  #262 = NameAndType        #118:#119     // table:[Ljava/util/Hashtable$Entry;
  #263 = NameAndType        #122:#123     // count:I
  #264 = NameAndType        #198:#199     // getIterator:(I)Ljava/util/Iterator;
  #265 = NameAndType        #148:#155     // "<init>":()V
  #266 = Utf8               java/lang/IllegalArgumentException
  #267 = Utf8               java/lang/StringBuilder
  #268 = Utf8               Illegal Capacity:
  #269 = NameAndType        #376:#377     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #270 = NameAndType        #376:#378     // append:(I)Ljava/lang/StringBuilder;
  #271 = NameAndType        #190:#191     // toString:()Ljava/lang/String;
  #272 = NameAndType        #148:#379     // "<init>":(Ljava/lang/String;)V
  #273 = Class              #380          // java/lang/Float
  #274 = NameAndType        #381:#382     // isNaN:(F)Z
  #275 = Utf8               Illegal Load:
  #276 = NameAndType        #376:#383     // append:(F)Ljava/lang/StringBuilder;
  #277 = NameAndType        #125:#126     // loadFactor:F
  #278 = Utf8               java/util/Hashtable$Entry
  #279 = Utf8               java/util/Hashtable
  #280 = Class              #384          // java/lang/Math
  #281 = NameAndType        #385:#386     // min:(FF)F
  #282 = NameAndType        #124:#123     // threshold:I
  #283 = NameAndType        #148:#149     // "<init>":(IF)V
  #284 = NameAndType        #158:#159     // size:()I
  #285 = NameAndType        #387:#388     // max:(II)I
  #286 = NameAndType        #184:#156     // putAll:(Ljava/util/Map;)V
  #287 = NameAndType        #195:#196     // getEnumeration:(I)Ljava/util/Enumeration;
  #288 = Utf8               java/lang/NullPointerException
  #289 = NameAndType        #389:#390     // value:Ljava/lang/Object;
  #290 = Class              #367          // java/lang/Object
  #291 = NameAndType        #206:#168     // equals:(Ljava/lang/Object;)Z
  #292 = NameAndType        #391:#392     // next:Ljava/util/Hashtable$Entry;
  #293 = NameAndType        #167:#168     // contains:(Ljava/lang/Object;)Z
  #294 = NameAndType        #210:#159     // hashCode:()I
  #295 = NameAndType        #393:#123     // hash:I
  #296 = NameAndType        #394:#390     // key:Ljava/lang/Object;
  #297 = NameAndType        #176:#155     // rehash:()V
  #298 = NameAndType        #148:#395     // "<init>":(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/Hashtable$Entry;)V
  #299 = NameAndType        #177:#178     // addEntry:(ILjava/lang/Object;Ljava/lang/Object;I)V
  #300 = NameAndType        #137:#201     // entrySet:()Ljava/util/Set;
  #301 = Class              #396          // java/util/Set
  #302 = NameAndType        #397:#398     // iterator:()Ljava/util/Iterator;
  #303 = Class              #368          // java/util/Iterator
  #304 = NameAndType        #399:#161     // hasNext:()Z
  #305 = NameAndType        #391:#188     // next:()Ljava/lang/Object;
  #306 = Utf8               java/util/Map$Entry
  #307 = NameAndType        #400:#188     // getKey:()Ljava/lang/Object;
  #308 = NameAndType        #401:#188     // getValue:()Ljava/lang/Object;
  #309 = NameAndType        #180:#181     // put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #310 = NameAndType        #187:#188     // clone:()Ljava/lang/Object;
  #311 = NameAndType        #134:#135     // keySet:Ljava/util/Set;
  #312 = NameAndType        #137:#135     // entrySet:Ljava/util/Set;
  #313 = NameAndType        #139:#140     // values:Ljava/util/Collection;
  #314 = Utf8               java/lang/CloneNotSupportedException
  #315 = Utf8               java/lang/InternalError
  #316 = NameAndType        #148:#402     // "<init>":(Ljava/lang/Throwable;)V
  #317 = Utf8               {}
  #318 = NameAndType        #376:#403     // append:(C)Ljava/lang/StringBuilder;
  #319 = Utf8               (this Map)
  #320 = Utf8               ,
  #321 = Class              #404          // java/util/Collections
  #322 = NameAndType        #405:#163     // emptyEnumeration:()Ljava/util/Enumeration;
  #323 = Utf8               java/util/Hashtable$Enumerator
  #324 = NameAndType        #148:#406     // "<init>":(Ljava/util/Hashtable;IZ)V
  #325 = NameAndType        #407:#398     // emptyIterator:()Ljava/util/Iterator;
  #326 = Utf8               java/util/Hashtable$KeySet
  #327 = NameAndType        #148:#408     // "<init>":(Ljava/util/Hashtable;Ljava/util/Hashtable$1;)V
  #328 = NameAndType        #409:#410     // synchronizedSet:(Ljava/util/Set;Ljava/lang/Object;)Ljava/util/Set;
  #329 = Utf8               java/util/Hashtable$EntrySet
  #330 = Utf8               java/util/Hashtable$ValueCollection
  #331 = NameAndType        #411:#412     // synchronizedCollection:(Ljava/util/Collection;Ljava/lang/Object;)Ljava/util/Collection;
  #332 = Utf8               java/util/Map
  #333 = NameAndType        #173:#174     // get:(Ljava/lang/Object;)Ljava/lang/Object;
  #334 = NameAndType        #171:#168     // containsKey:(Ljava/lang/Object;)Z
  #335 = Utf8               java/lang/ClassCastException
  #336 = Class              #413          // java/util/Objects
  #337 = NameAndType        #414:#174     // requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
  #338 = Class              #370          // java/util/function/BiConsumer
  #339 = NameAndType        #415:#416     // accept:(Ljava/lang/Object;Ljava/lang/Object;)V
  #340 = Utf8               java/util/ConcurrentModificationException
  #341 = Class              #371          // java/util/function/BiFunction
  #342 = NameAndType        #417:#181     // apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #343 = Class              #372          // java/util/function/Function
  #344 = NameAndType        #417:#174     // apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #345 = NameAndType        #206:#222     // equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
  #346 = Class              #418          // java/io/ObjectOutputStream
  #347 = NameAndType        #419:#155     // defaultWriteObject:()V
  #348 = NameAndType        #420:#154     // writeInt:(I)V
  #349 = NameAndType        #237:#421     // writeObject:(Ljava/lang/Object;)V
  #350 = Class              #422          // java/io/ObjectInputStream
  #351 = NameAndType        #423:#155     // defaultReadObject:()V
  #352 = Utf8               java/io/StreamCorruptedException
  #353 = NameAndType        #424:#159     // readInt:()I
  #354 = Utf8               Illegal # of Elements:
  #355 = NameAndType        #385:#388     // min:(II)I
  #356 = Class              #425          // sun/misc/SharedSecrets
  #357 = NameAndType        #426:#427     // getJavaOISAccess:()Lsun/misc/JavaOISAccess;
  #358 = Utf8               [Ljava/util/Map$Entry;
  #359 = Class              #428          // sun/misc/JavaOISAccess
  #360 = NameAndType        #429:#430     // checkArray:(Ljava/io/ObjectInputStream;Ljava/lang/Class;I)V
  #361 = NameAndType        #242:#188     // readObject:()Ljava/lang/Object;
  #362 = NameAndType        #245:#246     // reconstitutionPut:([Ljava/util/Hashtable$Entry;Ljava/lang/Object;Ljava/lang/Object;)V
  #363 = Utf8               java/util/Dictionary
  #364 = Utf8               java/lang/Cloneable
  #365 = Utf8               java/io/Serializable
  #366 = Utf8               java/util/Hashtable$1
  #367 = Utf8               java/lang/Object
  #368 = Utf8               java/util/Iterator
  #369 = Utf8               java/lang/String
  #370 = Utf8               java/util/function/BiConsumer
  #371 = Utf8               java/util/function/BiFunction
  #372 = Utf8               java/util/function/Function
  #373 = Utf8               java/lang/Throwable
  #374 = Utf8               java/io/IOException
  #375 = Utf8               java/lang/ClassNotFoundException
  #376 = Utf8               append
  #377 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #378 = Utf8               (I)Ljava/lang/StringBuilder;
  #379 = Utf8               (Ljava/lang/String;)V
  #380 = Utf8               java/lang/Float
  #381 = Utf8               isNaN
  #382 = Utf8               (F)Z
  #383 = Utf8               (F)Ljava/lang/StringBuilder;
  #384 = Utf8               java/lang/Math
  #385 = Utf8               min
  #386 = Utf8               (FF)F
  #387 = Utf8               max
  #388 = Utf8               (II)I
  #389 = Utf8               value
  #390 = Utf8               Ljava/lang/Object;
  #391 = Utf8               next
  #392 = Utf8               Ljava/util/Hashtable$Entry;
  #393 = Utf8               hash
  #394 = Utf8               key
  #395 = Utf8               (ILjava/lang/Object;Ljava/lang/Object;Ljava/util/Hashtable$Entry;)V
  #396 = Utf8               java/util/Set
  #397 = Utf8               iterator
  #398 = Utf8               ()Ljava/util/Iterator;
  #399 = Utf8               hasNext
  #400 = Utf8               getKey
  #401 = Utf8               getValue
  #402 = Utf8               (Ljava/lang/Throwable;)V
  #403 = Utf8               (C)Ljava/lang/StringBuilder;
  #404 = Utf8               java/util/Collections
  #405 = Utf8               emptyEnumeration
  #406 = Utf8               (Ljava/util/Hashtable;IZ)V
  #407 = Utf8               emptyIterator
  #408 = Utf8               (Ljava/util/Hashtable;Ljava/util/Hashtable$1;)V
  #409 = Utf8               synchronizedSet
  #410 = Utf8               (Ljava/util/Set;Ljava/lang/Object;)Ljava/util/Set;
  #411 = Utf8               synchronizedCollection
  #412 = Utf8               (Ljava/util/Collection;Ljava/lang/Object;)Ljava/util/Collection;
  #413 = Utf8               java/util/Objects
  #414 = Utf8               requireNonNull
  #415 = Utf8               accept
  #416 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
  #417 = Utf8               apply
  #418 = Utf8               java/io/ObjectOutputStream
  #419 = Utf8               defaultWriteObject
  #420 = Utf8               writeInt
  #421 = Utf8               (Ljava/lang/Object;)V
  #422 = Utf8               java/io/ObjectInputStream
  #423 = Utf8               defaultReadObject
  #424 = Utf8               readInt
  #425 = Utf8               sun/misc/SharedSecrets
  #426 = Utf8               getJavaOISAccess
  #427 = Utf8               ()Lsun/misc/JavaOISAccess;
  #428 = Utf8               sun/misc/JavaOISAccess
  #429 = Utf8               checkArray
  #430 = Utf8               (Ljava/io/ObjectInputStream;Ljava/lang/Class;I)V
{
  public java.util.Hashtable(int, float);
    descriptor: (IF)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=3
         0: aload_0
         1: invokespecial #6                  // Method java/util/Dictionary."<init>":()V
         4: aload_0
         5: iconst_0
         6: putfield      #2                  // Field modCount:I
         9: iload_1
        10: ifge          40
        13: new           #7                  // class java/lang/IllegalArgumentException
        16: dup
        17: new           #8                  // class java/lang/StringBuilder
        20: dup
        21: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
        24: ldc           #10                 // String Illegal Capacity:
        26: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        29: iload_1
        30: invokevirtual #12                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
        33: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        36: invokespecial #14                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        39: athrow
        40: fload_2
        41: fconst_0
        42: fcmpg
        43: ifle          53
        46: fload_2
        47: invokestatic  #15                 // Method java/lang/Float.isNaN:(F)Z
        50: ifeq          80
        53: new           #7                  // class java/lang/IllegalArgumentException
        56: dup
        57: new           #8                  // class java/lang/StringBuilder
        60: dup
        61: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
        64: ldc           #16                 // String Illegal Load:
        66: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        69: fload_2
        70: invokevirtual #17                 // Method java/lang/StringBuilder.append:(F)Ljava/lang/StringBuilder;
        73: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        76: invokespecial #14                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        79: athrow
        80: iload_1
        81: ifne          86
        84: iconst_1
        85: istore_1
        86: aload_0
        87: fload_2
        88: putfield      #18                 // Field loadFactor:F
        91: aload_0
        92: iload_1
        93: anewarray     #19                 // class java/util/Hashtable$Entry
        96: putfield      #3                  // Field table:[Ljava/util/Hashtable$Entry;
        99: aload_0
       100: iload_1
       101: i2f
       102: fload_2
       103: fmul
       104: ldc           #21                 // float 2.14748365E9f
       106: invokestatic  #22                 // Method java/lang/Math.min:(FF)F
       109: f2i
       110: putfield      #23                 // Field threshold:I
       113: return
      LineNumberTable:
        line 181: 0
        line 167: 4
        line 182: 9
        line 183: 13
        line 185: 40
        line 186: 53
        line 188: 80
        line 189: 84
        line 190: 86
        line 191: 91
        line 192: 99
        line 193: 113
      StackMapTable: number_of_entries = 4
        frame_type = 255 /* full_frame */
          offset_delta = 40
          locals = [ class java/util/Hashtable, int, float ]
          stack = []
        frame_type = 12 /* same */
        frame_type = 26 /* same */
        frame_type = 5 /* same */

  public java.util.Hashtable(int);
    descriptor: (I)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: ldc           #24                 // float 0.75f
         4: invokespecial #25                 // Method "<init>":(IF)V
         7: return
      LineNumberTable:
        line 204: 0
        line 205: 7

  public java.util.Hashtable();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: bipush        11
         3: ldc           #24                 // float 0.75f
         5: invokespecial #25                 // Method "<init>":(IF)V
         8: return
      LineNumberTable:
        line 212: 0
        line 213: 8

  public java.util.Hashtable(java.util.Map<? extends K, ? extends V>);
    descriptor: (Ljava/util/Map;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: iconst_2
         2: aload_1
         3: invokeinterface #26,  1           // InterfaceMethod java/util/Map.size:()I
         8: imul
         9: bipush        11
        11: invokestatic  #27                 // Method java/lang/Math.max:(II)I
        14: ldc           #24                 // float 0.75f
        16: invokespecial #25                 // Method "<init>":(IF)V
        19: aload_0
        20: aload_1
        21: invokevirtual #28                 // Method putAll:(Ljava/util/Map;)V
        24: return
      LineNumberTable:
        line 225: 0
        line 226: 19
        line 227: 24
    Signature: #157                         // (Ljava/util/Map<+TK;+TV;>;)V

  public synchronized int size();
    descriptor: ()I
    flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #4                  // Field count:I
         4: ireturn
      LineNumberTable:
        line 235: 0

  public synchronized boolean isEmpty();
    descriptor: ()Z
    flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #4                  // Field count:I
         4: ifne          11
         7: iconst_1
         8: goto          12
        11: iconst_0
        12: ireturn
      LineNumberTable:
        line 245: 0
      StackMapTable: number_of_entries = 2
        frame_type = 11 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]

  public synchronized java.util.Enumeration<K> keys();
    descriptor: ()Ljava/util/Enumeration;
    flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: iconst_0
         2: invokespecial #29                 // Method getEnumeration:(I)Ljava/util/Enumeration;
         5: areturn
      LineNumberTable:
        line 258: 0
    Signature: #164                         // ()Ljava/util/Enumeration<TK;>;

  public synchronized java.util.Enumeration<V> elements();
    descriptor: ()Ljava/util/Enumeration;
    flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: iconst_1
         2: invokespecial #29                 // Method getEnumeration:(I)Ljava/util/Enumeration;
         5: areturn
      LineNumberTable:
        line 273: 0
    Signature: #166                         // ()Ljava/util/Enumeration<TV;>;

  public synchronized boolean contains(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED
    Code:
      stack=2, locals=5, args_size=2
         0: aload_1
         1: ifnonnull     12
         4: new           #30                 // class java/lang/NullPointerException
         7: dup
         8: invokespecial #31                 // Method java/lang/NullPointerException."<init>":()V
        11: athrow
        12: aload_0
        13: getfield      #3                  // Field table:[Ljava/util/Hashtable$Entry;
        16: astore_2
        17: aload_2
        18: arraylength
        19: istore_3
        20: iload_3
        21: iinc          3, -1
        24: ifle          64
        27: aload_2
        28: iload_3
        29: aaload
        30: astore        4
        32: aload         4
        34: ifnull        61
        37: aload         4
        39: getfield      #32                 // Field java/util/Hashtable$Entry.value:Ljava/lang/Object;
        42: aload_1
        43: invokevirtual #33                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        46: ifeq          51
        49: iconst_1
        50: ireturn
        51: aload         4
        53: getfield      #34                 // Field java/util/Hashtable$Entry.next:Ljava/util/Hashtable$Entry;
        56: astore        4
        58: goto          32
        61: goto          20
        64: iconst_0
        65: ireturn
      LineNumberTable:
        line 293: 0
        line 294: 4
        line 297: 12
        line 298: 17
        line 299: 27
        line 300: 37
        line 301: 49
        line 299: 51
        line 305: 64
      StackMapTable: number_of_entries = 6
        frame_type = 12 /* same */
        frame_type = 253 /* append */
          offset_delta = 7
          locals = [ class "[Ljava/util/Hashtable$Entry;", int ]
        frame_type = 252 /* append */
          offset_delta = 11
          locals = [ class java/util/Hashtable$Entry ]
        frame_type = 18 /* same */
        frame_type = 250 /* chop */
          offset_delta = 9
        frame_type = 250 /* chop */
          offset_delta = 2

  public boolean containsValue(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #35                 // Method contains:(Ljava/lang/Object;)Z
         5: ireturn
      LineNumberTable:
        line 321: 0

  public synchronized boolean containsKey(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED
    Code:
      stack=2, locals=6, args_size=2
         0: aload_0
         1: getfield      #3                  // Field table:[Ljava/util/Hashtable$Entry;
         4: astore_2
         5: aload_1
         6: invokevirtual #36                 // Method java/lang/Object.hashCode:()I
         9: istore_3
        10: iload_3
        11: ldc           #37                 // int 2147483647
        13: iand
        14: aload_2
        15: arraylength
        16: irem
        17: istore        4
        19: aload_2
        20: iload         4
        22: aaload
        23: astore        5
        25: aload         5
        27: ifnull        63
        30: aload         5
        32: getfield      #38                 // Field java/util/Hashtable$Entry.hash:I
        35: iload_3
        36: if_icmpne     53
        39: aload         5
        41: getfield      #39                 // Field java/util/Hashtable$Entry.key:Ljava/lang/Object;
        44: aload_1
        45: invokevirtual #33                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        48: ifeq          53
        51: iconst_1
        52: ireturn
        53: aload         5
        55: getfield      #34                 // Field java/util/Hashtable$Entry.next:Ljava/util/Hashtable$Entry;
        58: astore        5
        60: goto          25
        63: iconst_0
        64: ireturn
      LineNumberTable:
        line 335: 0
        line 336: 5
        line 337: 10
        line 338: 19
        line 339: 30
        line 340: 51
        line 338: 53
        line 343: 63
      StackMapTable: number_of_entries = 3
        frame_type = 255 /* full_frame */
          offset_delta = 25
          locals = [ class java/util/Hashtable, class java/lang/Object, class "[Ljava/util/Hashtable$Entry;", int, int, class java/util/Hashtable$Entry ]
          stack = []
        frame_type = 27 /* same */
        frame_type = 250 /* chop */
          offset_delta = 9

  public synchronized V get(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED
    Code:
      stack=2, locals=6, args_size=2
         0: aload_0
         1: getfield      #3                  // Field table:[Ljava/util/Hashtable$Entry;
         4: astore_2
         5: aload_1
         6: invokevirtual #36                 // Method java/lang/Object.hashCode:()I
         9: istore_3
        10: iload_3
        11: ldc           #37                 // int 2147483647
        13: iand
        14: aload_2
        15: arraylength
        16: irem
        17: istore        4
        19: aload_2
        20: iload         4
        22: aaload
        23: astore        5
        25: aload         5
        27: ifnull        67
        30: aload         5
        32: getfield      #38                 // Field java/util/Hashtable$Entry.hash:I
        35: iload_3
        36: if_icmpne     57
        39: aload         5
        41: getfield      #39                 // Field java/util/Hashtable$Entry.key:Ljava/lang/Object;
        44: aload_1
        45: invokevirtual #33                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        48: ifeq          57
        51: aload         5
        53: getfield      #32                 // Field java/util/Hashtable$Entry.value:Ljava/lang/Object;
        56: areturn
        57: aload         5
        59: getfield      #34                 // Field java/util/Hashtable$Entry.next:Ljava/util/Hashtable$Entry;
        62: astore        5
        64: goto          25
        67: aconst_null
        68: areturn
      LineNumberTable:
        line 363: 0
        line 364: 5
        line 365: 10
        line 366: 19
        line 367: 30
        line 368: 51
        line 366: 57
        line 371: 67
      StackMapTable: number_of_entries = 3
        frame_type = 255 /* full_frame */
          offset_delta = 25
          locals = [ class java/util/Hashtable, class java/lang/Object, class "[Ljava/util/Hashtable$Entry;", int, int, class java/util/Hashtable$Entry ]
          stack = []
        frame_type = 31 /* same */
        frame_type = 250 /* chop */
          offset_delta = 9
    Signature: #175                         // (Ljava/lang/Object;)TV;

  protected void rehash();
    descriptor: ()V
    flags: (0x0004) ACC_PROTECTED
    Code:
      stack=3, locals=9, args_size=1
         0: aload_0
         1: getfield      #3                  // Field table:[Ljava/util/Hashtable$Entry;
         4: arraylength
         5: istore_1
         6: aload_0
         7: getfield      #3                  // Field table:[Ljava/util/Hashtable$Entry;
        10: astore_2
        11: iload_1
        12: iconst_1
        13: ishl
        14: iconst_1
        15: iadd
        16: istore_3
        17: iload_3
        18: ldc           #40                 // int 2147483639
        20: isub
        21: ifle          34
        24: iload_1
        25: ldc           #40                 // int 2147483639
        27: if_icmpne     31
        30: return
        31: ldc           #40                 // int 2147483639
        33: istore_3
        34: iload_3
        35: anewarray     #19                 // class java/util/Hashtable$Entry
        38: astore        4
        40: aload_0
        41: dup
        42: getfield      #2                  // Field modCount:I
        45: iconst_1
        46: iadd
        47: putfield      #2                  // Field modCount:I
        50: aload_0
        51: iload_3
        52: i2f
        53: aload_0
        54: getfield      #18                 // Field loadFactor:F
        57: fmul
        58: ldc           #21                 // float 2.14748365E9f
        60: invokestatic  #22                 // Method java/lang/Math.min:(FF)F
        63: f2i
        64: putfield      #23                 // Field threshold:I
        67: aload_0
        68: aload         4
        70: putfield      #3                  // Field table:[Ljava/util/Hashtable$Entry;
        73: iload_1
        74: istore        5
        76: iload         5
        78: iinc          5, -1
        81: ifle          141
        84: aload_2
        85: iload         5
        87: aaload
        88: astore        6
        90: aload         6
        92: ifnull        138
        95: aload         6
        97: astore        7
        99: aload         6
       101: getfield      #34                 // Field java/util/Hashtable$Entry.next:Ljava/util/Hashtable$Entry;
       104: astore        6
       106: aload         7
       108: getfield      #38                 // Field java/util/Hashtable$Entry.hash:I
       111: ldc           #37                 // int 2147483647
       113: iand
       114: iload_3
       115: irem
       116: istore        8
       118: aload         7
       120: aload         4
       122: iload         8
       124: aaload
       125: putfield      #34                 // Field java/util/Hashtable$Entry.next:Ljava/util/Hashtable$Entry;
       128: aload         4
       130: iload         8
       132: aload         7
       134: aastore
       135: goto          90
       138: goto          76
       141: return
      LineNumberTable:
        line 391: 0
        line 392: 6
        line 395: 11
        line 396: 17
        line 397: 24
        line 399: 30
        line 400: 31
        line 402: 34
        line 404: 40
        line 405: 50
        line 406: 67
        line 408: 73
        line 409: 84
        line 410: 95
        line 411: 99
        line 413: 106
        line 414: 118
        line 415: 128
        line 416: 135
        line 418: 141
      StackMapTable: number_of_entries = 6
        frame_type = 254 /* append */
          offset_delta = 31
          locals = [ int, class "[Ljava/util/Hashtable$Entry;", int ]
        frame_type = 2 /* same */
        frame_type = 253 /* append */
          offset_delta = 41
          locals = [ class "[Ljava/util/Hashtable$Entry;", int ]
        frame_type = 252 /* append */
          offset_delta = 13
          locals = [ class java/util/Hashtable$Entry ]
        frame_type = 250 /* chop */
          offset_delta = 47
        frame_type = 250 /* chop */
          offset_delta = 2

  public synchronized V put(K, V);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED
    Code:
      stack=5, locals=8, args_size=3
         0: aload_2
         1: ifnonnull     12
         4: new           #30                 // class java/lang/NullPointerException
         7: dup
         8: invokespecial #31                 // Method java/lang/NullPointerException."<init>":()V
        11: athrow
        12: aload_0
        13: getfield      #3                  // Field table:[Ljava/util/Hashtable$Entry;
        16: astore_3
        17: aload_1
        18: invokevirtual #36                 // Method java/lang/Object.hashCode:()I
        21: istore        4
        23: iload         4
        25: ldc           #37                 // int 2147483647
        27: iand
        28: aload_3
        29: arraylength
        30: irem
        31: istore        5
        33: aload_3
        34: iload         5
        36: aaload
        37: astore        6
        39: aload         6
        41: ifnull        92
        44: aload         6
        46: getfield      #38                 // Field java/util/Hashtable$Entry.hash:I
        49: iload         4
        51: if_icmpne     82
        54: aload         6
        56: getfield      #39                 // Field java/util/Hashtable$Entry.key:Ljava/lang/Object;
        59: aload_1
        60: invokevirtual #33                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        63: ifeq          82
        66: aload         6
        68: getfield      #32                 // Field java/util/Hashtable$Entry.value:Ljava/lang/Object;
        71: astore        7
        73: aload         6
        75: aload_2
        76: putfield      #32                 // Field java/util/Hashtable$Entry.value:Ljava/lang/Object;
        79: aload         7
        81: areturn
        82: aload         6
        84: getfield      #34                 // Field java/util/Hashtable$Entry.next:Ljava/util/Hashtable$Entry;
        87: astore        6
        89: goto          39
        92: aload_0
        93: iload         4
        95: aload_1
        96: aload_2
        97: iload         5
        99: invokespecial #43                 // Method addEntry:(ILjava/lang/Object;Ljava/lang/Object;I)V
       102: aconst_null
       103: areturn
      LineNumberTable:
        line 459: 0
        line 460: 4
        line 464: 12
        line 465: 17
        line 466: 23
        line 468: 33
        line 469: 39
        line 470: 44
        line 471: 66
        line 472: 73
        line 473: 79
        line 469: 82
        line 477: 92
        line 478: 102
      StackMapTable: number_of_entries = 4
        frame_type = 12 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 26
          locals = [ class java/util/Hashtable, class java/lang/Object, class java/lang/Object, class "[Ljava/util/Hashtable$Entry;", int, int, class java/util/Hashtable$Entry ]
          stack = []
        frame_type = 42 /* same */
        frame_type = 9 /* same */
    Signature: #182                         // (TK;TV;)TV;

  public synchronized V remove(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED
    Code:
      stack=3, locals=8, args_size=2
         0: aload_0
         1: getfield      #3                  // Field table:[Ljava/util/Hashtable$Entry;
         4: astore_2
         5: aload_1
         6: invokevirtual #36                 // Method java/lang/Object.hashCode:()I
         9: istore_3
        10: iload_3
        11: ldc           #37                 // int 2147483647
        13: iand
        14: aload_2
        15: arraylength
        16: irem
        17: istore        4
        19: aload_2
        20: iload         4
        22: aaload
        23: astore        5
        25: aconst_null
        26: astore        6
        28: aload         5
        30: ifnull        131
        33: aload         5
        35: getfield      #38                 // Field java/util/Hashtable$Entry.hash:I
        38: iload_3
        39: if_icmpne     117
        42: aload         5
        44: getfield      #39                 // Field java/util/Hashtable$Entry.key:Ljava/lang/Object;
        47: aload_1
        48: invokevirtual #33                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        51: ifeq          117
        54: aload_0
        55: dup
        56: getfield      #2                  // Field modCount:I
        59: iconst_1
        60: iadd
        61: putfield      #2                  // Field modCount:I
        64: aload         6
        66: ifnull        82
        69: aload         6
        71: aload         5
        73: getfield      #34                 // Field java/util/Hashtable$Entry.next:Ljava/util/Hashtable$Entry;
        76: putfield      #34                 // Field java/util/Hashtable$Entry.next:Ljava/util/Hashtable$Entry;
        79: goto          91
        82: aload_2
        83: iload         4
        85: aload         5
        87: getfield      #34                 // Field java/util/Hashtable$Entry.next:Ljava/util/Hashtable$Entry;
        90: aastore
        91: aload_0
        92: dup
        93: getfield      #4                  // Field count:I
        96: iconst_1
        97: isub
        98: putfield      #4                  // Field count:I
       101: aload         5
       103: getfield      #32                 // Field java/util/Hashtable$Entry.value:Ljava/lang/Object;
       106: astore        7
       108: aload         5
       110: aconst_null
       111: putfield      #32                 // Field java/util/Hashtable$Entry.value:Ljava/lang/Object;
       114: aload         7
       116: areturn
       117: aload         5
       119: astore        6
       121: aload         5
       123: getfield      #34                 // Field java/util/Hashtable$Entry.next:Ljava/util/Hashtable$Entry;
       126: astore        5
       128: goto          28
       131: aconst_null
       132: areturn
      LineNumberTable:
        line 491: 0
        line 492: 5
        line 493: 10
        line 495: 19
        line 496: 25
        line 497: 33
        line 498: 54
        line 499: 64
        line 500: 69
        line 502: 82
        line 504: 91
        line 505: 101
        line 506: 108
        line 507: 114
        line 496: 117
        line 510: 131
      StackMapTable: number_of_entries = 5
        frame_type = 255 /* full_frame */
          offset_delta = 28
          locals = [ class java/util/Hashtable, class java/lang/Object, class "[Ljava/util/Hashtable$Entry;", int, int, class java/util/Hashtable$Entry, class java/util/Hashtable$Entry ]
          stack = []
        frame_type = 53 /* same */
        frame_type = 8 /* same */
        frame_type = 25 /* same */
        frame_type = 250 /* chop */
          offset_delta = 13
    Signature: #175                         // (Ljava/lang/Object;)TV;

  public synchronized void putAll(java.util.Map<? extends K, ? extends V>);
    descriptor: (Ljava/util/Map;)V
    flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED
    Code:
      stack=3, locals=4, args_size=2
         0: aload_1
         1: invokeinterface #44,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
         6: invokeinterface #45,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
        11: astore_2
        12: aload_2
        13: invokeinterface #46,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
        18: ifeq          51
        21: aload_2
        22: invokeinterface #47,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
        27: checkcast     #48                 // class java/util/Map$Entry
        30: astore_3
        31: aload_0
        32: aload_3
        33: invokeinterface #49,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
        38: aload_3
        39: invokeinterface #50,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
        44: invokevirtual #51                 // Method put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
        47: pop
        48: goto          12
        51: return
      LineNumberTable:
        line 523: 0
        line 524: 31
        line 525: 51
      StackMapTable: number_of_entries = 2
        frame_type = 252 /* append */
          offset_delta = 12
          locals = [ class java/util/Iterator ]
        frame_type = 250 /* chop */
          offset_delta = 38
    Signature: #157                         // (Ljava/util/Map<+TK;+TV;>;)V

  public synchronized void clear();
    descriptor: ()V
    flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED
    Code:
      stack=3, locals=3, args_size=1
         0: aload_0
         1: getfield      #3                  // Field table:[Ljava/util/Hashtable$Entry;
         4: astore_1
         5: aload_0
         6: dup
         7: getfield      #2                  // Field modCount:I
        10: iconst_1
        11: iadd
        12: putfield      #2                  // Field modCount:I
        15: aload_1
        16: arraylength
        17: istore_2
        18: iinc          2, -1
        21: iload_2
        22: iflt          32
        25: aload_1
        26: iload_2
        27: aconst_null
        28: aastore
        29: goto          18
        32: aload_0
        33: iconst_0
        34: putfield      #4                  // Field count:I
        37: return
      LineNumberTable:
        line 531: 0
        line 532: 5
        line 533: 15
        line 534: 25
        line 535: 32
        line 536: 37
      StackMapTable: number_of_entries = 2
        frame_type = 253 /* append */
          offset_delta = 18
          locals = [ class "[Ljava/util/Hashtable$Entry;", int ]
        frame_type = 250 /* chop */
          offset_delta = 13

  public synchronized java.lang.Object clone();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED
    Code:
      stack=4, locals=3, args_size=1
         0: aload_0
         1: invokespecial #52                 // Method java/lang/Object.clone:()Ljava/lang/Object;
         4: checkcast     #20                 // class java/util/Hashtable
         7: astore_1
         8: aload_1
         9: aload_0
        10: getfield      #3                  // Field table:[Ljava/util/Hashtable$Entry;
        13: arraylength
        14: anewarray     #19                 // class java/util/Hashtable$Entry
        17: putfield      #3                  // Field table:[Ljava/util/Hashtable$Entry;
        20: aload_0
        21: getfield      #3                  // Field table:[Ljava/util/Hashtable$Entry;
        24: arraylength
        25: istore_2
        26: iload_2
        27: iinc          2, -1
        30: ifle          67
        33: aload_1
        34: getfield      #3                  // Field table:[Ljava/util/Hashtable$Entry;
        37: iload_2
        38: aload_0
        39: getfield      #3                  // Field table:[Ljava/util/Hashtable$Entry;
        42: iload_2
        43: aaload
        44: ifnull        62
        47: aload_0
        48: getfield      #3                  // Field table:[Ljava/util/Hashtable$Entry;
        51: iload_2
        52: aaload
        53: invokevirtual #53                 // Method java/util/Hashtable$Entry.clone:()Ljava/lang/Object;
        56: checkcast     #19                 // class java/util/Hashtable$Entry
        59: goto          63
        62: aconst_null
        63: aastore
        64: goto          26
        67: aload_1
        68: aconst_null
        69: putfield      #54                 // Field keySet:Ljava/util/Set;
        72: aload_1
        73: aconst_null
        74: putfield      #55                 // Field entrySet:Ljava/util/Set;
        77: aload_1
        78: aconst_null
        79: putfield      #56                 // Field values:Ljava/util/Collection;
        82: aload_1
        83: iconst_0
        84: putfield      #2                  // Field modCount:I
        87: aload_1
        88: areturn
        89: astore_1
        90: new           #58                 // class java/lang/InternalError
        93: dup
        94: aload_1
        95: invokespecial #59                 // Method java/lang/InternalError."<init>":(Ljava/lang/Throwable;)V
        98: athrow
      Exception table:
         from    to  target type
             0    88    89   Class java/lang/CloneNotSupportedException
      LineNumberTable:
        line 547: 0
        line 548: 8
        line 549: 20
        line 550: 33
        line 551: 53
        line 553: 67
        line 554: 72
        line 555: 77
        line 556: 82
        line 557: 87
        line 558: 89
        line 560: 90
      StackMapTable: number_of_entries = 5
        frame_type = 253 /* append */
          offset_delta = 26
          locals = [ class java/util/Hashtable, int ]
        frame_type = 255 /* full_frame */
          offset_delta = 35
          locals = [ class java/util/Hashtable, class java/util/Hashtable, int ]
          stack = [ class "[Ljava/util/Hashtable$Entry;", int ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class java/util/Hashtable, class java/util/Hashtable, int ]
          stack = [ class "[Ljava/util/Hashtable$Entry;", int, class java/util/Hashtable$Entry ]
        frame_type = 250 /* chop */
          offset_delta = 3
        frame_type = 255 /* full_frame */
          offset_delta = 21
          locals = [ class java/util/Hashtable ]
          stack = [ class java/lang/CloneNotSupportedException ]

  public synchronized java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED
    Code:
      stack=3, locals=8, args_size=1
         0: aload_0
         1: invokevirtual #60                 // Method size:()I
         4: iconst_1
         5: isub
         6: istore_1
         7: iload_1
         8: iconst_m1
         9: if_icmpne     15
        12: ldc           #61                 // String {}
        14: areturn
        15: new           #8                  // class java/lang/StringBuilder
        18: dup
        19: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
        22: astore_2
        23: aload_0
        24: invokevirtual #62                 // Method entrySet:()Ljava/util/Set;
        27: invokeinterface #45,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
        32: astore_3
        33: aload_2
        34: bipush        123
        36: invokevirtual #63                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
        39: pop
        40: iconst_0
        41: istore        4
        43: aload_3
        44: invokeinterface #47,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
        49: checkcast     #48                 // class java/util/Map$Entry
        52: astore        5
        54: aload         5
        56: invokeinterface #49,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
        61: astore        6
        63: aload         5
        65: invokeinterface #50,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
        70: astore        7
        72: aload_2
        73: aload         6
        75: aload_0
        76: if_acmpne     84
        79: ldc           #64                 // String (this Map)
        81: goto          89
        84: aload         6
        86: invokevirtual #65                 // Method java/lang/Object.toString:()Ljava/lang/String;
        89: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        92: pop
        93: aload_2
        94: bipush        61
        96: invokevirtual #63                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
        99: pop
       100: aload_2
       101: aload         7
       103: aload_0
       104: if_acmpne     112
       107: ldc           #64                 // String (this Map)
       109: goto          117
       112: aload         7
       114: invokevirtual #65                 // Method java/lang/Object.toString:()Ljava/lang/String;
       117: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       120: pop
       121: iload         4
       123: iload_1
       124: if_icmpne     137
       127: aload_2
       128: bipush        125
       130: invokevirtual #63                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
       133: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       136: areturn
       137: aload_2
       138: ldc           #66                 // String ,
       140: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       143: pop
       144: iinc          4, 1
       147: goto          43
      LineNumberTable:
        line 575: 0
        line 576: 7
        line 577: 12
        line 579: 15
        line 580: 23
        line 582: 33
        line 583: 40
        line 584: 43
        line 585: 54
        line 586: 63
        line 587: 72
        line 588: 93
        line 589: 100
        line 591: 121
        line 592: 127
        line 593: 137
        line 583: 144
      StackMapTable: number_of_entries = 7
        frame_type = 252 /* append */
          offset_delta = 15
          locals = [ int ]
        frame_type = 254 /* append */
          offset_delta = 27
          locals = [ class java/lang/StringBuilder, class java/util/Iterator, int ]
        frame_type = 255 /* full_frame */
          offset_delta = 40
          locals = [ class java/util/Hashtable, int, class java/lang/StringBuilder, class java/util/Iterator, int, class java/util/Map$Entry, class java/lang/Object, class java/lang/Object ]
          stack = [ class java/lang/StringBuilder ]
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class java/util/Hashtable, int, class java/lang/StringBuilder, class java/util/Iterator, int, class java/util/Map$Entry, class java/lang/Object, class java/lang/Object ]
          stack = [ class java/lang/StringBuilder, class java/lang/String ]
        frame_type = 86 /* same_locals_1_stack_item */
          stack = [ class java/lang/StringBuilder ]
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class java/util/Hashtable, int, class java/lang/StringBuilder, class java/util/Iterator, int, class java/util/Map$Entry, class java/lang/Object, class java/lang/Object ]
          stack = [ class java/lang/StringBuilder, class java/lang/String ]
        frame_type = 19 /* same */

  public java.util.Set<K> keySet();
    descriptor: ()Ljava/util/Set;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=1, args_size=1
         0: aload_0
         1: getfield      #54                 // Field keySet:Ljava/util/Set;
         4: ifnonnull     24
         7: aload_0
         8: new           #71                 // class java/util/Hashtable$KeySet
        11: dup
        12: aload_0
        13: aconst_null
        14: invokespecial #72                 // Method java/util/Hashtable$KeySet."<init>":(Ljava/util/Hashtable;Ljava/util/Hashtable$1;)V
        17: aload_0
        18: invokestatic  #73                 // Method java/util/Collections.synchronizedSet:(Ljava/util/Set;Ljava/lang/Object;)Ljava/util/Set;
        21: putfield      #54                 // Field keySet:Ljava/util/Set;
        24: aload_0
        25: getfield      #54                 // Field keySet:Ljava/util/Set;
        28: areturn
      LineNumberTable:
        line 641: 0
        line 642: 7
        line 643: 24
      StackMapTable: number_of_entries = 1
        frame_type = 24 /* same */
    Signature: #202                         // ()Ljava/util/Set<TK;>;

  public java.util.Set<java.util.Map$Entry<K, V>> entrySet();
    descriptor: ()Ljava/util/Set;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=1, args_size=1
         0: aload_0
         1: getfield      #55                 // Field entrySet:Ljava/util/Set;
         4: ifnonnull     24
         7: aload_0
         8: new           #74                 // class java/util/Hashtable$EntrySet
        11: dup
        12: aload_0
        13: aconst_null
        14: invokespecial #75                 // Method java/util/Hashtable$EntrySet."<init>":(Ljava/util/Hashtable;Ljava/util/Hashtable$1;)V
        17: aload_0
        18: invokestatic  #73                 // Method java/util/Collections.synchronizedSet:(Ljava/util/Set;Ljava/lang/Object;)Ljava/util/Set;
        21: putfield      #55                 // Field entrySet:Ljava/util/Set;
        24: aload_0
        25: getfield      #55                 // Field entrySet:Ljava/util/Set;
        28: areturn
      LineNumberTable:
        line 681: 0
        line 682: 7
        line 683: 24
      StackMapTable: number_of_entries = 1
        frame_type = 24 /* same */
    Signature: #203                         // ()Ljava/util/Set<Ljava/util/Map$Entry<TK;TV;>;>;

  public java.util.Collection<V> values();
    descriptor: ()Ljava/util/Collection;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=1, args_size=1
         0: aload_0
         1: getfield      #56                 // Field values:Ljava/util/Collection;
         4: ifnonnull     24
         7: aload_0
         8: new           #76                 // class java/util/Hashtable$ValueCollection
        11: dup
        12: aload_0
        13: aconst_null
        14: invokespecial #77                 // Method java/util/Hashtable$ValueCollection."<init>":(Ljava/util/Hashtable;Ljava/util/Hashtable$1;)V
        17: aload_0
        18: invokestatic  #78                 // Method java/util/Collections.synchronizedCollection:(Ljava/util/Collection;Ljava/lang/Object;)Ljava/util/Collection;
        21: putfield      #56                 // Field values:Ljava/util/Collection;
        24: aload_0
        25: getfield      #56                 // Field values:Ljava/util/Collection;
        28: areturn
      LineNumberTable:
        line 762: 0
        line 763: 7
        line 765: 24
      StackMapTable: number_of_entries = 1
        frame_type = 24 /* same */
    Signature: #205                         // ()Ljava/util/Collection<TV;>;

  public synchronized boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED
    Code:
      stack=3, locals=7, args_size=2
         0: aload_1
         1: aload_0
         2: if_acmpne     7
         5: iconst_1
         6: ireturn
         7: aload_1
         8: instanceof    #79                 // class java/util/Map
        11: ifne          16
        14: iconst_0
        15: ireturn
        16: aload_1
        17: checkcast     #79                 // class java/util/Map
        20: astore_2
        21: aload_2
        22: invokeinterface #26,  1           // InterfaceMethod java/util/Map.size:()I
        27: aload_0
        28: invokevirtual #60                 // Method size:()I
        31: if_icmpeq     36
        34: iconst_0
        35: ireturn
        36: aload_0
        37: invokevirtual #62                 // Method entrySet:()Ljava/util/Set;
        40: invokeinterface #45,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
        45: astore_3
        46: aload_3
        47: invokeinterface #46,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
        52: ifeq          134
        55: aload_3
        56: invokeinterface #47,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
        61: checkcast     #48                 // class java/util/Map$Entry
        64: astore        4
        66: aload         4
        68: invokeinterface #49,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
        73: astore        5
        75: aload         4
        77: invokeinterface #50,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
        82: astore        6
        84: aload         6
        86: ifnonnull     113
        89: aload_2
        90: aload         5
        92: invokeinterface #80,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
        97: ifnonnull     111
       100: aload_2
       101: aload         5
       103: invokeinterface #81,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
       108: ifne          131
       111: iconst_0
       112: ireturn
       113: aload         6
       115: aload_2
       116: aload         5
       118: invokeinterface #80,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
       123: invokevirtual #33                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       126: ifne          131
       129: iconst_0
       130: ireturn
       131: goto          46
       134: goto          143
       137: astore_3
       138: iconst_0
       139: ireturn
       140: astore_3
       141: iconst_0
       142: ireturn
       143: iconst_1
       144: ireturn
      Exception table:
         from    to  target type
            36   112   137   Class java/lang/ClassCastException
           113   130   137   Class java/lang/ClassCastException
           131   134   137   Class java/lang/ClassCastException
            36   112   140   Class java/lang/NullPointerException
           113   130   140   Class java/lang/NullPointerException
           131   134   140   Class java/lang/NullPointerException
      LineNumberTable:
        line 795: 0
        line 796: 5
        line 798: 7
        line 799: 14
        line 800: 16
        line 801: 21
        line 802: 34
        line 805: 36
        line 806: 46
        line 807: 55
        line 808: 66
        line 809: 75
        line 810: 84
        line 811: 89
        line 812: 111
        line 814: 113
        line 815: 129
        line 817: 131
        line 822: 134
        line 818: 137
        line 819: 138
        line 820: 140
        line 821: 141
        line 824: 143
      StackMapTable: number_of_entries = 11
        frame_type = 7 /* same */
        frame_type = 8 /* same */
        frame_type = 252 /* append */
          offset_delta = 19
          locals = [ class java/util/Map ]
        frame_type = 252 /* append */
          offset_delta = 9
          locals = [ class java/util/Iterator ]
        frame_type = 254 /* append */
          offset_delta = 64
          locals = [ class java/util/Map$Entry, class java/lang/Object, class java/lang/Object ]
        frame_type = 1 /* same */
        frame_type = 248 /* chop */
          offset_delta = 17
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class java/lang/ClassCastException ]
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class java/lang/NullPointerException ]
        frame_type = 2 /* same */

  public synchronized int hashCode();
    descriptor: ()I
    flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED
    Code:
      stack=2, locals=7, args_size=1
         0: iconst_0
         1: istore_1
         2: aload_0
         3: getfield      #4                  // Field count:I
         6: ifeq          18
         9: aload_0
        10: getfield      #18                 // Field loadFactor:F
        13: fconst_0
        14: fcmpg
        15: ifge          20
        18: iload_1
        19: ireturn
        20: aload_0
        21: aload_0
        22: getfield      #18                 // Field loadFactor:F
        25: fneg
        26: putfield      #18                 // Field loadFactor:F
        29: aload_0
        30: getfield      #3                  // Field table:[Ljava/util/Hashtable$Entry;
        33: astore_2
        34: aload_2
        35: astore_3
        36: aload_3
        37: arraylength
        38: istore        4
        40: iconst_0
        41: istore        5
        43: iload         5
        45: iload         4
        47: if_icmpge     85
        50: aload_3
        51: iload         5
        53: aaload
        54: astore        6
        56: aload         6
        58: ifnull        79
        61: iload_1
        62: aload         6
        64: invokevirtual #83                 // Method java/util/Hashtable$Entry.hashCode:()I
        67: iadd
        68: istore_1
        69: aload         6
        71: getfield      #34                 // Field java/util/Hashtable$Entry.next:Ljava/util/Hashtable$Entry;
        74: astore        6
        76: goto          56
        79: iinc          5, 1
        82: goto          43
        85: aload_0
        86: aload_0
        87: getfield      #18                 // Field loadFactor:F
        90: fneg
        91: putfield      #18                 // Field loadFactor:F
        94: iload_1
        95: ireturn
      LineNumberTable:
        line 845: 0
        line 846: 2
        line 847: 18
        line 849: 20
        line 850: 29
        line 851: 34
        line 852: 56
        line 853: 61
        line 854: 69
        line 851: 79
        line 858: 85
        line 860: 94
      StackMapTable: number_of_entries = 6
        frame_type = 252 /* append */
          offset_delta = 18
          locals = [ int ]
        frame_type = 1 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 22
          locals = [ class java/util/Hashtable, int, class "[Ljava/util/Hashtable$Entry;", class "[Ljava/util/Hashtable$Entry;", int, int ]
          stack = []
        frame_type = 252 /* append */
          offset_delta = 12
          locals = [ class java/util/Hashtable$Entry ]
        frame_type = 250 /* chop */
          offset_delta = 22
        frame_type = 248 /* chop */
          offset_delta = 5

  public synchronized V getOrDefault(java.lang.Object, V);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED
    Code:
      stack=2, locals=4, args_size=3
         0: aload_0
         1: aload_1
         2: invokevirtual #84                 // Method get:(Ljava/lang/Object;)Ljava/lang/Object;
         5: astore_3
         6: aconst_null
         7: aload_3
         8: if_acmpne     15
        11: aload_2
        12: goto          16
        15: aload_3
        16: areturn
      LineNumberTable:
        line 865: 0
        line 866: 6
      StackMapTable: number_of_entries = 2
        frame_type = 252 /* append */
          offset_delta = 15
          locals = [ class java/lang/Object ]
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
    Signature: #212                         // (Ljava/lang/Object;TV;)TV;

  public synchronized void forEach(java.util.function.BiConsumer<? super K, ? super V>);
    descriptor: (Ljava/util/function/BiConsumer;)V
    flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED
    Code:
      stack=3, locals=8, args_size=2
         0: aload_1
         1: invokestatic  #85                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
         4: pop
         5: aload_0
         6: getfield      #2                  // Field modCount:I
         9: istore_2
        10: aload_0
        11: getfield      #3                  // Field table:[Ljava/util/Hashtable$Entry;
        14: astore_3
        15: aload_3
        16: astore        4
        18: aload         4
        20: arraylength
        21: istore        5
        23: iconst_0
        24: istore        6
        26: iload         6
        28: iload         5
        30: if_icmpge     90
        33: aload         4
        35: iload         6
        37: aaload
        38: astore        7
        40: aload         7
        42: ifnull        84
        45: aload_1
        46: aload         7
        48: getfield      #39                 // Field java/util/Hashtable$Entry.key:Ljava/lang/Object;
        51: aload         7
        53: getfield      #32                 // Field java/util/Hashtable$Entry.value:Ljava/lang/Object;
        56: invokeinterface #86,  3           // InterfaceMethod java/util/function/BiConsumer.accept:(Ljava/lang/Object;Ljava/lang/Object;)V
        61: aload         7
        63: getfield      #34                 // Field java/util/Hashtable$Entry.next:Ljava/util/Hashtable$Entry;
        66: astore        7
        68: iload_2
        69: aload_0
        70: getfield      #2                  // Field modCount:I
        73: if_icmpeq     40
        76: new           #87                 // class java/util/ConcurrentModificationException
        79: dup
        80: invokespecial #88                 // Method java/util/ConcurrentModificationException."<init>":()V
        83: athrow
        84: iinc          6, 1
        87: goto          26
        90: return
      LineNumberTable:
        line 872: 0
        line 874: 5
        line 876: 10
        line 877: 15
        line 878: 40
        line 879: 45
        line 880: 61
        line 882: 68
        line 883: 76
        line 877: 84
        line 887: 90
      StackMapTable: number_of_entries = 4
        frame_type = 255 /* full_frame */
          offset_delta = 26
          locals = [ class java/util/Hashtable, class java/util/function/BiConsumer, int, class "[Ljava/util/Hashtable$Entry;", class "[Ljava/util/Hashtable$Entry;", int, int ]
          stack = []
        frame_type = 252 /* append */
          offset_delta = 13
          locals = [ class java/util/Hashtable$Entry ]
        frame_type = 250 /* chop */
          offset_delta = 43
        frame_type = 248 /* chop */
          offset_delta = 5
    Signature: #216                         // (Ljava/util/function/BiConsumer<-TK;-TV;>;)V

  public synchronized void replaceAll(java.util.function.BiFunction<? super K, ? super V, ? extends V>);
    descriptor: (Ljava/util/function/BiFunction;)V
    flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED
    Code:
      stack=4, locals=8, args_size=2
         0: aload_1
         1: invokestatic  #85                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
         4: pop
         5: aload_0
         6: getfield      #2                  // Field modCount:I
         9: istore_2
        10: aload_0
        11: getfield      #3                  // Field table:[Ljava/util/Hashtable$Entry;
        14: checkcast     #89                 // class "[Ljava/util/Hashtable$Entry;"
        17: astore_3
        18: aload_3
        19: astore        4
        21: aload         4
        23: arraylength
        24: istore        5
        26: iconst_0
        27: istore        6
        29: iload         6
        31: iload         5
        33: if_icmpge     101
        36: aload         4
        38: iload         6
        40: aaload
        41: astore        7
        43: aload         7
        45: ifnull        95
        48: aload         7
        50: aload_1
        51: aload         7
        53: getfield      #39                 // Field java/util/Hashtable$Entry.key:Ljava/lang/Object;
        56: aload         7
        58: getfield      #32                 // Field java/util/Hashtable$Entry.value:Ljava/lang/Object;
        61: invokeinterface #90,  3           // InterfaceMethod java/util/function/BiFunction.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
        66: invokestatic  #85                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
        69: putfield      #32                 // Field java/util/Hashtable$Entry.value:Ljava/lang/Object;
        72: aload         7
        74: getfield      #34                 // Field java/util/Hashtable$Entry.next:Ljava/util/Hashtable$Entry;
        77: astore        7
        79: iload_2
        80: aload_0
        81: getfield      #2                  // Field modCount:I
        84: if_icmpeq     43
        87: new           #87                 // class java/util/ConcurrentModificationException
        90: dup
        91: invokespecial #88                 // Method java/util/ConcurrentModificationException."<init>":()V
        94: athrow
        95: iinc          6, 1
        98: goto          29
       101: return
      LineNumberTable:
        line 892: 0
        line 894: 5
        line 896: 10
        line 897: 18
        line 898: 43
        line 899: 48
        line 900: 61
        line 899: 66
        line 901: 72
        line 903: 79
        line 904: 87
        line 897: 95
        line 908: 101
      StackMapTable: number_of_entries = 4
        frame_type = 255 /* full_frame */
          offset_delta = 29
          locals = [ class java/util/Hashtable, class java/util/function/BiFunction, int, class "[Ljava/util/Hashtable$Entry;", class "[Ljava/util/Hashtable$Entry;", int, int ]
          stack = []
        frame_type = 252 /* append */
          offset_delta = 13
          locals = [ class java/util/Hashtable$Entry ]
        frame_type = 250 /* chop */
          offset_delta = 51
        frame_type = 248 /* chop */
          offset_delta = 5
    Signature: #220                         // (Ljava/util/function/BiFunction<-TK;-TV;+TV;>;)V

  public synchronized V putIfAbsent(K, V);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED
    Code:
      stack=5, locals=8, args_size=3
         0: aload_2
         1: invokestatic  #85                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
         4: pop
         5: aload_0
         6: getfield      #3                  // Field table:[Ljava/util/Hashtable$Entry;
         9: astore_3
        10: aload_1
        11: invokevirtual #36                 // Method java/lang/Object.hashCode:()I
        14: istore        4
        16: iload         4
        18: ldc           #37                 // int 2147483647
        20: iand
        21: aload_3
        22: arraylength
        23: irem
        24: istore        5
        26: aload_3
        27: iload         5
        29: aaload
        30: astore        6
        32: aload         6
        34: ifnull        90
        37: aload         6
        39: getfield      #38                 // Field java/util/Hashtable$Entry.hash:I
        42: iload         4
        44: if_icmpne     80
        47: aload         6
        49: getfield      #39                 // Field java/util/Hashtable$Entry.key:Ljava/lang/Object;
        52: aload_1
        53: invokevirtual #33                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        56: ifeq          80
        59: aload         6
        61: getfield      #32                 // Field java/util/Hashtable$Entry.value:Ljava/lang/Object;
        64: astore        7
        66: aload         7
        68: ifnonnull     77
        71: aload         6
        73: aload_2
        74: putfield      #32                 // Field java/util/Hashtable$Entry.value:Ljava/lang/Object;
        77: aload         7
        79: areturn
        80: aload         6
        82: getfield      #34                 // Field java/util/Hashtable$Entry.next:Ljava/util/Hashtable$Entry;
        85: astore        6
        87: goto          32
        90: aload_0
        91: iload         4
        93: aload_1
        94: aload_2
        95: iload         5
        97: invokespecial #43                 // Method addEntry:(ILjava/lang/Object;Ljava/lang/Object;I)V
       100: aconst_null
       101: areturn
      LineNumberTable:
        line 912: 0
        line 915: 5
        line 916: 10
        line 917: 16
        line 919: 26
        line 920: 32
        line 921: 37
        line 922: 59
        line 923: 66
        line 924: 71
        line 926: 77
        line 920: 80
        line 930: 90
        line 931: 100
      StackMapTable: number_of_entries = 4
        frame_type = 255 /* full_frame */
          offset_delta = 32
          locals = [ class java/util/Hashtable, class java/lang/Object, class java/lang/Object, class "[Ljava/util/Hashtable$Entry;", int, int, class java/util/Hashtable$Entry ]
          stack = []
        frame_type = 252 /* append */
          offset_delta = 44
          locals = [ class java/lang/Object ]
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 9 /* same */
    Signature: #182                         // (TK;TV;)TV;

  public synchronized boolean remove(java.lang.Object, java.lang.Object);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;)Z
    flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED
    Code:
      stack=3, locals=8, args_size=3
         0: aload_2
         1: invokestatic  #85                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
         4: pop
         5: aload_0
         6: getfield      #3                  // Field table:[Ljava/util/Hashtable$Entry;
         9: astore_3
        10: aload_1
        11: invokevirtual #36                 // Method java/lang/Object.hashCode:()I
        14: istore        4
        16: iload         4
        18: ldc           #37                 // int 2147483647
        20: iand
        21: aload_3
        22: arraylength
        23: irem
        24: istore        5
        26: aload_3
        27: iload         5
        29: aaload
        30: astore        6
        32: aconst_null
        33: astore        7
        35: aload         6
        37: ifnull        143
        40: aload         6
        42: getfield      #38                 // Field java/util/Hashtable$Entry.hash:I
        45: iload         4
        47: if_icmpne     129
        50: aload         6
        52: getfield      #39                 // Field java/util/Hashtable$Entry.key:Ljava/lang/Object;
        55: aload_1
        56: invokevirtual #33                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        59: ifeq          129
        62: aload         6
        64: getfield      #32                 // Field java/util/Hashtable$Entry.value:Ljava/lang/Object;
        67: aload_2
        68: invokevirtual #33                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        71: ifeq          129
        74: aload_0
        75: dup
        76: getfield      #2                  // Field modCount:I
        79: iconst_1
        80: iadd
        81: putfield      #2                  // Field modCount:I
        84: aload         7
        86: ifnull        102
        89: aload         7
        91: aload         6
        93: getfield      #34                 // Field java/util/Hashtable$Entry.next:Ljava/util/Hashtable$Entry;
        96: putfield      #34                 // Field java/util/Hashtable$Entry.next:Ljava/util/Hashtable$Entry;
        99: goto          111
       102: aload_3
       103: iload         5
       105: aload         6
       107: getfield      #34                 // Field java/util/Hashtable$Entry.next:Ljava/util/Hashtable$Entry;
       110: aastore
       111: aload_0
       112: dup
       113: getfield      #4                  // Field count:I
       116: iconst_1
       117: isub
       118: putfield      #4                  // Field count:I
       121: aload         6
       123: aconst_null
       124: putfield      #32                 // Field java/util/Hashtable$Entry.value:Ljava/lang/Object;
       127: iconst_1
       128: ireturn
       129: aload         6
       131: astore        7
       133: aload         6
       135: getfield      #34                 // Field java/util/Hashtable$Entry.next:Ljava/util/Hashtable$Entry;
       138: astore        6
       140: goto          35
       143: iconst_0
       144: ireturn
      LineNumberTable:
        line 936: 0
        line 938: 5
        line 939: 10
        line 940: 16
        line 942: 26
        line 943: 32
        line 944: 40
        line 945: 74
        line 946: 84
        line 947: 89
        line 949: 102
        line 951: 111
        line 952: 121
        line 953: 127
        line 943: 129
        line 956: 143
      StackMapTable: number_of_entries = 5
        frame_type = 255 /* full_frame */
          offset_delta = 35
          locals = [ class java/util/Hashtable, class java/lang/Object, class java/lang/Object, class "[Ljava/util/Hashtable$Entry;", int, int, class java/util/Hashtable$Entry, class java/util/Hashtable$Entry ]
          stack = []
        frame_type = 251 /* same_frame_extended */
          offset_delta = 66
        frame_type = 8 /* same */
        frame_type = 17 /* same */
        frame_type = 250 /* chop */
          offset_delta = 13

  public synchronized boolean replace(K, V, V);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
    flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED
    Code:
      stack=2, locals=8, args_size=4
         0: aload_2
         1: invokestatic  #85                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
         4: pop
         5: aload_3
         6: invokestatic  #85                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
         9: pop
        10: aload_0
        11: getfield      #3                  // Field table:[Ljava/util/Hashtable$Entry;
        14: astore        4
        16: aload_1
        17: invokevirtual #36                 // Method java/lang/Object.hashCode:()I
        20: istore        5
        22: iload         5
        24: ldc           #37                 // int 2147483647
        26: iand
        27: aload         4
        29: arraylength
        30: irem
        31: istore        6
        33: aload         4
        35: iload         6
        37: aaload
        38: astore        7
        40: aload         7
        42: ifnull        99
        45: aload         7
        47: getfield      #38                 // Field java/util/Hashtable$Entry.hash:I
        50: iload         5
        52: if_icmpne     89
        55: aload         7
        57: getfield      #39                 // Field java/util/Hashtable$Entry.key:Ljava/lang/Object;
        60: aload_1
        61: invokevirtual #33                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        64: ifeq          89
        67: aload         7
        69: getfield      #32                 // Field java/util/Hashtable$Entry.value:Ljava/lang/Object;
        72: aload_2
        73: invokevirtual #33                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        76: ifeq          87
        79: aload         7
        81: aload_3
        82: putfield      #32                 // Field java/util/Hashtable$Entry.value:Ljava/lang/Object;
        85: iconst_1
        86: ireturn
        87: iconst_0
        88: ireturn
        89: aload         7
        91: getfield      #34                 // Field java/util/Hashtable$Entry.next:Ljava/util/Hashtable$Entry;
        94: astore        7
        96: goto          40
        99: iconst_0
       100: ireturn
      LineNumberTable:
        line 961: 0
        line 962: 5
        line 963: 10
        line 964: 16
        line 965: 22
        line 967: 33
        line 968: 40
        line 969: 45
        line 970: 67
        line 971: 79
        line 972: 85
        line 974: 87
        line 968: 89
        line 978: 99
      StackMapTable: number_of_entries = 4
        frame_type = 255 /* full_frame */
          offset_delta = 40
          locals = [ class java/util/Hashtable, class java/lang/Object, class java/lang/Object, class java/lang/Object, class "[Ljava/util/Hashtable$Entry;", int, int, class java/util/Hashtable$Entry ]
          stack = []
        frame_type = 46 /* same */
        frame_type = 1 /* same */
        frame_type = 9 /* same */
    Signature: #225                         // (TK;TV;TV;)Z

  public synchronized V replace(K, V);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED
    Code:
      stack=2, locals=8, args_size=3
         0: aload_2
         1: invokestatic  #85                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
         4: pop
         5: aload_0
         6: getfield      #3                  // Field table:[Ljava/util/Hashtable$Entry;
         9: astore_3
        10: aload_1
        11: invokevirtual #36                 // Method java/lang/Object.hashCode:()I
        14: istore        4
        16: iload         4
        18: ldc           #37                 // int 2147483647
        20: iand
        21: aload_3
        22: arraylength
        23: irem
        24: istore        5
        26: aload_3
        27: iload         5
        29: aaload
        30: astore        6
        32: aload         6
        34: ifnull        85
        37: aload         6
        39: getfield      #38                 // Field java/util/Hashtable$Entry.hash:I
        42: iload         4
        44: if_icmpne     75
        47: aload         6
        49: getfield      #39                 // Field java/util/Hashtable$Entry.key:Ljava/lang/Object;
        52: aload_1
        53: invokevirtual #33                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        56: ifeq          75
        59: aload         6
        61: getfield      #32                 // Field java/util/Hashtable$Entry.value:Ljava/lang/Object;
        64: astore        7
        66: aload         6
        68: aload_2
        69: putfield      #32                 // Field java/util/Hashtable$Entry.value:Ljava/lang/Object;
        72: aload         7
        74: areturn
        75: aload         6
        77: getfield      #34                 // Field java/util/Hashtable$Entry.next:Ljava/util/Hashtable$Entry;
        80: astore        6
        82: goto          32
        85: aconst_null
        86: areturn
      LineNumberTable:
        line 983: 0
        line 984: 5
        line 985: 10
        line 986: 16
        line 988: 26
        line 989: 32
        line 990: 37
        line 991: 59
        line 992: 66
        line 993: 72
        line 989: 75
        line 996: 85
      StackMapTable: number_of_entries = 3
        frame_type = 255 /* full_frame */
          offset_delta = 32
          locals = [ class java/util/Hashtable, class java/lang/Object, class java/lang/Object, class "[Ljava/util/Hashtable$Entry;", int, int, class java/util/Hashtable$Entry ]
          stack = []
        frame_type = 42 /* same */
        frame_type = 9 /* same */
    Signature: #182                         // (TK;TV;)TV;

  public synchronized V computeIfAbsent(K, java.util.function.Function<? super K, ? extends V>);
    descriptor: (Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
    flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED
    Code:
      stack=5, locals=8, args_size=3
         0: aload_2
         1: invokestatic  #85                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
         4: pop
         5: aload_0
         6: getfield      #3                  // Field table:[Ljava/util/Hashtable$Entry;
         9: astore_3
        10: aload_1
        11: invokevirtual #36                 // Method java/lang/Object.hashCode:()I
        14: istore        4
        16: iload         4
        18: ldc           #37                 // int 2147483647
        20: iand
        21: aload_3
        22: arraylength
        23: irem
        24: istore        5
        26: aload_3
        27: iload         5
        29: aaload
        30: astore        6
        32: aload         6
        34: ifnull        75
        37: aload         6
        39: getfield      #38                 // Field java/util/Hashtable$Entry.hash:I
        42: iload         4
        44: if_icmpne     65
        47: aload         6
        49: getfield      #39                 // Field java/util/Hashtable$Entry.key:Ljava/lang/Object;
        52: aload_1
        53: invokevirtual #33                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        56: ifeq          65
        59: aload         6
        61: getfield      #32                 // Field java/util/Hashtable$Entry.value:Ljava/lang/Object;
        64: areturn
        65: aload         6
        67: getfield      #34                 // Field java/util/Hashtable$Entry.next:Ljava/util/Hashtable$Entry;
        70: astore        6
        72: goto          32
        75: aload_2
        76: aload_1
        77: invokeinterface #91,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        82: astore        7
        84: aload         7
        86: ifnull        100
        89: aload_0
        90: iload         4
        92: aload_1
        93: aload         7
        95: iload         5
        97: invokespecial #43                 // Method addEntry:(ILjava/lang/Object;Ljava/lang/Object;I)V
       100: aload         7
       102: areturn
      LineNumberTable:
        line 1001: 0
        line 1003: 5
        line 1004: 10
        line 1005: 16
        line 1007: 26
        line 1008: 32
        line 1009: 37
        line 1011: 59
        line 1008: 65
        line 1015: 75
        line 1016: 84
        line 1017: 89
        line 1020: 100
      StackMapTable: number_of_entries = 4
        frame_type = 255 /* full_frame */
          offset_delta = 32
          locals = [ class java/util/Hashtable, class java/lang/Object, class java/util/function/Function, class "[Ljava/util/Hashtable$Entry;", int, int, class java/util/Hashtable$Entry ]
          stack = []
        frame_type = 32 /* same */
        frame_type = 9 /* same */
        frame_type = 252 /* append */
          offset_delta = 24
          locals = [ class java/lang/Object ]
    Signature: #229                         // (TK;Ljava/util/function/Function<-TK;+TV;>;)TV;

  public synchronized V computeIfPresent(K, java.util.function.BiFunction<? super K, ? super V, ? extends V>);
    descriptor: (Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
    flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED
    Code:
      stack=3, locals=9, args_size=3
         0: aload_2
         1: invokestatic  #85                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
         4: pop
         5: aload_0
         6: getfield      #3                  // Field table:[Ljava/util/Hashtable$Entry;
         9: astore_3
        10: aload_1
        11: invokevirtual #36                 // Method java/lang/Object.hashCode:()I
        14: istore        4
        16: iload         4
        18: ldc           #37                 // int 2147483647
        20: iand
        21: aload_3
        22: arraylength
        23: irem
        24: istore        5
        26: aload_3
        27: iload         5
        29: aaload
        30: astore        6
        32: aconst_null
        33: astore        7
        35: aload         6
        37: ifnull        155
        40: aload         6
        42: getfield      #38                 // Field java/util/Hashtable$Entry.hash:I
        45: iload         4
        47: if_icmpne     141
        50: aload         6
        52: getfield      #39                 // Field java/util/Hashtable$Entry.key:Ljava/lang/Object;
        55: aload_1
        56: invokevirtual #33                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        59: ifeq          141
        62: aload_2
        63: aload_1
        64: aload         6
        66: getfield      #32                 // Field java/util/Hashtable$Entry.value:Ljava/lang/Object;
        69: invokeinterface #90,  3           // InterfaceMethod java/util/function/BiFunction.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
        74: astore        8
        76: aload         8
        78: ifnonnull     131
        81: aload_0
        82: dup
        83: getfield      #2                  // Field modCount:I
        86: iconst_1
        87: iadd
        88: putfield      #2                  // Field modCount:I
        91: aload         7
        93: ifnull        109
        96: aload         7
        98: aload         6
       100: getfield      #34                 // Field java/util/Hashtable$Entry.next:Ljava/util/Hashtable$Entry;
       103: putfield      #34                 // Field java/util/Hashtable$Entry.next:Ljava/util/Hashtable$Entry;
       106: goto          118
       109: aload_3
       110: iload         5
       112: aload         6
       114: getfield      #34                 // Field java/util/Hashtable$Entry.next:Ljava/util/Hashtable$Entry;
       117: aastore
       118: aload_0
       119: dup
       120: getfield      #4                  // Field count:I
       123: iconst_1
       124: isub
       125: putfield      #4                  // Field count:I
       128: goto          138
       131: aload         6
       133: aload         8
       135: putfield      #32                 // Field java/util/Hashtable$Entry.value:Ljava/lang/Object;
       138: aload         8
       140: areturn
       141: aload         6
       143: astore        7
       145: aload         6
       147: getfield      #34                 // Field java/util/Hashtable$Entry.next:Ljava/util/Hashtable$Entry;
       150: astore        6
       152: goto          35
       155: aconst_null
       156: areturn
      LineNumberTable:
        line 1025: 0
        line 1027: 5
        line 1028: 10
        line 1029: 16
        line 1031: 26
        line 1032: 32
        line 1033: 40
        line 1034: 62
        line 1035: 76
        line 1036: 81
        line 1037: 91
        line 1038: 96
        line 1040: 109
        line 1042: 118
        line 1044: 131
        line 1046: 138
        line 1032: 141
        line 1049: 155
      StackMapTable: number_of_entries = 7
        frame_type = 255 /* full_frame */
          offset_delta = 35
          locals = [ class java/util/Hashtable, class java/lang/Object, class java/util/function/BiFunction, class "[Ljava/util/Hashtable$Entry;", int, int, class java/util/Hashtable$Entry, class java/util/Hashtable$Entry ]
          stack = []
        frame_type = 252 /* append */
          offset_delta = 73
          locals = [ class java/lang/Object ]
        frame_type = 8 /* same */
        frame_type = 12 /* same */
        frame_type = 6 /* same */
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 250 /* chop */
          offset_delta = 13
    Signature: #232                         // (TK;Ljava/util/function/BiFunction<-TK;-TV;+TV;>;)TV;

  public synchronized V compute(K, java.util.function.BiFunction<? super K, ? super V, ? extends V>);
    descriptor: (Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
    flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED
    Code:
      stack=5, locals=9, args_size=3
         0: aload_2
         1: invokestatic  #85                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
         4: pop
         5: aload_0
         6: getfield      #3                  // Field table:[Ljava/util/Hashtable$Entry;
         9: astore_3
        10: aload_1
        11: invokevirtual #36                 // Method java/lang/Object.hashCode:()I
        14: istore        4
        16: iload         4
        18: ldc           #37                 // int 2147483647
        20: iand
        21: aload_3
        22: arraylength
        23: irem
        24: istore        5
        26: aload_3
        27: iload         5
        29: aaload
        30: astore        6
        32: aconst_null
        33: astore        7
        35: aload         6
        37: ifnull        155
        40: aload         6
        42: getfield      #38                 // Field java/util/Hashtable$Entry.hash:I
        45: iload         4
        47: if_icmpne     141
        50: aload         6
        52: getfield      #39                 // Field java/util/Hashtable$Entry.key:Ljava/lang/Object;
        55: aload_1
        56: invokestatic  #92                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
        59: ifeq          141
        62: aload_2
        63: aload_1
        64: aload         6
        66: getfield      #32                 // Field java/util/Hashtable$Entry.value:Ljava/lang/Object;
        69: invokeinterface #90,  3           // InterfaceMethod java/util/function/BiFunction.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
        74: astore        8
        76: aload         8
        78: ifnonnull     131
        81: aload_0
        82: dup
        83: getfield      #2                  // Field modCount:I
        86: iconst_1
        87: iadd
        88: putfield      #2                  // Field modCount:I
        91: aload         7
        93: ifnull        109
        96: aload         7
        98: aload         6
       100: getfield      #34                 // Field java/util/Hashtable$Entry.next:Ljava/util/Hashtable$Entry;
       103: putfield      #34                 // Field java/util/Hashtable$Entry.next:Ljava/util/Hashtable$Entry;
       106: goto          118
       109: aload_3
       110: iload         5
       112: aload         6
       114: getfield      #34                 // Field java/util/Hashtable$Entry.next:Ljava/util/Hashtable$Entry;
       117: aastore
       118: aload_0
       119: dup
       120: getfield      #4                  // Field count:I
       123: iconst_1
       124: isub
       125: putfield      #4                  // Field count:I
       128: goto          138
       131: aload         6
       133: aload         8
       135: putfield      #32                 // Field java/util/Hashtable$Entry.value:Ljava/lang/Object;
       138: aload         8
       140: areturn
       141: aload         6
       143: astore        7
       145: aload         6
       147: getfield      #34                 // Field java/util/Hashtable$Entry.next:Ljava/util/Hashtable$Entry;
       150: astore        6
       152: goto          35
       155: aload_2
       156: aload_1
       157: aconst_null
       158: invokeinterface #90,  3           // InterfaceMethod java/util/function/BiFunction.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       163: astore        7
       165: aload         7
       167: ifnull        181
       170: aload_0
       171: iload         4
       173: aload_1
       174: aload         7
       176: iload         5
       178: invokespecial #43                 // Method addEntry:(ILjava/lang/Object;Ljava/lang/Object;I)V
       181: aload         7
       183: areturn
      LineNumberTable:
        line 1054: 0
        line 1056: 5
        line 1057: 10
        line 1058: 16
        line 1060: 26
        line 1061: 32
        line 1062: 40
        line 1063: 62
        line 1064: 76
        line 1065: 81
        line 1066: 91
        line 1067: 96
        line 1069: 109
        line 1071: 118
        line 1073: 131
        line 1075: 138
        line 1061: 141
        line 1079: 155
        line 1080: 165
        line 1081: 170
        line 1084: 181
      StackMapTable: number_of_entries = 8
        frame_type = 255 /* full_frame */
          offset_delta = 35
          locals = [ class java/util/Hashtable, class java/lang/Object, class java/util/function/BiFunction, class "[Ljava/util/Hashtable$Entry;", int, int, class java/util/Hashtable$Entry, class java/util/Hashtable$Entry ]
          stack = []
        frame_type = 252 /* append */
          offset_delta = 73
          locals = [ class java/lang/Object ]
        frame_type = 8 /* same */
        frame_type = 12 /* same */
        frame_type = 6 /* same */
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 250 /* chop */
          offset_delta = 13
        frame_type = 252 /* append */
          offset_delta = 25
          locals = [ class java/lang/Object ]
    Signature: #232                         // (TK;Ljava/util/function/BiFunction<-TK;-TV;+TV;>;)TV;

  public synchronized V merge(K, V, java.util.function.BiFunction<? super V, ? super V, ? extends V>);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
    flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED
    Code:
      stack=5, locals=10, args_size=4
         0: aload_3
         1: invokestatic  #85                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
         4: pop
         5: aload_0
         6: getfield      #3                  // Field table:[Ljava/util/Hashtable$Entry;
         9: astore        4
        11: aload_1
        12: invokevirtual #36                 // Method java/lang/Object.hashCode:()I
        15: istore        5
        17: iload         5
        19: ldc           #37                 // int 2147483647
        21: iand
        22: aload         4
        24: arraylength
        25: irem
        26: istore        6
        28: aload         4
        30: iload         6
        32: aaload
        33: astore        7
        35: aconst_null
        36: astore        8
        38: aload         7
        40: ifnull        159
        43: aload         7
        45: getfield      #38                 // Field java/util/Hashtable$Entry.hash:I
        48: iload         5
        50: if_icmpne     145
        53: aload         7
        55: getfield      #39                 // Field java/util/Hashtable$Entry.key:Ljava/lang/Object;
        58: aload_1
        59: invokevirtual #33                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        62: ifeq          145
        65: aload_3
        66: aload         7
        68: getfield      #32                 // Field java/util/Hashtable$Entry.value:Ljava/lang/Object;
        71: aload_2
        72: invokeinterface #90,  3           // InterfaceMethod java/util/function/BiFunction.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
        77: astore        9
        79: aload         9
        81: ifnonnull     135
        84: aload_0
        85: dup
        86: getfield      #2                  // Field modCount:I
        89: iconst_1
        90: iadd
        91: putfield      #2                  // Field modCount:I
        94: aload         8
        96: ifnull        112
        99: aload         8
       101: aload         7
       103: getfield      #34                 // Field java/util/Hashtable$Entry.next:Ljava/util/Hashtable$Entry;
       106: putfield      #34                 // Field java/util/Hashtable$Entry.next:Ljava/util/Hashtable$Entry;
       109: goto          122
       112: aload         4
       114: iload         6
       116: aload         7
       118: getfield      #34                 // Field java/util/Hashtable$Entry.next:Ljava/util/Hashtable$Entry;
       121: aastore
       122: aload_0
       123: dup
       124: getfield      #4                  // Field count:I
       127: iconst_1
       128: isub
       129: putfield      #4                  // Field count:I
       132: goto          142
       135: aload         7
       137: aload         9
       139: putfield      #32                 // Field java/util/Hashtable$Entry.value:Ljava/lang/Object;
       142: aload         9
       144: areturn
       145: aload         7
       147: astore        8
       149: aload         7
       151: getfield      #34                 // Field java/util/Hashtable$Entry.next:Ljava/util/Hashtable$Entry;
       154: astore        7
       156: goto          38
       159: aload_2
       160: ifnull        173
       163: aload_0
       164: iload         5
       166: aload_1
       167: aload_2
       168: iload         6
       170: invokespecial #43                 // Method addEntry:(ILjava/lang/Object;Ljava/lang/Object;I)V
       173: aload_2
       174: areturn
      LineNumberTable:
        line 1089: 0
        line 1091: 5
        line 1092: 11
        line 1093: 17
        line 1095: 28
        line 1096: 35
        line 1097: 43
        line 1098: 65
        line 1099: 79
        line 1100: 84
        line 1101: 94
        line 1102: 99
        line 1104: 112
        line 1106: 122
        line 1108: 135
        line 1110: 142
        line 1096: 145
        line 1114: 159
        line 1115: 163
        line 1118: 173
      StackMapTable: number_of_entries = 8
        frame_type = 255 /* full_frame */
          offset_delta = 38
          locals = [ class java/util/Hashtable, class java/lang/Object, class java/lang/Object, class java/util/function/BiFunction, class "[Ljava/util/Hashtable$Entry;", int, int, class java/util/Hashtable$Entry, class java/util/Hashtable$Entry ]
          stack = []
        frame_type = 252 /* append */
          offset_delta = 73
          locals = [ class java/lang/Object ]
        frame_type = 9 /* same */
        frame_type = 12 /* same */
        frame_type = 6 /* same */
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 250 /* chop */
          offset_delta = 13
        frame_type = 13 /* same */
    Signature: #236                         // (TK;TV;Ljava/util/function/BiFunction<-TV;-TV;+TV;>;)TV;

  static java.util.Iterator access$100(java.util.Hashtable, int);
    descriptor: (Ljava/util/Hashtable;I)Ljava/util/Iterator;
    flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokespecial #5                  // Method getIterator:(I)Ljava/util/Iterator;
         5: areturn
      LineNumberTable:
        line 131: 0

  static int access$200(java.util.Hashtable);
    descriptor: (Ljava/util/Hashtable;)I
    flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #4                  // Field count:I
         4: ireturn
      LineNumberTable:
        line 131: 0

  static java.util.Hashtable$Entry[] access$400(java.util.Hashtable);
    descriptor: (Ljava/util/Hashtable;)[Ljava/util/Hashtable$Entry;
    flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #3                  // Field table:[Ljava/util/Hashtable$Entry;
         4: areturn
      LineNumberTable:
        line 131: 0

  static int access$508(java.util.Hashtable);
    descriptor: (Ljava/util/Hashtable;)I
    flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=4, locals=1, args_size=1
         0: aload_0
         1: dup
         2: getfield      #2                  // Field modCount:I
         5: dup_x1
         6: iconst_1
         7: iadd
         8: putfield      #2                  // Field modCount:I
        11: ireturn
      LineNumberTable:
        line 131: 0

  static int access$210(java.util.Hashtable);
    descriptor: (Ljava/util/Hashtable;)I
    flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=4, locals=1, args_size=1
         0: aload_0
         1: dup
         2: getfield      #4                  // Field count:I
         5: dup_x1
         6: iconst_1
         7: isub
         8: putfield      #4                  // Field count:I
        11: ireturn
      LineNumberTable:
        line 131: 0

  static int access$500(java.util.Hashtable);
    descriptor: (Ljava/util/Hashtable;)I
    flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #2                  // Field modCount:I
         4: ireturn
      LineNumberTable:
        line 131: 0
}
Signature: #257                         // <K:Ljava/lang/Object;V:Ljava/lang/Object;>Ljava/util/Dictionary<TK;TV;>;Ljava/util/Map<TK;TV;>;Ljava/lang/Cloneable;Ljava/io/Serializable;
SourceFile: "Hashtable.java"
InnerClasses:
  static #111;                            // class java/util/Hashtable$1
  public static #114= #48 of #79;         // Entry=class java/util/Map$Entry of class java/util/Map

C:\Users\itsu0\.jdks\corretto-1.8.0_282\jre\lib\rt\java\util>C:\Users\itsu0\.j